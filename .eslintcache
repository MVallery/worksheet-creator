[{"C:\\projects\\worksheet-creator\\src\\index.js":"1","C:\\projects\\worksheet-creator\\src\\reportWebVitals.js":"2","C:\\projects\\worksheet-creator\\src\\App.js":"3","C:\\projects\\worksheet-creator\\src\\general\\pages\\home.js":"4","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\create-worksheet.js":"5","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\DisplayUserSelection.js":"6","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\ConceptCustomization.js":"7","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\DisplayAssignment.js":"8","C:\\projects\\worksheet-creator\\src\\shared\\context\\auth-context.js":"9","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\ConceptSelection.js":"10","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\FinalSelections.js":"11","C:\\projects\\worksheet-creator\\src\\user\\pages\\Authenticate.js":"12","C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\MainNavigation.js":"13","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\input.js":"14","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\ConceptGeneral.js":"15","C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\NavLinks.js":"16","C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\SideDrawer.js":"17","C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\MainHeader.js":"18","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\dec-alg.js":"19","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub-fract.js":"20","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\multiply-dec.js":"21","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub-dec.js":"22","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub.js":"23","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\divide-dec.js":"24","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\general.js":"25","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\multiply.js":"26","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\area-perimeter.js":"27","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\tables.js":"28","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\divide.js":"29","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Card.js":"30","C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\Input.js":"31","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Backdrop.js":"32","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\LoadingSpinner.js":"33","C:\\projects\\worksheet-creator\\src\\shared\\hooks\\form-hook.js":"34","C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\ImageUpload.js":"35","C:\\projects\\worksheet-creator\\src\\shared\\hooks\\http-hook.js":"36","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\ErrorModal.js":"37","C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\Button.js":"38","C:\\projects\\worksheet-creator\\src\\shared\\util\\validators.js":"39","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\Table.js":"40","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\vertical-align.js":"41","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Modal.js":"42","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\order-of-ops.js":"43","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\UserWorksheets.js":"44","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetList.js":"45","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetItem.js":"46","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Map.js":"47","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetData.js":"48"},{"size":589,"mtime":1614919476796,"results":"49","hashOfConfig":"50"},{"size":362,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":11563,"mtime":1615683947473,"results":"52","hashOfConfig":"50"},{"size":2506,"mtime":1614919476796,"results":"53","hashOfConfig":"50"},{"size":12084,"mtime":1615645956535,"results":"54","hashOfConfig":"50"},{"size":1414,"mtime":1615645956535,"results":"55","hashOfConfig":"50"},{"size":12816,"mtime":1615607706200,"results":"56","hashOfConfig":"50"},{"size":1274,"mtime":1615683931663,"results":"57","hashOfConfig":"50"},{"size":187,"mtime":1614912226795,"results":"58","hashOfConfig":"50"},{"size":2432,"mtime":1615522415657,"results":"59","hashOfConfig":"50"},{"size":1886,"mtime":1615523102723,"results":"60","hashOfConfig":"50"},{"size":4824,"mtime":1615645956535,"results":"61","hashOfConfig":"50"},{"size":1478,"mtime":1615645171404,"results":"62","hashOfConfig":"50"},{"size":973,"mtime":1614919476781,"results":"63","hashOfConfig":"50"},{"size":1732,"mtime":1615522199752,"results":"64","hashOfConfig":"50"},{"size":894,"mtime":1615645171404,"results":"65","hashOfConfig":"50"},{"size":609,"mtime":1614912226692,"results":"66","hashOfConfig":"50"},{"size":287,"mtime":1614912226631,"results":"67","hashOfConfig":"50"},{"size":2255,"mtime":1614919476781,"results":"68","hashOfConfig":"50"},{"size":10105,"mtime":1615645956535,"results":"69","hashOfConfig":"50"},{"size":14883,"mtime":1614919476781,"results":"70","hashOfConfig":"50"},{"size":7126,"mtime":1615645956535,"results":"71","hashOfConfig":"50"},{"size":28108,"mtime":1615645956535,"results":"72","hashOfConfig":"50"},{"size":17726,"mtime":1614990944247,"results":"73","hashOfConfig":"50"},{"size":10520,"mtime":1614919476781,"results":"74","hashOfConfig":"50"},{"size":14514,"mtime":1615645956535,"results":"75","hashOfConfig":"50"},{"size":4813,"mtime":1614919476781,"results":"76","hashOfConfig":"50"},{"size":13673,"mtime":1615645956534,"results":"77","hashOfConfig":"50"},{"size":12297,"mtime":1615645956534,"results":"78","hashOfConfig":"50"},{"size":217,"mtime":1614912226736,"results":"79","hashOfConfig":"50"},{"size":2100,"mtime":1614912226615,"results":"80","hashOfConfig":"50"},{"size":289,"mtime":1614912226722,"results":"81","hashOfConfig":"50"},{"size":286,"mtime":1614912226759,"results":"82","hashOfConfig":"50"},{"size":1545,"mtime":1614912226797,"results":"83","hashOfConfig":"50"},{"size":1794,"mtime":1614912226597,"results":"84","hashOfConfig":"50"},{"size":1390,"mtime":1614912226798,"results":"85","hashOfConfig":"50"},{"size":407,"mtime":1614912226744,"results":"86","hashOfConfig":"50"},{"size":1017,"mtime":1614912226577,"results":"87","hashOfConfig":"50"},{"size":1710,"mtime":1614912226799,"results":"88","hashOfConfig":"50"},{"size":1171,"mtime":1614911802810,"results":"89","hashOfConfig":"50"},{"size":4585,"mtime":1614919476781,"results":"90","hashOfConfig":"50"},{"size":1330,"mtime":1614912226788,"results":"91","hashOfConfig":"50"},{"size":19492,"mtime":1615645956534,"results":"92","hashOfConfig":"50"},{"size":1807,"mtime":1615645956534,"results":"93","hashOfConfig":"50"},{"size":1322,"mtime":1615612523979,"results":"94","hashOfConfig":"50"},{"size":2802,"mtime":1615674725092,"results":"95","hashOfConfig":"50"},{"size":981,"mtime":1614912226773,"results":"96","hashOfConfig":"50"},{"size":4330,"mtime":1615674853241,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"ahlkum",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":86,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"100"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"100"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},"C:\\projects\\worksheet-creator\\src\\index.js",[],["219","220"],"C:\\projects\\worksheet-creator\\src\\reportWebVitals.js",[],"C:\\projects\\worksheet-creator\\src\\App.js",["221","222","223","224","225","226","227","228"],"C:\\projects\\worksheet-creator\\src\\general\\pages\\home.js",["229","230","231","232","233","234","235"],"import { Link} from \"react-router-dom\";\r\nimport Dice from '../../app-files/images/dice.png'\r\nimport Students from '../../app-files/images/students.png'\r\nimport Teacher from '../../app-files/images/teacher.png'\r\nimport Clock from '../../app-files/images/clock.png'\r\nconst Home = (props) => {\r\n    return (\r\n    <div className='main-container'>   \r\n    <div className=\"picture-background\">\r\n        <div className=\"title-banner\">  \r\n          <div className=\"title\">\r\n              <div>      \r\n            <h1><span className=\"in\">IN</span><span className='finite'>finite</span> Math</h1>   \r\n            </div>     \r\n            \r\n          </div> \r\n          <div>\r\n          <h2>Worksheet Creator</h2>\r\n          <p>Create fully customized math worksheets with the click of a button.</p>\r\n          </div>\r\n          {/* <img className= \"infinity\" src={InfinitySymbol}></img> */}\r\n        </div> \r\n\r\n        <div className='create-assign-container'>\r\n        <Link className='create-assign-button' to=\"/concept-selection\" >Create now!</Link>\r\n        </div>\r\n        </div>\r\n        <div className=\"info-card-container\">\r\n        <div className=\"info-card\">\r\n        <h3>Made for teachers</h3>\r\n         <img className= \"info-card-icons\" src={Teacher} alt=\"teacher\"></img>\r\n\r\n        <p>Quickly create assignments for your students aligned with your standards and your students needs</p>\r\n        </div>\r\n        <div className=\"info-card\">\r\n        <h3>Customize & Differentiate</h3>\r\n        <img className= \"info-card-icons\" src={Students} alt=\"students\"></img>\r\n\r\n        <p>Truly customize and differentiate your assignments to meet the needs of all of your students.</p>\r\n        </div>\r\n        </div>\r\n        <div className=\"info-card-container\">\r\n        <div className=\"info-card\">\r\n        <h3>Instant</h3>\r\n        <img className= \"info-card-icons\" src={Clock} alt=\"clock\"></img>\r\n\r\n        <p>After making your selections you will almost instantly have have a unique assignment to use with \r\n          your students that is perfectly formatted and ready to download!</p>\r\n        </div>\r\n        <div className=\"info-card\">\r\n          <h3>Infinite</h3>\r\n          <img className= \"info-card-icons\" src={Dice} alt=\"dice\"></img>\r\n\r\n          <p>Since our program uses randomly generated problems you can create an almost infinite amount of \r\n            worksheets that are uniquely made based on your selections.</p>\r\n        </div>\r\n        </div>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\create-worksheet.js",["236","237","238"],"import '../../App.css';\r\nimport React, { useContext, useHistory } from \"react\";\r\n\r\nimport {randAddWhole, randSubWhole} from \"../problems/add-sub\";\r\nimport {randOrderOps} from \"../problems/order-of-ops\";\r\nimport {randAddDec, randSubDec} from '../problems/add-sub-dec';\r\nimport {randMultDec} from '../problems/multiply-dec';\r\nimport {randDivDec} from '../problems/divide-dec';\r\nimport {randTable}from '../problems/tables';\r\nimport * as asf from '../problems/add-sub-fract';\r\nimport {randMultWhole}from '../problems/multiply';\r\nimport {randDivWhole} from '../problems/divide';\r\nimport {shuffleArray} from '../problems/general';\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  Font,\r\n} from \"@react-pdf/renderer\";\r\nimport { randArea } from '../problems/area-perimeter';\r\n\r\nFont.registerHyphenationCallback(word => [word]); //makes words not break/hyphenate\r\nconst styles = StyleSheet.create({\r\n  question: {\r\n    marginBottom:10,\r\n    fontSize: 12,\r\n    textAlign: 'justify',\r\n    // fontFamily: 'arial'\r\n  },\r\n  questionAnswer: {\r\n    flexGrow: 1,\r\n    marginTop: 20,\r\n    marginBottom:20,\r\n    marginRight:40,\r\n    fontSize: 12,\r\n    marginLeft:40,\r\n    textAlign: 'justify',\r\n  },\r\n  column: {\r\n    flexDirection:'row',\r\n    marginTop: 10,\r\n    marginRight:20,\r\n    fontSize:12,\r\n    textAlign:'justify',\r\n    paddingRight:50,\r\n    paddingBottom:10,\r\n    flexGrow: 1,\r\n  },\r\n  columnQuestion: {\r\n    width: 230,\r\n    marginRight:20,\r\n  },\r\n  num: {\r\n    width:25,\r\n    marginLeft:10,\r\n  },\r\n  answerKey: {\r\n    flexDirection:'row',\r\n    marginTop: 10,\r\n  },\r\n  answerLetter: {\r\n    flexDirection:'row',\r\n    padding: 10,\r\n  },\r\n  viewList: {\r\n    display:'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    // alignItems: 'center',\r\n\r\n  },\r\n  viewQuestion: {\r\n    flexGrow: 1,\r\n\r\n  }\r\n});\r\nexport const handleCreateWorksheet = (userSelection, generalSelection) => { \r\n//creates the worksheet using react-pdf based on userSelection (array of objects: {level:, specify:, quantity:,})  \r\n\r\nvar i\r\n  var [answerKey, questionAnswerList, question] = [[],[],'']\r\n  const createQuestionAnswerList = (userSelection, randQuest) => { \r\n    var x\r\n    for (x = 0; x < userSelection.quantity; x++) {\r\n      // question = array[randWhole(0, array.length-1)]({level:userSelection.level, specify:userSelection.specify})\r\n      question = randQuest(userSelection)\r\n      console.log(question)\r\n      console.log(randQuest(userSelection))\r\n      questionAnswerList.push({\r\n        question:<View ><Text style={styles.question}>{question.text} </Text> \r\n                    <Text>{question.answerChoices[0]} </Text> \r\n                    <Text>{question.answerChoices[1]} </Text> \r\n                    <Text>{question.answerChoices[2]} </Text> \r\n                    <Text>{question.answerChoices[3]} </Text>\r\n                </View>,\r\n        answer: <Text>{question.answerChoices[4]}</Text>\r\n});\r\n};\r\n    }\r\nconst createQuestionAnswerListTable = (userSelection, randQuest) => {\r\n  for (var x = 0; x <userSelection.quantity; x++) {\r\n    question = randQuest(userSelection)\r\n    if (typeof question.answerChoices[0] === 'string' ){\r\n      questionAnswerList.push({\r\n        question: <View>{question.text}<Text>{question.answerChoices[0]}</Text>\r\n                                       <Text>{question.answerChoices[1]}</Text>\r\n                                       <Text>{question.answerChoices[2]}</Text>\r\n                                       <Text>{question.answerChoices[3]}</Text>\r\n                  </View>,\r\n        answer: <Text>{question.answerChoices[4]}</Text>\r\n      })\r\n    }else {\r\n      if (userSelection.docStyle) { //columns & Table answer choices\r\n        questionAnswerList.push({\r\n          question: <View><Text>{question.text}</Text> \r\n                    <View style={styles.answerLetter}>{question.answerChoices[0]}</View>\r\n                    <View style={styles.answerLetter}>{question.answerChoices[1]}</View>\r\n                    <View style={styles.answerLetter}>{question.answerChoices[2]}</View>\r\n                    <View style={styles.answerLetter}>{question.answerChoices[3]}</View>\r\n                    \r\n                    </View>,\r\n          answer: question.answerChoices[4]\r\n        })\r\n      }else{\r\n        questionAnswerList.push({\r\n          question: <View><Text>{question.text}</Text> \r\n                    <View style={styles.answerLetter}>{question.answerChoices[0]}\r\n                    {question.answerChoices[2]}</View>\r\n                    <View style={styles.answerLetter}>{question.answerChoices[1]}\r\n                    {question.answerChoices[3]}</View>\r\n                    \r\n                    </View>,\r\n          answer: question.answerChoices[4]\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n  for (i = 0; i < userSelection.length; i++) {\r\n    //loops through userSelection and based on the the concept selected by the user, \r\n    //  adds a random question from the conceptArray using createQuestionAnswerList function.\r\n    if (userSelection[i].concept === \"Adding Whole Numbers\") {\r\n      if (userSelection[i]['Vertical']){\r\n        createQuestionAnswerListTable(userSelection[i], randAddWhole)\r\n      } else {\r\n        createQuestionAnswerList(userSelection[i], randAddWhole)\r\n      }\r\n      }else if (userSelection[i].concept === \"Subtracting Whole Numbers\") {\r\n        if (userSelection[i]['Vertical']){\r\n          createQuestionAnswerListTable(userSelection[i], randSubWhole)\r\n        } else {\r\n        createQuestionAnswerList(userSelection[i], randSubWhole)\r\n        }\r\n      }else if (userSelection[i].concept === \"Multiplying Whole Numbers\") {      \r\n        if (userSelection[i]['Vertical']){\r\n          createQuestionAnswerListTable(userSelection[i], randMultWhole)\r\n        } else {\r\n        createQuestionAnswerList(userSelection[i], randMultWhole)\r\n        }\r\n      }else if (userSelection[i].concept === \"Dividing Whole Numbers\") {\r\n        if (userSelection[i]['Vertical']){\r\n          createQuestionAnswerListTable(userSelection[i], randDivWhole)\r\n        } else {\r\n          createQuestionAnswerList(userSelection[i], randDivWhole)\r\n        }\r\n      }else if (userSelection[i].concept === \"Order of Operations\") {\r\n        createQuestionAnswerList(userSelection[i], randOrderOps)\r\n      }else if (userSelection[i].concept === \"Dividing Decimals\") {\r\n        if (userSelection[i]['Vertical']){\r\n          createQuestionAnswerListTable(userSelection[i], randDivDec)\r\n        } else {\r\n          createQuestionAnswerList(userSelection[i], randDivDec)\r\n        }\r\n      }else if (userSelection[i].concept === \"Multiplying Decimals\" || userSelection[i].concept === 'Mixed Multiplying Decimals' || userSelection[i].concept === 'Multiplying Decimals Application') {\r\n        if (userSelection[i]['Vertical']){\r\n          createQuestionAnswerListTable(userSelection[i], randMultDec)\r\n        } else {\r\n          createQuestionAnswerList(userSelection[i], randMultDec)\r\n        }\r\n      }else if (userSelection[i].concept === \"Adding Decimals\") {\r\n        if (userSelection[i]['Vertical']){\r\n          createQuestionAnswerListTable(userSelection[i], randAddDec)\r\n        } else {\r\n          createQuestionAnswerList(userSelection[i], randAddDec)\r\n        }\r\n      }else if (userSelection[i].concept === \"Subtracting Decimals\") {\r\n        // conceptArray = [alg.subDecPV, alg.subDecWhole]\r\n          if (userSelection[i]['Vertical']){\r\n            createQuestionAnswerListTable(userSelection[i], randSubDec)\r\n          } else {\r\n            createQuestionAnswerList(userSelection[i], randSubDec)\r\n          }\r\n      }else if (userSelection[i].concept === \"Adding Fractions\") {\r\n        createQuestionAnswerListTable(userSelection[i], asf.addFract)\r\n      }else if (userSelection[i].concept === \"Dividing Fractions\") {\r\n        createQuestionAnswerListTable(userSelection[i], asf.divideFract)\r\n      }else if (userSelection[i].concept === \"Multiplying Fractions\") {\r\n        createQuestionAnswerListTable(userSelection[i], asf.multFract)\r\n      }else if (userSelection[i].concept === \"Subtracting Fractions\") {\r\n        createQuestionAnswerListTable(userSelection[i], asf.subFract)\r\n      }else if (userSelection[i].concept === \"Input Output Tables\") {\r\n        createQuestionAnswerListTable(userSelection[i], randTable)\r\n      }else if (userSelection[i].concept === \"Area and Perimeter\") {\r\n        createQuestionAnswerListTable(userSelection[i], randArea)\r\n      }\r\n}\r\n\r\n  if (userSelection.length>0){\r\n    if (generalSelection.order===false) {\r\n      questionAnswerList = shuffleArray(questionAnswerList)\r\n    }\r\n  }\r\n \r\n  var questionList = [] //a list of only the questions text\r\n  var questionAnswerViewList = []\r\n\r\n  answerKey = [] \r\n  for (var num=0; num<questionAnswerList.length;num++) { \r\n    //loops through and adds question content only to questionList and answers only to answerKey formatted for react-pdf. \r\n    //Adds question Numbers (num) and styles based on docStyle into columns.\r\n    if (generalSelection.docStyle) { \r\n      if (num+1>questionAnswerList.length-1){ //odd # questions /if num goes above the length of the array, only add one question.\r\n        questionList.push(<View wrap={false} style={styles.column}>\r\n          <Text style={styles.num}>{num+1})</Text>\r\n            <View style={styles.columnQuestion}>\r\n              {questionAnswerList[num].question}\r\n            </View>\r\n          </View>)\r\n        answerKey.push(<View style={styles.answerKey}><Text>{num+1})</Text>{questionAnswerList[num].answer}</View>)\r\n\r\n      }else{ //even number of questions\r\n        questionList.push(\r\n        <View wrap={false} style={styles.column}>\r\n          <Text style={styles.num}>{num+1})</Text>\r\n            <View style={styles.columnQuestion}>\r\n              {questionAnswerList[num].question}\r\n            </View>\r\n          <Text style={styles.num}>{num+2})</Text>\r\n            <View style={styles.columnQuestion}>\r\n              {questionAnswerList[num+1].question}\r\n            </View>\r\n        </View>\r\n        )\r\n        answerKey.push(<View style={styles.answerKey}><Text>{num+1})</Text>{questionAnswerList[num].answer}</View>)\r\n        answerKey.push(<View style={styles.answerKey}><Text>{num+2})</Text>{questionAnswerList[num+1].answer}</View>)\r\n        num+=1\r\n      }\r\n    }else {\r\n            questionAnswerViewList.push(<View wrap={false} style={styles.questionAnswer}>\r\n                        <Text>{num+1})</Text>{questionAnswerList[num].question}</View>)\r\n      // questionList.push(<View wrap={false} style={styles.questionAnswer}>\r\n      //                   <Text>{num+1})</Text>{questionAnswerList[num].question}</View>)\r\n      // answerKey.push(<View style={styles.answerKey}>\r\n      //               <Text>{num+1})</Text>{questionAnswerList[num].answer}</View>)\r\n\r\n    }\r\n\r\n    console.log(questionAnswerViewList)\r\n  } \r\n\r\n  const spaceProblems = (array) => {\r\n    var newArray = []\r\n    console.log(array.length%2)\r\n    if (array.length<6){\r\n      newArray.push(array.splice(0))\r\n    }else if (array.length%4 === 3){\r\n      console.log('%4===3')\r\n      \r\n      newArray.push(array.splice(0,3))\r\n    }else if (array.length%4 === 2) {\r\n      console.log('%4===2')\r\n   \r\n      newArray.push(array.splice(0,3))\r\n      newArray.push(array.splice(0,3))\r\n    } else if (array.length%4 === 1) {\r\n      console.log('%4===1')\r\n      \r\n      newArray.push(array.splice(0,3))\r\n      newArray.push(array.splice(0,3))\r\n      newArray.push(array.splice(0,3))\r\n    }\r\n    for (let i=0; i<array.length; i++){\r\n      newArray.push(array.splice(0,4))\r\n    }\r\n    return newArray\r\n  }\r\n  \r\n\r\n\r\n  if(!generalSelection.docStyle) {\r\n    \r\n    const generateList = (array) => {\r\n      return <View style={styles.viewList} wrap={false}>{array}</View>\r\n    }\r\n    var newQuestionAnswerList = []\r\n    var finalViewArray = []\r\n      // for (var i=0; i<questionAnswerList.length; i+=4) {\r\n      //   newQuestionAnswerList.push(questionAnswerViewList.slice(i, i+4))\r\n      // }\r\n      newQuestionAnswerList = spaceProblems(questionAnswerViewList)\r\n      console.log(newQuestionAnswerList)\r\n      for (let i=0; i<newQuestionAnswerList.length;i++){\r\n        finalViewArray.push(generateList(newQuestionAnswerList[i]))\r\n        console.log(finalViewArray)\r\n      }\r\n      questionList = finalViewArray\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  console.log(questionList)\r\n  return [questionList, answerKey];\r\n\r\n};\r\n\r\n\r\n","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\DisplayUserSelection.js",["239"],"import DeleteIcon from '@material-ui/icons/Delete';\r\n const DisplayUserSelection = (props) => {\r\n    \r\n    // const {userSelection} = props.userSelection\r\n    var displayArray = [];\r\n    const tableGenerator = () => {\r\n      for (var i=0; i<props.userSelection.length;i++) {\r\n        let x=i //handleSelect needs it's own version of x so that index number stays the same\r\n          displayArray.push(\r\n            <tr>\r\n            <td>{props.userSelection[i].concept}-{props.userSelection[i].specify}</td>\r\n            <td>{props.userSelection[i].quantity}</td>\r\n            <td>{props.userSelection[i].level}</td>\r\n            <td><button className='trash-button' onClick={()=>{props.handleDeleteConcept(x)}}><DeleteIcon/></button></td>\r\n          </tr>\r\n          )\r\n      }\r\n      var table = (\r\n        <div>\r\n        <table>\r\n          <tbody>\r\n          <tr>\r\n            <th colspan='4' className='current-selection'>Current Selections</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Concept</th>\r\n            <th>Quantity</th>\r\n            <th>Level</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n\r\n        {displayArray}\r\n        </tbody>\r\n        </table>\r\n        </div>)\r\n      return table\r\n    }\r\n   \r\n    if (props.displayQuestionList === false) {\r\n      console.log(tableGenerator)\r\n      return tableGenerator()\r\n    } else {\r\n      return null\r\n    }\r\n  };\r\n\r\nexport default DisplayUserSelection","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\ConceptCustomization.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\DisplayAssignment.js",["240","241","242","243","244","245"]," import {Link} from \"react-router-dom\";\r\nimport { React, useEffect, useContext } from \"react\";\r\nimport {AuthContext} from '../../shared/context/auth-context'\r\nimport {useHttpClient} from '../../shared/hooks/http-hook'\r\n\r\n\r\n\r\nconst DisplayAssignment = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n\r\n    return (\r\n        <div>\r\n            <Link to ='/' className= \"infinite-math-small\">\r\n                <h1 className= \"infinite-math-small\"><span className=\"in-small\">IN</span><span className='finite-small'>finite</span> Math</h1>    \r\n            </Link>  \r\n            <div>\r\n            <Link to=\"/concept-selection\">\r\n                 <button className='addQ-button'\r\n                    onClick= {props.handleClearSelections}>\r\n                        Make another assignment\r\n                </button>\r\n\r\n            </Link>\r\n            <Link to= '/custom-assignment'>\r\n                  <button onClick={props.handlePDFViewerClick}>Make another version of this assignment</button>\r\n            </Link>\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DisplayAssignment","C:\\projects\\worksheet-creator\\src\\shared\\context\\auth-context.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\ConceptSelection.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\FinalSelections.js",["246"],"import { Link } from \"react-router-dom\";\r\nimport { React } from \"react\";\r\n\r\nimport Input from '../components/input.js'\r\nimport DisplayUserSelection from '../components/DisplayUserSelection'\r\n\r\nconst FinalSelections = (props) => {\r\n    return (\r\n        <div className=\"final-customization container\">\r\n            <Link to ='/' className= \"infinite-math-small\">\r\n                <h1 className= \"infinite-math-small\"><span className=\"in-small\">IN</span><span className='finite-small'>finite</span> Math</h1>    \r\n            </Link>  \r\n        <label className='final-title' htmlFor=\"level\">Document Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          className='doc-title-input'\r\n          id=\"docTitle\"\r\n          value={props.generalSelection.docTitle}\r\n          // onChange={props.handleInputTitle}\r\n          onChange={props.handleInput}\r\n          name=\"docTitle\"\r\n        />\r\n\r\n        <Input\r\n          label=\"Mix up questions:\"\r\n          name=\"order\"\r\n          type=\"checkbox\"\r\n          value={props.generalSelection.order}\r\n          // onChange={props.handleOrder}\r\n          onChange={props.handleInput}\r\n          className=\"input final-title\"\r\n        />\r\n        <Input\r\n          label=\"Columns:\"\r\n          name=\"docStyle\"\r\n          type=\"checkbox\"\r\n          value={props.generalSelection.docStyle}\r\n          // onChange={props.handleDocStyle}\r\n          onChange={props.handleInput}\r\n          className=\"input final-title\"\r\n        />\r\n        \r\n    <div>\r\n      \r\n\r\n        <Link to ='/display-assignment' className='general-button-link'>\r\n            <button\r\n              type='submit'\r\n              className='general-button'\r\n              onClick={props.handleCreatePDFViewer}>\r\n              Create your assignment\r\n\r\n            </button>\r\n            \r\n        </Link>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default FinalSelections","C:\\projects\\worksheet-creator\\src\\user\\pages\\Authenticate.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\MainNavigation.js",["247"],"import React, {useState} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from './MainHeader'\r\nimport NavLinks from './NavLinks'\r\nimport SideDrawer from './SideDrawer'\r\nimport Backdrop from '../UIElements/Backdrop'\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => { //all passed between MainHeader = \"props.chidlren\" on MainHeader\r\n  const [drawerIsOpen, setDrawerIsOpen]  = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  }\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  }\r\n  return (\r\n      <React.Fragment> \r\n        {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}/>} \r\n          <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n            <nav className='main-navigation__drawer-nav'>\r\n              <NavLinks handleClearSelections={props.handleClearSelections}/>\r\n            </nav>\r\n          </SideDrawer>\r\n        <MainHeader>\r\n          <button className=\"main-navigation__menu-btn\" onClick= {openDrawerHandler}>\r\n            <span/>\r\n            <span/>\r\n            <span/>\r\n          </button>\r\n          {/* <h1 className=\"main-navigation__title\">\r\n            <Link to=\"/\">\r\n              YourPlaces\r\n            </Link>\r\n          </h1> */}\r\n          <nav className='main-navigation__header-nav'> \r\n            <NavLinks/>\r\n          </nav>\r\n        </MainHeader>\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MainNavigation","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\input.js",["248","249","250"],"import { React} from 'react'\r\nconst Input = ({\r\n  name,\r\n  type,\r\n  placeholder,\r\n  onChange,\r\n  className,\r\n  value,\r\n  error,\r\n  children,\r\n  label,\r\n  min,\r\n  max,\r\n  ...props\r\n}) => {\r\n  \r\n  return (\r\n    <div>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        value={value}\r\n        className={className}\r\n        style={error && {border: 'solid 1px red'}}\r\n        min= {min}\r\n        max={max}\r\n      />\r\n      { error && <p>{ error }</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nInput.defaultProps = {\r\n  type: \"text\",\r\n  className: \"\"\r\n}\r\n// Input.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   type: PropTypes.string,\r\n//   type: PropTypes.oneOf(['text', 'number', 'password', 'checkbox']),\r\n//   className: PropTypes.string,\r\n//   value: PropTypes.any,\r\n//   onChange: PropTypes.func.isRequired\r\n// }\r\nexport default Input","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\ConceptGeneral.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\NavLinks.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\SideDrawer.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\MainHeader.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\dec-alg.js",["251","252"],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub-fract.js",["253","254","255","256","257","258","259","260","261","262","263","264","265"],"import {randWhole} from './general.js'\r\nimport './problems.css';\r\nimport Table from './Table.js'\r\nimport {Text,View,StyleSheet,} from \"@react-pdf/renderer\";\r\n  const { create, all } = require('mathjs')\r\n  var tstyles = StyleSheet.create({\r\n    table: {\r\n        display: \"table\",\r\n         width: \"200px\",\r\n         textAlign:'center',\r\n    },\r\n    row: {\r\n        flexDirection: \"row\",\r\n    },\r\n    cell: {\r\n        // padding: '3px'\r\n      },\r\n    header: {\r\n      backgroundColor: 'grey'\r\n    }\r\n  });\r\n  const styles = StyleSheet.create({\r\n    verticalFractionContainer: {\r\n        display:'flex',\r\n        flexDirection:'column',\r\n    },\r\n    fractionProblemContainer: {\r\n        // margin:'0px 0px 0px 150px',\r\n        marginLeft: '45px',\r\n        width:'50px',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        flexDirection:'row',\r\n        alignItems:'center',\r\n        // borderBottom: 2,\r\n    },\r\n    problemLine: {\r\n        borderBottom:0.5,\r\n        width: '50px',\r\n        flexDirection: 'row',\r\n        alignItems:'center',\r\n\r\n    },\r\n    horizontalFractionContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'left',\r\n        alignItems: 'center',\r\n    },\r\n    fraction: {\r\n        paddingRight: '0px',\r\n        marginLeft:'10px',\r\n        width:'30px',\r\n\r\n    }\r\n  });\r\nconst fractionNumbers = () => {\r\n      var numerator1 = randWhole(1,8)\r\n      var denominator1 = randWhole(numerator1+1,10)\r\n      if (denominator1 > 6) {\r\n          var topRange = randWhole(2,5)\r\n          var numerator2 = randWhole(1, topRange)\r\n          var denominator2 = randWhole(numerator2+1, topRange+1)\r\n      }else {\r\n        topRange = randWhole(2,10)\r\n        numerator2 = randWhole(1, topRange)\r\n        denominator2 = randWhole(numerator2+1, topRange+1)\r\n      }\r\n      console.log(numerator1)\r\n    return [numerator1, denominator1, numerator2, denominator2]      \r\n  }\r\n// const verticalFractions = (fract1, fract2, op) => {\r\n//     return (\r\n//         <View style={styles.fractionProblemContainer}>\r\n//             <View style={styles.problemLine}>\r\n//                 <View>\r\n//                     {op}\r\n//                 </View>\r\n//                 <View style= {styles.verticalFractionContainer}>\r\n//                     {fract1}\r\n//                     {fract2}\r\n//                 </View>\r\n//             </View>\r\n//         </View>\r\n//     )\r\n// }\r\nconst horizontalFractions = (fract1, fract2, op) => {\r\n    return (\r\n            <View style= {styles.horizontalFractionContainer}>\r\n                    <View style= {styles.fraction}>\r\n                        {fract1}\r\n                    </View>\r\n                    <View>\r\n                        {op}\r\n                    </View>\r\n                    <View style= {styles.fraction}>\r\n                        {fract2}\r\n                    </View>\r\n                <Text>\r\n                    = ________\r\n                </Text>\r\n            </View>\r\n    )\r\n}\r\nconst config = {\r\n    // Default type of number\r\n    // Available options: 'number' (default), 'BigNumber', or 'Fraction'\r\n    number: 'Fraction'\r\n  }\r\n\r\n  tstyles = StyleSheet.create({\r\n    table: {\r\n        display: \"table\",\r\n         width: \"10px\",\r\n         textAlign:'center',\r\n    },\r\n    row: {\r\n        flexDirection: \"row\",\r\n    },\r\n    cell: {\r\n        // padding: '3px'\r\n      },\r\n    header: {\r\n      backgroundColor: 'grey'\r\n    }\r\n  });\r\n\r\n  const cell_style_fraction = (row_index, col_index) => {\r\n    const borderLeftWidth =  0\r\n    const borderTopWidth = (row_index === 0) ? 0 : 1\r\n    const borderRightWidth = 0\r\n    const borderBottomWidth = 0\r\n    const backgroundColor = 'white'\r\n    if (col_index > 0) {\r\n\r\n    }\r\n  \r\n    return {\r\n        // fontFamily: 'Arial', \r\n        width: '20px',\r\n        borderLeftWidth, borderRightWidth,\r\n        borderTopWidth, borderBottomWidth,\r\n        borderStyle: \"solid\",\r\n        backgroundColor,\r\n    }\r\n  }\r\n  const cell_style_mixednumber = (row_index, col_index) => {\r\n    const borderLeftWidth =  0\r\n    const borderTopWidth = (row_index === 0 || col_index === 0) ? 0 : 1\r\n    const borderRightWidth = 0\r\n    const borderBottomWidth = 0\r\n    const backgroundColor = 'white'\r\n    const fontSize = '15px'  \r\n    return {\r\n        // fontFamily: 'Arial', \r\n        width: '20px',\r\n        borderLeftWidth, borderRightWidth,\r\n        borderTopWidth, borderBottomWidth,\r\n        borderStyle: \"solid\",\r\n        backgroundColor, fontSize,\r\n    }\r\n  }\r\nconst math = create(all, config)\r\n\r\nexport const addFract = () => {\r\n    var numberList = fractionNumbers()\r\n    var whole = randWhole(1,4)\r\n    var [num1, denom1, num2, denom2] = [numberList[0], numberList[1], numberList[2], numberList[3]]\r\n    console.log(num1)\r\n    // console.log(num)\r\n    var fract1 = math.fraction(`${num1}/${denom1}`)\r\n    var fract2 = math.fraction(`${num2}/${denom2}`)\r\n    var answer = math.format(math.add(fract1, fract2))\r\n\r\n    var styledFract1 = Table([[num1],[denom1]], cell_style_fraction, tstyles)\r\n    var styledFract2 = Table([[num2],[denom2]], cell_style_fraction, tstyles)\r\n    // var mixedNumber1 = Table([['hi', num1],[whole, denom1]], cell_style_mixednumber, tstyles)\r\n\r\n    // var AC = [answer, 'this is wrong', 'this is wrong2', 'this is wrong3']\r\n    // var prob1 = (`${math.format(fract1)}+${math.format(fract2)}`)\r\n    // var prob1 = <View>{styledFract1}<Text>+</Text>{styledFract2}</View>\r\n    var prob1 = horizontalFractions(styledFract1, styledFract2, <Text>+</Text>)\r\n    // var prob2 = (`${math.format(fract2)}+${math.format(fract1)}`)\r\n    // var randProb = [prob1.toString(), prob2.toString()][randWhole(0,1)]\r\n    \r\n    var problem = {text: prob1,\r\n        answerChoices: ['','','','', answer],\r\n        correctAnswer: answer}\r\n    return problem\r\n}\r\nexport const subFract = () => {\r\n    var numberList = fractionNumbers()\r\n    var whole = randWhole(1,4)\r\n    var [num1, denom1, num2, denom2] = [numberList[0], numberList[1], numberList[2], numberList[3]]\r\n    console.log(num1)\r\n    // console.log(num)\r\n    var fract1 = math.fraction(`${num1}/${denom1}`)\r\n    var fract2 = math.fraction(`${num2}/${denom2}`)\r\n    // var answer = math.format(math.subtract(fract1, fract2))\r\n    // var answer = math.format(math.subtract(fract1, fract2))\r\n    var styledFract1 = Table([[num1],[denom1]], cell_style_fraction, tstyles)\r\n    var styledFract2 = Table([[num2],[denom2]], cell_style_fraction, tstyles)\r\n    if (math.compare(fract1, fract2) === 1) {\r\n        var prob1 = horizontalFractions(styledFract1, styledFract2, <Text>-</Text>)\r\n        var answer = math.format(math.subtract(fract1, fract2))\r\n\r\n    } else {\r\n        prob1 = horizontalFractions(styledFract2, styledFract1, <Text>-</Text>)\r\n        answer = math.format(math.subtract(fract2, fract1))\r\n\r\n    }\r\n    console.log(fract1)\r\n    console.log(math.fraction('1/2'))\r\n\r\n    // var mixedNumber1 = Table([['hi', num1],[whole, denom1]], cell_style_mixednumber, tstyles)\r\n\r\n    // var AC = [answer, 'this is wrong', 'this is wrong2', 'this is wrong3']\r\n    // var prob1 = (`${math.format(fract1)}+${math.format(fract2)}`)\r\n    // var prob1 = <View>{styledFract1}<Text>+</Text>{styledFract2}</View>\r\n    var prob1 = horizontalFractions(styledFract1, styledFract2, <Text>-</Text>)\r\n    // var prob2 = (`${math.format(fract2)}+${math.format(fract1)}`)\r\n    // var randProb = [prob1.toString(), prob2.toString()][randWhole(0,1)]\r\n    \r\n    var problem = {text: prob1,\r\n        answerChoices: ['','','','', answer],\r\n        correctAnswer: answer}\r\n    return problem\r\n}\r\n\r\nconst divFractNumbers = (userSelection) => {\r\n    // if (options.specify === 'fractbyfract') {\r\n\r\n    // } else if (options.specify === 'mixedbymixed'){\r\n\r\n    // } else {\r\n\r\n    // }\r\n    var whole = randWhole(2, 10)\r\n    var num1 = 1\r\n    var denom1 = randWhole(2,10)\r\n\r\n    return [whole, num1, denom1]\r\n}\r\nexport const divideFract = () => {\r\n    var numberList = divFractNumbers()\r\n    var [whole, num1, denom1] = [numberList[0], numberList[1], numberList[2]]\r\n    console.log(num1)\r\n    var fract1 = math.fraction(`${num1}/${denom1}`)\r\n    // console.log(fract1)\r\n    // console.log(math.fraction('1/2'))\r\n    var wholeNumber = <View><Text>{whole}</Text></View>\r\n    var styledFract1 = Table([[num1],[denom1]], cell_style_fraction, tstyles)\r\n\r\n    // var prob1 = (`${math.format(fract1)}+${math.format(fract2)}`)\r\n    // var prob1 = <View>{styledFract1}<Text>+</Text>{styledFract2}</View>\r\n    var prob1 = horizontalFractions(wholeNumber, styledFract1, <Text>÷</Text>)\r\n    var prob2 = horizontalFractions(styledFract1, wholeNumber, <Text>÷</Text>)\r\n\r\n    // var prob2 = (`${math.format(fract2)}+${math.format(fract1)}`)\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    if (randProb === prob1) {\r\n        var answer = math.format(math.number(math.divide(whole, fract1)))\r\n    } else {\r\n        answer = math.format(math.divide(fract1, whole))\r\n    }\r\n    // var AC = [answer, 'this is wrong', 'this is wrong2', 'this is wrong3']\r\n\r\n    var problem = {text: randProb,\r\n        answerChoices: ['','','','', answer],\r\n        correctAnswer: answer}\r\n    return problem\r\n}\r\nexport const multFract = () => {\r\n    var numberList = divFractNumbers()\r\n    var [whole, num1, denom1] = [numberList[0], numberList[1], numberList[2]]\r\n    console.log(num1)\r\n    var fract1 = math.fraction(`${num1}/${denom1}`)\r\n    // console.log(fract1)\r\n    // console.log(math.fraction('1/2'))\r\n    var wholeNumber = <View><Text>{whole}</Text></View>\r\n    var styledFract1 = Table([[num1],[denom1]], cell_style_fraction, tstyles)\r\n\r\n    // var prob1 = (`${math.format(fract1)}+${math.format(fract2)}`)\r\n    // var prob1 = <View>{styledFract1}<Text>+</Text>{styledFract2}</View>\r\n    var prob1 = horizontalFractions(wholeNumber, styledFract1, <Text>×</Text>)\r\n    var prob2 = horizontalFractions(styledFract1, wholeNumber, <Text>×</Text>)\r\n\r\n    // var prob2 = (`${math.format(fract2)}+${math.format(fract1)}`)\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var answer = math.format(math.multiply(fract1, whole))\r\n\r\n    // if (randProb === prob1) {\r\n    //     var answer = math.format(math.number(math.multiply(whole, fract1)))\r\n    // } else {\r\n    //     answer = math.format(math.multiply(fract1, whole))\r\n    // }\r\n    // var AC = [answer, 'this is wrong', 'this is wrong2', 'this is wrong3']\r\n\r\n    var problem = {text: randProb,\r\n        answerChoices: ['','','','', answer],\r\n        correctAnswer: answer}\r\n    return problem\r\n}","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\multiply-dec.js",["266","267","268","269","270","271","272","273","274","275","276","277"],"import {randWhole, decPV, randDec, shuffleArray, wrongOptions, answerChoicesKey} from './general'\r\nimport * as g from './general'\r\nimport {verticalAlign} from './vertical-align'\r\nimport {StyleSheet} from \"@react-pdf/renderer\";\r\n//   const styles = StyleSheet.create({\r\n//     top: {\r\n//       marginBottom:10,\r\n//       fontSize: 12,\r\n\r\n//       // fontFamily: 'arial'\r\n//     },\r\n//     probContainer: {\r\n//         display:'flex',\r\n//         flexDirection:'column',\r\n//         justifyContent: 'flexEnd',\r\n//         backgroundColor: 'blue',\r\n//       },\r\n//     bottom: {\r\n//         marginBottom:10,\r\n//         fontSize: 12,\r\n//         backgroundColor: 'yellow',\r\n//         // fontFamily: 'arial'\r\n//       },\r\n\r\n//   });\r\n\r\nconst multNumbers = (userSelection) =>{\r\n    var numArray = []\r\n    if (userSelection['Decimal x Whole Number']) {\r\n        numArray.push(\r\n            [randWhole(2, 9), randDec(0.1, 0.9, 1)],\r\n            [randWhole(2, 9), randDec(0.1, 0.9, 2)],\r\n            [randWhole(2, 9), randDec(1, 9, 1)],\r\n            [randWhole(2, 9), randDec(1, 9, 2)],\r\n            [randWhole(2, 9), randDec(10,99, 1)],\r\n        )\r\n    } if (userSelection['3 by 1 digit']) {\r\n        var randDecimal = [randDec(10, 99, 1), randDec(2,9,2), randDec(0.2, 0.999, 3)][randWhole(0,2)]\r\n        numArray.push(\r\n            [randWhole(2, 9), randDecimal],\r\n            [randDec(0.2, 0.9, 1), randDecimal],\r\n            [randDec(0.2, 0.9, 1), randDecimal],\r\n            [randDec(0.2, 0.9, 1), randWhole(100,999) ],\r\n            [randDec(0.02, 0.09, 2), randDecimal],\r\n            [randDec(0.02, 0.09, 2), randWhole(100,999) ],\r\n        )\r\n    } if (userSelection['4 by 1 digit']) {\r\n        randDecimal = [randDec(100, 999, 1), randDec(20,99,2), randDec(2, 9, 3), randDec(0.2, 0.9999, 4)][randWhole(0,3)]\r\n        numArray.push(\r\n            [randWhole(2, 9), randDecimal],\r\n            [randDec(0.2,0.9, 1), randWhole(1000,9999)],\r\n            [randDec(0.2,0.9,1), randDecimal],\r\n            [randDec(0.02,0.09,2), randDecimal],\r\n            [randDec(0.02,0.09,2), randWhole(1000,9999)],\r\n        )\r\n    } if (userSelection['2 by 2 digit']) {\r\n        randDecimal = [randDec(1, 9, 1), randDec(0.2,0.99,2)][randWhole(0,1)]\r\n        var randDecimal2 = [randDec(1, 9, 1), randDec(0.2,0.99,2)][randWhole(0,1)]\r\n\r\n        numArray.push(\r\n            [randWhole(11, 99), randDecimal],\r\n            [randWhole(11, 99), randDecimal],\r\n            [randDecimal, randDecimal2],\r\n            [randDecimal, randDecimal2],\r\n            [randDec(1, 9, 1), randDec(0.2,0.99,2)],\r\n            [randDec(1, 9, 1), randDec(0.2,0.99,2)],\r\n\r\n        )\r\n    } if (userSelection['3 by 2 digit']) {\r\n        var randDecimal3 = [randDec(10, 99, 1), randDec(2,9,2), randDec(0.2, 0.999, 3)][randWhole(0,2)]\r\n        var randDecimal2 = [randDec(1, 9, 1), randDec(0.2,0.99,2)][randWhole(0,1)]\r\n        numArray.push(\r\n            [randWhole(11, 99), randDecimal3],\r\n            [randDecimal2, randWhole(100,999)],\r\n            [randDecimal2, randDecimal3],\r\n            [randDecimal2, randDecimal3],\r\n            [randDecimal2, randDecimal3],\r\n\r\n        )\r\n    }\r\n    var num = shuffleArray(numArray)[0]\r\n    // var [num1pv, num2pv] = [decPV(num[0]), decPV(num[1])] \r\n    return [num[0], randWhole(9,100), num[1]]\r\n}\r\n\r\nexport const multDecAlg = (userSelection) => {\r\n    var numList = multNumbers(userSelection)\r\n    var [numberS, numberL] = [numList[0], numList[2]]\r\n    var multPV = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(multPV))\r\n    if (userSelection['Horizontal']) {\r\n        var prob = `${numberL} × ${numberS} = `\r\n    } if (userSelection['Vertical']) {\r\n        prob = verticalAlign(numberL, '×', numberS) \r\n    }\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, multPV)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    // var order = (numberS, numberL)\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\nexport const multDecBasic = (userSelection) => {\r\n    var numList = multNumbers(userSelection)\r\n    var [numberS, numberL] = [numList[0], numList[2]]\r\n    var multPV = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(multPV))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, multPV)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(`What is the product of ${numberL} and ${numberS}?`)\r\n    probArray.push(`What is the product of ${numberS} and ${numberL}?`)\r\n    probArray.push(`What is ${numberS} times as much as ${numberL}?`)\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\nexport const multDec = (userSelection) => {\r\n    var girl = shuffleArray(g.girlList)[0]\r\n    var boy = shuffleArray(g.boyList)[0]\r\n    \r\n    var pet = shuffleArray(g.bigPetList)[0]\r\n\r\n    if (userSelection['4 by 1 digit']) {\r\n        var [numberS, numberL] = [randDec(0.2, 0.9, 1), randDec(10,50, 2)]\r\n    } else if (userSelection['3 by 1 digit']) {\r\n        [numberS, numberL] = [randDec(0.2, 0.9, 1), randDec(10,50, 1)]\r\n    } else if (userSelection['2 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(2, 5, 1), randDec(1,3, 1)]\r\n        pet = shuffleArray(g.smallPetList)[0]\r\n    } else if (userSelection['3 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(2, 4, 1), randDec(1, 5, 2)]\r\n        pet = shuffleArray(g.smallPetList)[0]\r\n    }\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(`${girl}'s ${pet} weighs ${numberL} pounds. ${boy}'s ${pet} weighs ${numberS} `+   \r\n    ` times as much as ${girl}'s ${pet}. What does ${boy}'s ${pet} weigh in pounds?`)\r\n    // probArray.push(``)\r\n    // probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n\r\n\r\nexport const multDec2 = (userSelection) => {\r\n    var woman = shuffleArray(g.womanList)[0]\r\n    var pet = shuffleArray(g.smallPetList)[0]\r\n    if (userSelection['4 by 1 digit']) {\r\n        var [numberS, numberL] = [randWhole(2,9), randDec(10,50,2)]\r\n        var time = {s:'month', p:'months'}\r\n    } else if (userSelection['3 by 1 digit']){\r\n        [numberS, numberL] = [randWhole(2, 9), randDec(1, 5,2)]\r\n        time = {s:'week', p:'weeks'}\r\n    } else if (userSelection['2 by 2 digit']){\r\n        [numberS, numberL] = [randWhole(12, 99), randDec(0.20, 0.75,2)]\r\n        time = {s:'day', p:'days'}\r\n    } else if (userSelection['3 by 2 digit']){\r\n        [numberS, numberL] = [randWhole(100, 999), randDec(0.20, 0.75,2)]\r\n        time = {s:'day', p:'days'}\r\n    }\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var probArray = []\r\n    probArray.push(`It costs ${woman} $${numberL} to buy food for her ${pet}s each ${time.s}. How much `+\r\n    `does it cost her for ${numberS} ${time.p} of ${pet} food?`)\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n\r\nexport const multDec3 = (userSelection) => {\r\n    var tour = shuffleArray(g.tourList)[0]\r\n    if (userSelection['4 by 1 digit']) {\r\n        var [numberS, numberL] = [randWhole(2,6), randDec(15,50,2)]\r\n        \r\n    } if (userSelection['3 by 1 digit']) {\r\n        [numberS, numberL] = [randWhole(2,6), randDec(7,9,2)]\r\n            \r\n    } if (userSelection['2 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(2,6,1), randWhole(12,50)]\r\n                \r\n    } if (userSelection['3 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(2,4,1), randWhole(100,200)] \r\n        }\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var probArray = []\r\n    probArray.push(`The ${tour} tour costs $${numberL} for each hour. How much does it cost `+\r\n    `for a ${numberS} hour tour?`)\r\n    // probArray.push(``)\r\n    // probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n                   \r\n\r\n\r\n\r\n\r\nexport const multDec4 = (userSelection) => {\r\n    var disaster = shuffleArray(g.disasterList)[0]\r\n    var boy = shuffleArray(g.boyList)[0]\r\n    if (userSelection['4 by 1 digit']) {\r\n        var [numberS, numberL] = [randDec(10, 15, 2), randWhole(5, 9), ]\r\n        var food = shuffleArray(['chicken','pecans','peanut butter','popscicles','chocolate','pasta'])[0]\r\n    \r\n    } if (userSelection['3 by 1 digit']) {\r\n        [numberS, numberL] = [randDec(1,5,2),randWhole(5,9)]\r\n        food = shuffleArray(g.disasterFoodList)[0]\r\n            \r\n    } if (userSelection['2 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(0.2,0.99,2), randWhole(12,99)]\r\n        food = shuffleArray(['ramen','beans','bananas','popscicles','chocolate','pasta'])[0]\r\n    } if (userSelection['3 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(0.2,0.99,2), randWhole(100, 400)] \r\n        food = shuffleArray(['ramen','beans','bananas','popscicles','chocolate','pasta'])[0]\r\n\r\n        }\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var probArray = []\r\n    probArray.push(`${boy} is preparing for a ${disaster}. He wants to buy a lot of ${food} so that he does `+\r\n    `not run out. Each package of ${food} costs $${numberS}. How much would it cost him to buy `+\r\n    `${numberL} packages of ${food}?`)\r\n    // probArray.push(``)\r\n    // probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n                   \r\n\r\n\r\nexport const multDec5 = (userSelection) => {\r\n    if (userSelection['']) {\r\n        \r\n    }\r\n    var [numberS, numberL] = []\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n\r\n                //    '{randGirl} worked {Decimal} hours this week at her job working as a {randJob}. She earns $'\r\n                //    f'{Decimal2} per hour. How much money did she earn this week?\r\n\r\n\r\nexport const multDec6 = (userSelection) => {\r\n\r\n    if (userSelection['']) {\r\n        \r\n    }\r\n    var [numberS, numberL] = []\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n\r\n            //        f'One ounce of {randCan}  has {Decimal} grams of protein. How many grams of protein are in {Decimal2}'\r\n            //    f'ounce can of {randCan}?')\r\nexport const multDec7 = (userSelection) => {\r\n\r\n    if (userSelection['']) {\r\n        \r\n    }\r\n    var [numberS, numberL] = []\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n// (f'{randBoy} needs to buy {Number1} {randItemsExp}s. Each {randItemsExp} costs ${Decimal}. How much'\r\n//                    f' would {randBoy} spend to buy {Number1} {randItemsExp}?\r\nexport const multDec8 = (userSelection) => {\r\n\r\n    if (userSelection['']) {\r\n        \r\n    }\r\n    var [numberS, numberL] = []\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2],)\r\n    var probArray = []\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n            //    It costs ${whole} for a flight to {randCountry[0]}. A flight to {randCountry[1]} costs {Decimal} times'\r\n            //    f'as much as the flight to {randCountry[0]}. How much does the flight to {randCountry[1]} cost?'\r\n\r\n\r\n\r\nexport const randMultDec = (userSelection) => {\r\n    var probArray = []\r\n    if (userSelection['Algorithm']){\r\n        probArray.push(multDecAlg, multDecAlg, multDecAlg, multDecAlg, multDecAlg)\r\n    } if (userSelection['Application']){\r\n        probArray.push(multDecBasic, multDec, multDec2, multDec3, multDec4)\r\n    }\r\n\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(userSelection)\r\n}\r\n","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub-dec.js",["278","279"],"import {randWhole, randDec, roundDec, shuffleArray, wrongOptions, answerChoicesKey,\r\n        largestDecPV, decPV, removeDec,\r\n} from './general.js'\r\nimport { verticalAlignDec} from './vertical-align'\r\nconst asNumbers = (userSelection) =>{\r\n    var numArray = []\r\n    if (userSelection['1-3 digits to the hundredths']) {\r\n        if (userSelection['Same decimal place values']){\r\n            numArray.push(\r\n                [randDec(1,9,2), randDec(1,9,2)],\r\n                [randDec(1,9,2), randDec(0.1,0.99,2)],\r\n                [randDec(1,9,1), randDec(1,9,1)],\r\n                [randDec(1,9,1), randDec(0.1,0.9,1)],        \r\n            )\r\n        }\r\n        if (userSelection['Different decimal place values']){\r\n            numArray.push(\r\n                [randDec(1,9,2), randDec(1,9,1)],\r\n                [randDec(1,9,2), randDec(0.1,0.9,1)],\r\n                [randDec(1,9,1), randDec(0.11,0.99,2)],\r\n                [randDec(1,9,1), randDec(0.11,0.99,2)],\r\n                [randDec(1,9,2), randDec(1,9,1)],\r\n                [randDec(1,9,2), randDec(0.1,0.9,1)],\r\n                [randWhole(10,20), randDec(1,9,1)],\r\n                [randWhole(10,20), randDec(0.1,0.9,1)],\r\n                [randWhole(1,9), randDec(1,9,2)],\r\n                [randWhole(1,9), randDec(0.10,0.99,2)],\r\n                [randWhole(1,9), randDec(10,99,1)],\r\n            \r\n            )\r\n        } \r\n    } if (userSelection['3-4 digits to the hundredths']) {\r\n        if (userSelection['Same decimal place values']){\r\n            numArray.push(\r\n                [randDec(1,9,2), randDec(1,9,2)],\r\n                [randDec(1,9,2), randDec(10,99,2)],\r\n                [randDec(10,99,1), randDec(10,99,1)],\r\n                [randDec(10,99,2), randDec(10,99,2)],   \r\n                [randDec(10,99,1), randDec(100,999,1)],\r\n                [randDec(100,999,1), randDec(100,999,1)],       \r\n            )\r\n        }\r\n        if (userSelection['Different decimal place values']){\r\n            numArray.push(\r\n                [randDec(1,9,2), randDec(10,99,1)],\r\n                [randDec(1,9,2), randDec(100,999,1)],\r\n                [randDec(10,99,1), randDec(10,99,2)],\r\n                [randDec(100,999,1), randWhole(2,1000)],\r\n                [randDec(10,99,1), randWhole(10,99)],   \r\n                [randDec(10,99,1), randWhole(2,1000)],\r\n                [randDec(1,9,2), randWhole(10,99)],   \r\n                [randDec(1,9,2), randWhole(2,1000)],   \r\n            )\r\n        } \r\n    } if (userSelection['4-5 digits to the hundredths']) {\r\n        if (userSelection['Same decimal place values']){\r\n            numArray.push(\r\n                [randDec(100,999,2), randDec(10,99,2)], \r\n                [randDec(100,999,2), randDec(100,999,2)],\r\n                [randDec(100,999,1), randDec(100,999,1)],\r\n                [randDec(100,999,1), randDec(1000,9999,1)],   \r\n                [randDec(10,99,2), randDec(10,99,2)],      \r\n            )\r\n        }\r\n        if (userSelection['Different decimal place values']){\r\n            numArray.push(\r\n                [randDec(10,99,2), randDec(100,999,1)], \r\n                [randDec(100,999,1), randWhole(2,1000)],\r\n                [randDec(1000,9999,1), randWhole(2,10000)],\r\n                [randDec(10,99,2), randWhole(2,1000)],\r\n                [randDec(10,99,2), randDec(109,999,1)],       \r\n            )\r\n        } \r\n    } if (userSelection['4-5 digits to the thousandths']) {\r\n        if (userSelection['Same decimal place values']){\r\n            numArray.push(\r\n                [randDec(100,999,2), randDec(10,99,2)], \r\n                [randDec(100,999,2), randDec(100,999,2)],\r\n                [randDec(100,999,1), randDec(100,999,1)],\r\n                [randDec(100,999,1), randDec(1000,9999,1)],   \r\n                [randDec(10,99,2), randDec(10,99,2)],\r\n                [randDec(1,9,3), randDec(10,99,3)],\r\n                [randDec(10,99,3), randDec(10,99,3)],\r\n                [randDec(1,9,3), randDec(1,9,3)],\r\n            )\r\n        }\r\n        if (userSelection['Different decimal place values']){\r\n            numArray.push( \r\n                [randDec(100,999,1), randWhole(2,1000)], \r\n                [randDec(10,99,2), randWhole(2,1000)],\r\n                [randDec(10,99,2), randDec(100,999,1)], \r\n                [randDec(10,99,2), randDec(10,99,3)], \r\n                [randDec(10,99,2), randDec(1,9,3)],\r\n                [randWhole(2,10), randDec(10,99,3)],\r\n                [randDec(100,999,1), randDec(10,99,3)], \r\n                [randDec(100,999,1), randDec(10,99,2)], \r\n                [randDec(100,999,1), randDec(1,9,3)], \r\n                [randWhole(2,99), randDec(1,9,3)],\r\n                [randDec(1000,9999,1), randWhole(2,10000)], \r\n            )\r\n        } \r\n    } \r\n    console.log(numArray)\r\n    var numList = shuffleArray(numArray)[0]\r\n    console.log(numList)\r\n    var [numS, numL] = [Math.min(numList[0], numList[1]), Math.max(numList[0], numList[1])]\r\n    var [pvS, pvL] = [decPV(numS), decPV(numL)] \r\n\r\n\r\n    return {numS: numS, pvS: pvS, numL: numL, pvL:pvL}\r\n\r\n}\r\n\r\nexport const addDecAlg = (userSelection) => {\r\n    var numList = asNumbers(userSelection)\r\n    var [pvS, pvL] = [numList.pvS, numList.pvL]\r\n    var [numberS, numberL] = [numList.numS, numList.numL]\r\n    var pv = largestDecPV(numberS, numberL)\r\n    var answer = roundDec(numberL+numberS, pv)\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS,pv) \r\n    wrong.push(numberL-numberS, (removeDec(numberL)+removeDec(numberS))/Math.pow(10, pv))\r\n    wrong = shuffleArray(wrong)\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    console.log(numberL)\r\n    console.log(pvL)\r\n    console.log(numberL.toFixed(pvL))\r\n    if (userSelection['Vertical']) {\r\n        var prob = verticalAlignDec(numberL, '+', numberS)\r\n    } else {\r\n        prob = `${numberL.toFixed(pvL)} + ${numberS.toFixed(pvS)} = `\r\n    }\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n\r\nexport const randAddDec = (userSelection) => {\r\n    var probArray = [addDecAlg]\r\n\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(userSelection)\r\n}\r\n\r\nexport const subDecAlg = (userSelection) => {\r\n    var numList = asNumbers(userSelection)\r\n    var [pvS, pvL] = [numList.pvS, numList.pvL]\r\n    var [numberS, numberL] = [numList.numS, numList.numL]\r\n    var pv = largestDecPV(numberS, numberL)\r\n    var answer = roundDec(numberL-numberS, pv)\r\n    var wrong= wrongOptions(answer, 'decimal', numberS, numberL, pv)\r\n        wrong.push(numberS+numberL, Math.abs((removeDec(numberL)-removeDec(numberS))/Math.pow(10, pv)))\r\n    wrong = shuffleArray(wrong)\r\n    if (userSelection['Vertical']) {\r\n        var prob = verticalAlignDec(numberL, '-', numberS)\r\n    } else {\r\n        prob = `${numberL.toFixed(pvL)} - ${numberS.toFixed(pvS)} = `\r\n    }\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n\r\n    return problem\r\n}\r\n\r\n\r\nexport const randSubDec = (options) => {\r\n    var probArray = [subDecAlg]\r\n\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(options)\r\n}\r\n","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub.js",["280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"// import * as gen from './general.js'\r\nimport {randWhole, shuffleArray, wrongOptions, answerChoicesKey,\r\n        boyList, girlList, nameList, cityList, disasterList, sportList, candyList, forestAnimal, lakeAnimal, desertAnimal} from './general.js'\r\nimport {verticalAlign} from './vertical-align'\r\n\r\nconst asNumbers = (userSelection) => {\r\n    var numArray = []\r\n    if (userSelection['1 digit numbers']){\r\n        numArray.push([randWhole(2,9), randWhole(2,9), randWhole(2,9)]);\r\n\r\n    } if (userSelection['2 digit numbers']){\r\n        numArray.push([randWhole(2, 99), randWhole(10, 99), randWhole(10,99)]);\r\n\r\n    } if (userSelection['3 digit numbers']) {\r\n        numArray.push([randWhole(10, 999), randWhole(100, 999), randWhole(100, 999)]);\r\n\r\n    } if (userSelection['4 digit numbers']){\r\n        numArray.push([randWhole(100, 9999), randWhole(1000, 9999), randWhole(1000, 9999)]);\r\n\r\n    } if (userSelection['5 digit numbers']){\r\n        numArray.push([randWhole(100, 99999), randWhole(10000, 99999), randWhole(10000, 99999)]);\r\n\r\n    } if (userSelection['6 digit numbers']){\r\n        numArray.push([randWhole(1000, 999999), randWhole(100000, 999999),randWhole(100000, 999999)]);\r\n\r\n    } if (userSelection['7 digit numbers']) {\r\n        numArray.push([randWhole(10000, 9999999), randWhole(1000000, 9999999),randWhole(1000000, 9999999)]);\r\n    }\r\n    var numList = shuffleArray(numArray)[0].sort((a,b) => a-b)\r\n\r\nreturn {numberS:numList[0], numberM: numList[1], numberL: numList[2]}\r\n}  \r\nvar addWord = ['altogether', 'in total', 'combined']\r\n\r\nexport const addAlg = (userSelection) => {\r\n    var {numberS, numberL} = asNumbers(userSelection)\r\n    var answer = numberL+numberS\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS) \r\n    wrong.push()\r\n    wrong = shuffleArray(wrong)\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    if (userSelection['Vertical']) {\r\n        var prob = verticalAlign(numberL.toLocaleString(), '+', numberS.toLocaleString()) \r\n    } else {\r\n        prob =`${numberL.toLocaleString()} + ${numberS.toLocaleString()} = `\r\n    }\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\nexport const subAlg = (userSelection) => {\r\n    var {numberS, numberL} = asNumbers(userSelection)\r\n    var answer = numberL-numberS\r\n    var wrong= wrongOptions(answer, 'sub', numberS, numberL,)\r\n        wrong.push()\r\n    wrong = shuffleArray(wrong)\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    if (userSelection['Vertical']) {\r\n        var prob = verticalAlign(numberL.toLocaleString(), '-  ', numberS.toLocaleString()) \r\n    } else {\r\n        prob =`${numberL.toLocaleString()} - ${numberS.toLocaleString()} = `\r\n    }\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n\r\n    return problem\r\n}\r\n\r\nexport const subWhole = (userSelection) => { //sport\r\n    var name = shuffleArray(nameList)\r\n    var sport = sportList[randWhole(0, sportList.length-1)]\r\n    var {numberS, numberL} = asNumbers(userSelection)\r\n\r\n    if (numberL < 100) {\r\n        var time = 'yesterday'\r\n    } else if (numberL <1000) {\r\n        time = 'last week'\r\n    } else if (numberL < 10000) {\r\n        time = 'last year'\r\n    } else if (numberL > 9999) {\r\n        time = 'total'\r\n    }\r\n    var answer= (numberL - numberS);\r\n    var wrong = shuffleArray(wrongOptions(answer, 'sub', numberL, numberS))\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (`${name[0]} played ${sport} for ${numberS.toLocaleString()} minutes ${time}. ${name[1]} ` +\r\n    `played ${sport} for ${numberL.toLocaleString()} minutes ${time}. How many more minutes did `+\r\n    `${name[1]} play than ${name[0]}?`)\r\n    var prob2 = (`${name[0]} played ${sport} for ${numberS.toLocaleString()} minutes ${time}. ${name[1]} `+\r\n    `played ${sport} for ${numberL.toLocaleString()} minutes ${time}. What is the difference between ` +\r\n    `the number of minutes ${name[1]} played and the number of minutes ${name[0]} played?`)\r\n    var prob3 = (`${name[0]} loves ${sport} and watched ${numberS.toLocaleString()} minutes ${time}. ${name[1]} `+\r\n    `also likes ${sport} and has watched ${numberL.toLocaleString()} minutes ${time}. What is the difference between ` +\r\n    `the number of minutes ${name[1]} and ${name[0]} watched ${sport}?`)\r\n    var randProb = [prob1, prob2, prob3][randWhole(0,2)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n    return problem\r\n\r\n}\r\nexport const addWhole = (userSelection) => { //sports \r\n    var name = shuffleArray(nameList)\r\n    var sport = sportList[randWhole(0, sportList.length-1)]\r\n    var addWord = shuffleArray(['total','altogether'])[0]\r\n    var {numberS, numberL} = asNumbers(userSelection)\r\n\r\n    if (numberL < 100) {\r\n        var time = 'yesterday'\r\n    } else if (numberL <1000) {\r\n        time = 'last week'\r\n    } else if (numberL < 10000) {\r\n        time = 'last year'\r\n    } else if (numberL > 9999) {\r\n        time = 'total'\r\n    }\r\n\r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (`${name[0]} loves playing ${sport} with ${name[1]}. He played ${(numberL).toLocaleString()} `+\r\n        `minutes ${time}. ${name[1]} played ${sport} for ${(numberS).toLocaleString()} minutes `+\r\n        `more than ${name[0]} ${time}. How many minutes did ${name[1]} play ${time}?`)\r\n    var prob2 = (`${name[0]} played ${sport} for ${(numberS).toLocaleString()} minutes ${time}. `+\r\n        `${name[1]} played ${sport} for ${(numberL).toLocaleString()} minutes ${time}. How many minutes did ` +\r\n        `${name[0]} and ${name[1]} play ${addWord}?`)\r\n\r\n        // (`${name[0]} loves playing ${sport} with his brother. He played ${(numberL).toLocaleString()} `+\r\n        // `minutes ${time}. His brother ${name[1]} played ${sport} for ${(numberS).toLocaleString()} minutes `+\r\n        // `more than ${name[0]} ${time}. How many minutes did ${name[0]} and ${name[1]} play altogether?`) // good for multi-step \r\n        var randProb = shuffleArray([prob1, prob2])[0]\r\n        var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer,\r\n        }\r\n\r\n    return problem        \r\n}\r\nexport const subWhole2 = (userSelection) => { //candy\r\n    var name = nameList[randWhole(0, nameList.length-1)]\r\n    var disaster = disasterList[randWhole(0, disasterList.length-1)]\r\n    var girl = shuffleArray(girlList)\r\n    var boy = shuffleArray(boyList)\r\n\r\n    var candy = shuffleArray(candyList)\r\n    var {numberS, numberM, numberL} = asNumbers(userSelection)\r\n\r\n    var answer = (numberL-numberS)\r\n    var wrong= wrongOptions(answer, 'sub', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(`In a jar there are three different types of candies. There are ${numberS.toLocaleString()} ${candy[0]} `+\r\n        `, ${numberM.toLocaleString()} ${candy[1]}, and ${numberL.toLocaleString()} ${candy[2]}. What is the difference between `+ \r\n        `the number of ${candy[0]} and the number of ${candy[2]} in the jar?`)\r\n    probArray.push(`${name} has a basket of candies. There are ${numberS} ${candy[0]}, `+\r\n        `${numberS.toLocaleString()} ${candy[1]}, and ${numberL.toLocaleString()} ${candy[2]}. How many more `+\r\n        `${candy[2]} are in the basket than ${candy[0]} ?`)\r\n    probArray.push(`${girl[0]} loves ${candy[0]} so much that she ate ${numberS.toLocaleString()} in the past month. `+\r\n        `This brought her total number of ${candy[0]} eaten in her life to ${numberL.toLocaleString()}. How much was `+\r\n        `her total ${candy[0]} eaten before this past month?`)\r\n    probArray.push(`${boy[0]} is obsessed with ${candy[0]} so he decides to stock up in case of a ${disaster} coming soon.`+\r\n        `He buys ${numberL.toLocaleString()} ${candy[0]} but then on the way home he got really hungry so he ate `+\r\n        `${numberS.toLocaleString()} of the ${candy[0]}. How many ${candy[0]} does he have now?`)\r\n    probArray.push(`${boy[0]} is obsessed with ${candy[0]} so he decides to stock up by purchasing ${numberL.toLocaleString()} in case of `+\r\n        `a ${disaster} coming soon. He decided that he had way too many and ended up giving ${numberS.toLocaleString()} of the ${candy[0]} `+\r\n        `to his friend ${boy[1]}. How many ${candy[0]} does he have left?`)\r\n    var randProb = shuffleArray(probArray)[0]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    return problem\r\n            \r\n\r\n\r\n}\r\nexport const addWhole2 = (userSelection) => { //candy\r\n    var name = shuffleArray(nameList)\r\n    var girl = shuffleArray(girlList)\r\n    var boy = shuffleArray(boyList)\r\n    var disaster = disasterList[randWhole(0, disasterList.length-1)]\r\n\r\n    var candy = shuffleArray(candyList)\r\n    var {numberS, numberM, numberL} = asNumbers(userSelection)\r\n\r\n\r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(`There are three different types of candies in a jar. There are ${numberS.toLocaleString()} ${candy[0]}`+\r\n    `, ${numberM.toLocaleString()} ${candy[1]}, and ${numberL.toLocaleString()} ${candy[2]}. How many total ${candy[0]} and ${candy[2]} are in the jar?`)\r\n    probArray.push(`${name[0]} has a jar with three different types of candies inside. There are ${numberS.toLocaleString()} `+\r\n    `${candy[0]},  ${numberM.toLocaleString()} ${candy[1]}, and ${numberL.toLocaleString()} ${candy[2]}. `+\r\n    ` How many ${candy[2]} and ${candy[1]} are in the jar altogether?`)\r\n    probArray.push(`${girl[0]} loves ${candy[0]} so much that she has already eaten ${numberL.toLocaleString()} in her life. `+\r\n    `If she eats ${numberS.toLocaleString()} more by the end of the year, how many total ${candy[0]} will she have eaten?`)\r\n    probArray.push(`${boy[0]} is obsessed with ${candy[0]} so he already has ${numberS.toLocaleString()} in his pantry at home. `+\r\n    `He begins to worry about a ${disaster} coming soon, so he decides `+\r\n    `to stock up by purchasing ${numberL.toLocaleString()} ${candy[0]} just in case. How many ${candy[0]} does he have now?`)\r\n    var randProb = shuffleArray(probArray)[0]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n    return problem        \r\n}\r\n\r\nexport const subWhole3 = (userSelection) => { //animals\r\n    var randForestAnimal = shuffleArray(forestAnimal)\r\n    var randDesertAnimal = shuffleArray(desertAnimal)\r\n    var randLakeAnimal = shuffleArray(lakeAnimal)\r\n    var randAnimal = shuffleArray([randDesertAnimal, randForestAnimal, randLakeAnimal])\r\n    var {numberS, numberL} = asNumbers(userSelection)\r\n\r\n\r\n    var place\r\n    if (randAnimal[0] === randDesertAnimal) {\r\n        place = 'desert'\r\n    }else if (randAnimal[0] === randForestAnimal) {\r\n        place = 'forest'\r\n    }else if (randAnimal[0] === randLakeAnimal) {\r\n        place = 'lake'\r\n    }\r\n \r\n    var answer = (numberL-numberS)\r\n    var wrong= wrongOptions(answer, 'sub', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(`There are ${numberL.toLocaleString()} ${randAnimal[0][0]}s and ${randAnimal[0][1]}s in the `+\r\n        `${place}. If there are ${numberS.toLocaleString()} ${randAnimal[0][0]}s in the ${place}, `+\r\n        `how many ${randAnimal[0][1]}s are in the ${place}?`)\r\n    probArray.push(`In the ${place} there are ${numberS.toLocaleString()} ${randAnimal[0][1]}s and `+\r\n        `${numberL.toLocaleString()} ${randAnimal[0][0]}s. What is the difference beween the number of `+\r\n        `${randAnimal[0][0]}s and ${randAnimal[0][1]}s in the ${place}?`)\r\n    probArray.push(`Researchers are surveying the ${place}. They found a total of ${numberL.toLocaleString()} `+ \r\n        `${randAnimal[0][1]}s, and a total of ${numberS.toLocaleString()} ${randAnimal[0][0]}s. How many more `+\r\n        `${randAnimal[0][1]}s are there in the ${place} than ${randAnimal[0][0]}s?`)\r\n    var randProb = shuffleArray(probArray)[0]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n    return problem\r\n\r\n            \r\n}\r\nexport const addWhole3 = (userSelection) => { //animals\r\n    var randForestAnimal = shuffleArray(forestAnimal)\r\n    var randDesertAnimal = shuffleArray(desertAnimal)\r\n    var randLakeAnimal = shuffleArray(lakeAnimal)\r\n    var randAnimal = shuffleArray([randDesertAnimal, randForestAnimal, randLakeAnimal])\r\n    var {numberS, numberL} = asNumbers(userSelection)\r\n\r\n    var place\r\n    if (randAnimal[0] === randDesertAnimal) {\r\n        place = 'desert'\r\n    }else if (randAnimal[0] === randForestAnimal) {\r\n        place = 'forest'\r\n    }else if (randAnimal[0] === randLakeAnimal) {\r\n        place = 'lake'\r\n    }\r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(`There are ${numberL.toLocaleString()} ${randAnimal[0][0]}s in the ${place}. If there are ${numberS.toLocaleString()} ${randAnimal[0][1]}s `+\r\n        `in the ${place} , how many total ${randAnimal[0][0]}s and ${randAnimal[0][1]} are in the ${place}?`)\r\n    probArray.push(`In the ${place} there are ${numberS.toLocaleString()} ${randAnimal[0][1]}s and ${numberL.toLocaleString()} ${randAnimal[0][0]}s. `+ \r\n        `How m any ${randAnimal[0][0]}s and ${randAnimal[0][1]}s are in the ${place} ${addWord}?`)\r\n    probArray.push(`Researchers are surveying the ${place}. They found a total of ${numberL.toLocaleString()} `+\r\n        `${randAnimal[0][1]}s, and a total of ${numberS.toLocaleString()} ${randAnimal[0][0]}s. How many animals did the researchers `+\r\n        `find at the ${place} ${addWord}?`)\r\n    var randProb = shuffleArray(probArray)[0]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    return problem\r\n\r\n            \r\n}\r\n\r\n\r\nexport const addWhole4 = (userSelection) => { //youtube\r\n    var boy = shuffleArray(boyList)\r\n    var girl = shuffleArray(girlList)\r\n    var {numberS, numberL} = asNumbers(userSelection)\r\n\r\n\r\n    var videoAdj = ['hilarious', 'funny', 'silly', 'popular', 'viral'][randWhole(0,4)]\r\n    var videoTopic = ['dog', 'fashion', 'cat', 'music', 'tutorial', 'cooking' ][randWhole(0,6)]\r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n\r\n    probArray.push(`${boy[0]} had ${numberL.toLocaleString()} subscribers on his youtube channel as of last month. This month so far he has gained `+\r\n                `${numberS.toLocaleString()} subscribers after making a ${videoAdj} video. How many subscribers does his channel have?`)\r\n    probArray.push(`${girl[0]} had ${numberL.toLocaleString()} subscribers on her youtube channel as of last month. This month her subscriber count has increased by `+\r\n                `${numberS.toLocaleString()} after she made a very popular ${videoTopic} video. How many subscribers does her channel have now?`)\r\n    probArray.push(`${boy[0]} got ${numberL.toLocaleString()} views on his latest ${videoTopic} video. His previous video got ${numberS.toLocaleString()} views. How `+\r\n                `many combined views did the two videos get?`)\r\n    probArray.push(`${girl[0]} currently has ${numberS.toLocaleString()} subscribers on her channel. Her goal is to reach ${numberL.toLocaleString()} subscribers by `+\r\n                `the end of the year. How many more subscribers will she need to get in order to reach her goal?`)\r\n    var randProb = shuffleArray(probArray)[0]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem        \r\n}\r\n\r\nexport const subWhole4 = (userSelection) => { //youtube\r\n    var boy = shuffleArray(boyList)\r\n    var girl = shuffleArray(girlList)\r\n    var {numberS, numberL} = asNumbers(userSelection)\r\n\r\n    var reason = [`hasn't been making new videos`, `hasn't been actively making videos`, \r\n                `has been inactive recently`, `made a video that the subscribers did not like`][randWhole(0,3)]\r\n    var answer = (numberL-numberS)\r\n    var wrong= wrongOptions(answer, 'sub', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n\r\n    probArray.push(`${boy[0]} had ${numberL.toLocaleString()} subscribers on his youtube channel as of last month. This month so far he has lost `+\r\n                `${numberS.toLocaleString()} subscribers because he ${reason}. How many subscribers does his channel have now?`)\r\n    probArray.push(`${girl[0]} had ${numberL.toLocaleString()} subscribers on her youtube channel as of last month. This month she has lost `+\r\n                `${numberS.toLocaleString()} subscribers because she ${reason}. How many subscribers does her channel have?`)\r\n    probArray.push(`${boy[0]} got ${numberL.toLocaleString()} views on his latest video. His previous video got ${numberS.toLocaleString()} views. How `+\r\n                `many more views did his latest video get than his previous video?`)\r\n    probArray.push(`${girl[0]} got ${numberS.toLocaleString()} views on her latest video. Her other video went viral last week and got ${numberL.toLocaleString()} views. How `+\r\n                `many more views did her viral video get than her latest video?`)\r\n    var randProb = shuffleArray(probArray)[0]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n    return problem        \r\n}\r\nexport const addWhole7dig = (userSelection) => { //population\r\n    var city = shuffleArray(cityList)\r\n    var [numberS, numberM, numberL] = [randWhole(10000, 30000), city[1].pop, city[0].pop];\r\n    if (userSelection === \"2\") {\r\n        [numberS, numberM, numberL] = [randWhole(100000, 300000), randWhole(300000, 500000), city[0].pop];\r\n    \r\n        }\r\n    var year = randWhole(2015,2019)\r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n\r\n    probArray.push(`${city[0].city} had a population of ${numberL.toLocaleString()} as of the end of the year ${year}. Since `+\r\n                `then the city has increased in population by ${numberS.toLocaleString()}. What is the current population of ${city[0].city}?`)\r\n    probArray.push(`The population of ${city[0].city} has increased by ${numberS.toLocaleString()} since the end of the year ${year}. `+\r\n                `the population before then was ${numberL.toLocaleString()}. What is the new population of ${city[0].city}?`)\r\n    probArray.push(`Since the beginning of the year ${year} the population of ${city[0].city} has increased by ${numberS.toLocaleString()}. `+\r\n                `If the population started off ${year} at ${numberL.toLocaleString()}, how much is the current population?`)\r\n    var randProb = shuffleArray(probArray)[0]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n    return problem        \r\n}\r\n\r\nexport const subWhole7dig = (userSelection) => { //population\r\n    var city = shuffleArray(cityList)\r\n    var [numberS, numberM, numberL] = [randWhole(10000, 30000), city[1].pop, city[0].pop];\r\n    if (userSelection === \"2\") {\r\n        [numberS, numberM, numberL] = [randWhole(100000, 300000), randWhole(300000, 500000), city[0].pop];\r\n    \r\n        }\r\n    var year = randWhole(2015,2019)\r\n    var answer = (numberL-numberS)\r\n    var wrong= wrongOptions(answer, 'sub', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n\r\n    probArray.push(`${city[0].city} had a population of ${numberL.toLocaleString()} as of the end of the year ${year}. Since `+\r\n                `then the city has decreased in population by ${numberS.toLocaleString()}. What is the current population of ${city[0].city}?`)\r\n    probArray.push(`The population of ${city[0].city} has decreased by ${numberS.toLocaleString()} since the end of the year ${year}. `+\r\n                `the population before then was ${numberL.toLocaleString()}. What is the new population of ${city[0].city}`)\r\n    probArray.push(`Since the beginning of the year ${year} the population of ${city[0].city} has decreased by ${numberS.toLocaleString()}. `+\r\n                `If the population started off ${year} at ${numberL.toLocaleString()}, how much is the current population?`)\r\n    var randProb = shuffleArray(probArray)[0]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem        \r\n}\r\n\r\nvar badguyList = ['orcs','ogres', 'trolls','goblins', 'undead']\r\nvar goodguyList = ['elves','hobbits','humans']\r\n\r\nexport const subWhole5 = (userSelection) => { //elves and goblins\r\n    var badguys = shuffleArray(badguyList)[0]\r\n    var goodguys = shuffleArray(goodguyList)[0]\r\n    var {numberS, numberL} = asNumbers(userSelection)\r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    if (numberL > 99) {\r\n        probArray.push(`An army of ${numberS} ${goodguys} had to defeat an army of ${numberL} ${badguys} `+\r\n        `that were trying to invade their city. How many more ${badguys} were there than ${goodguys}?`)\r\n       probArray.push(`An army of ${numberL} ${badguys} were trying to invade a city of ${numberS} ${goodguys} ` +\r\n               `How many more ${badguys} were there than ${goodguys}?`)\r\n       probArray.push(`An army of ${numberL} ${badguys} were trying to invade a city of ${numberS} ${goodguys}. ` +\r\n               `How many more ${badguys} were there than ${goodguys}?`\r\n       )\r\n    } else {\r\n        probArray.push(`A group of ${numberL} ${badguys} stumbled upon on a group of ${numberS} ${goodguys} ` +\r\n        `at their campsite. How many more ${badguys} were there than ${goodguys}?`)\r\n        probArray.push(`While walking through the forest a group of ${numberS} ${goodguys} found a group of ` +\r\n        `${numberL} ${badguys}. How many more ${badguys} were there than ${goodguys}?`)\r\n    }\r\n    // multi-step = two armies combined against orcs\r\n    var randProb = shuffleArray(probArray)[0]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n    return problem        \r\n}\r\nexport const addWhole5 = (userSelection) => { //elves and goblins \r\n    var badguys = shuffleArray(badguyList)[0]\r\n    var goodguys = shuffleArray(goodguyList)\r\n    var {numberS, numberL} = asNumbers(userSelection)\r\n\r\n    var answer = (numberL-numberS)\r\n    var wrong= wrongOptions(answer, 'sub', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    if (numberL > 99) {\r\n        probArray.push(`An army of ${numberL} ${goodguys[0]} and ${numberS} ${goodguys[1]}had to defeat an army of ${badguys} `+\r\n        `that were trying to invade their city. How many ${goodguys[0]} and ${goodguys[1]} were there ${addWord}?`)\r\n       probArray.push(`An army of ${badguys} were trying to invade a city of ${numberS} ${goodguys[0]} ` +\r\n               `and ${numberL} ${goodguys[1]}. How many ${goodguys[0]} and ${goodguys[1]} were there ${addWord} in the forest?`)\r\n    } else {\r\n        probArray.push(`A group of ${badguys} stumbled upon on a group of ${numberL} ${goodguys[0]} ` +\r\n        `and ${numberS} ${goodguys[1]} at their campsite. How many ${goodguys[0]} and ${goodguys[1]} were there ${addWord}?`)\r\n        probArray.push(`While walking through the forest a group of ${numberS} ${goodguys[0]} found a group of ` +\r\n        `${numberL} ${goodguys[1]}. How many ${goodguys[0]} and ${goodguys[1]} were there ${addWord} in the forest?`)\r\n    }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem        \r\n}\r\n//Problem ideas: space distance? elves army of goblins, factory producing products, movies making money, tourists that visit a city/country, city = smaller numbers, country = larger. \r\n// pts in a video\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const addDec = (userSelection) => { //sport\r\n    var name = nameList[randWhole(0, nameList.length-1)]\r\n    var sport = sportList[randWhole(0, sportList.length-1)]\r\n    var [numberS, numberL] = [(Math.random()*49999+10011).toFixed(1),  (Math.random()*999999+500011).toFixed(2)];\r\n    // var f = 'format'\r\n    var answer= (numberL + numberS);\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS)\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    // var wrong = gen.shuffleArray(gen.wrongOptions(answer, 'add', numberL, numberS))\r\n    // var tempAC = [answer, wrong[0], wrong[1], wrong[2]]\r\n    // var AC = gen.shuffleArray(tempAC)\r\n    var randProb \r\n    var problem = { text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n\r\n    // console.log(problem)\r\n    return problem\r\n    \r\n}\r\n\r\nexport const subDec = (userSelection) => { //sport\r\n    var name = nameList[randWhole(0, nameList.length-1)]\r\n    var sport = sportList[randWhole(0, sportList.length-1)]\r\n    // var f = 'format'\r\n    var [numberS, numberL] = [(Math.random()*49999+10011).toFixed(1),  (Math.random()*999999+500011).toFixed(2)];\r\n\r\n    var answer= (numberL - numberS);\r\n    var wrong = shuffleArray(wrongOptions(answer, 'sub', numberL, numberS))\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var sub1 = (`${name[0]} played ${sport} for ${(numberS).toString()} minutes last year. ${name[1]} `+\r\n    `played ${sport} for ${(numberL).toString()} minutes last month. How many more minutes did `+\r\n     `${name[1]} play than ${name[0]}?`)\r\n    var sub2 = (`${name[0]} played ${sport} for ${(numberS).toString()} minutes last year. ${name[1]} `+\r\n     `played ${sport} for ${(numberL).toString()} minutes last month. What is the difference between `+\r\n    `the number of minutes ${name[1]} played and the number of minutes ${name[0]} played?`)\r\n\r\n    var randProb = shuffleArray([sub1, sub2])[0]\r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer: answer}\r\n    return problem\r\n}\r\nexport const randAddWhole = (userSelection) => {\r\n    var probArray = []\r\n    if (userSelection['Algorithm']) {\r\n        probArray.push(addAlg,addAlg,addAlg, addAlg, addAlg, addAlg)\r\n    } if (userSelection['Application']) {\r\n        if (userSelection['7 digit number']){\r\n            probArray.push(addWhole7dig)\r\n        }\r\n        probArray.push(addWhole, addWhole2, addWhole3, addWhole4,addWhole5)\r\n    }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(userSelection)\r\n}\r\nexport const randSubWhole = (userSelection) => {\r\n    var probArray = []\r\n    if (userSelection['Algorithm']) {\r\n        probArray.push(subAlg, subAlg, subAlg, subAlg, subAlg, subAlg, subAlg)\r\n    } if (userSelection['Application']) {\r\n        if (userSelection['7 digit numbers']){\r\n            probArray.push(subWhole7dig)\r\n        }\r\n        probArray.push(subWhole, subWhole2, subWhole3, subWhole4, subWhole5 )\r\n    }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(userSelection)\r\n}","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\divide-dec.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\general.js",["294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317"],"\r\nimport {Text,View, StyleSheet,} from \"@react-pdf/renderer\";\r\n\r\n\r\nexport var sportList = ['football', 'soccer', 'baseball']\r\nexport var boyList = ['Greg', 'David', 'Jason', 'Samuel', 'Alex', 'Trevor','Daniel',\r\n 'Matthew', 'Logan', 'Aiden', 'Max', 'Zack', 'Jeremy', 'Joshua', 'Andrew', 'Isaac', 'Julian', 'Javier', \r\n'Javier', 'Chris', 'Brett', 'Liam', 'Noah', 'Oliver', 'William', 'Elijah', 'James', 'Ben', 'Lucas', \r\n'Mason', 'Ethan', 'Henry', 'Kenneth', 'Frank', 'Jose', 'Jackson', 'Jared', 'Eduardo', 'Aaron', 'Carlos',\r\n'Cristian', 'Erick', 'Jorge', 'Misael', 'Josue', 'Juan', 'Miguel', 'Gabriel', 'Kevin',\r\n'Leandro', 'Luis','Emiliano', 'Walter', 'Angel', 'Raul', 'Josiah', 'Donte',\r\n\r\n]\r\nexport var girlList = ['Melissa', 'Danielle', 'Zoey', 'Denah', 'Isabella', 'Valentina', \r\n'Olivia', 'Emma', 'Ava', 'Sophia', 'Charlotte', 'Amelia', 'Harper', 'Evelyn', 'Avery', 'Lily', \r\n'Natalie', 'Aria', 'Layla', 'Lyla', 'Chloe', 'Grace', 'Madison','Victoria', 'Veronica', \r\n'Christine', 'Addison', 'Emmy', 'Mary', 'Jenna', 'Ashley','Maria', 'Kylie', 'Laura', 'Sarah', \r\n'Hannah','Rachel','Emily','Monica', 'Nicole', 'Stehanie', 'Camila', 'Miranda','Evelyn',\r\n'Diana','Brittany','Andrea','Allison','Lizbeth','Marilyn','Carrie','Angela','Hailey','Yasmin',\r\n'Lorena','Fatima','Natalia','Sophia','Lanay','Jaleska','Baylie',]\r\nexport var nameList = boyList.concat(girlList)\r\nexport var womanList = [\"Ms. Vallery\", \"Mrs. Estes\", 'Ms. Smith', 'Ms. Gonzalez', 'Ms. Hernandez', \r\n'Mrs. Mendez', 'Mrs. Magee', 'Mrs. Henderson', 'Mrs. Robertson', 'Mrs. Martin', 'Ms. Davidson', \r\n'Ms. Brown', 'Mrs. Perez', 'Mrs. Peterson', \"Mrs. Keefe\", \"Mrs. Mendoza\", \"Mrs. Orr\", \r\n\"Mrs. Guerra\", \"Mrs. Hatter\", \"Mrs. Rios\", \"Mrs. Quinones\", \"Mrs. Serrano\", \"Mrs. DePavia\",\r\n'Mrs. Duncan', 'Mrs. Howard', 'Mrs. Sanchez', 'Mrs. Swain', \r\n]\r\n\r\nexport var candyList = [\"sour patch kids\",\"skittles\",\"m&ms\", \"Mike & Ikes\", \"Starbursts\"]\r\nexport var forestAnimal = [\"rabbit\", \"frog\", \"moth\", \"snake\", \"spider\", \"monkey\", \"bird\"]\r\nexport var lakeAnimal = [\"frog\", \"duck\", \"otter\"]\r\nexport var desertAnimal = [\"lion\", \"zebra\", \"giraffe\",\"antelope\", \"meerkat\", \"warthog\", \"hyena\"]\r\n\r\nexport var bigPetList = [\"cat\", \"dog\", \"rabbit\"]\r\nexport var smallPetList = [\"rabbit\",\"guinea pig\", 'lizard','turtle','hamster','ferret','rat']\r\nexport var xsmallPetList = ['hamster', 'fish', 'frog','tarantula']\r\nexport var disasterList = [\"zombie apocalypse\", \"category 5 hurricane\", 'snow storm', 'tsunami','ice storm', 'flood','natural disaster']\r\n\r\nexport var storeList = [\"Kroger\", \"Mega Market\", \"Walmart\", \"Target\", \"Fiesta\", \"Whole Foods Market\"]\r\n\r\nexport var itemLong = ['string', 'wood', 'rope', 'paper', 'yarn', 'metal', 'wire', 'pipe']\r\nexport var measureList = ['inches','feet','yards','meters','centimeters']\r\n\r\nexport var groupList = [\"package\", \"container\" ]\r\nexport var itemList = [\"Pokemon cards\", \"baseball cards\", \"pencils\", \"erasers\", \"books\", \"stickers\", \"pens\", \"jelly beans\", \"candies\", \"M&Ms\", \"cookies\", \"small toys\",]\r\nexport var itemPkgList = [\"Cheetos\", \"crackers\", \"Skittles\", \"takis\", \"Starbursts\", \"M&Ms\", \"tortilla chips\", \"fruit snacks\", \"gummy bears\", \"Sour Patch Kids\", \"Doritos\", \"Pasta\"]\r\nexport var itemList400_1500 = ['phone','tv','computer','laptop', 'game system']\r\nexport var itemList20_60 = [\"game\", \"blanket\", \"game controller\"]\r\nexport var itemList10_20 = [\"toy\", 'book', 'movie', 'candle', 'lego set', 'board game', 'card game']\r\nexport var itemList2_9 = ['doll', 'lego set', 'movie', 'toy', 'bag of chip', 'teddy bear', 'puzzle', \"rubik's cube\", ]\r\nexport var foodList = [\"soup\", \"pizza\", \"pretzel\", \"cookie\", \"potato\", \"cracker\", \"banana\"]\r\nexport var disasterFoodList = ['cookie', 'cracker','oatmeal','soup', 'candy', 'frozen dinner','mac & cheese']\r\nexport var themeList = [\"flower\", \"space\",\"superhero\",\"neon\",\"jungle\",\"glitter\"]\r\nexport var tourList = ['glacier', 'whale watching', 'ice cave', 'puffin viewing', 'castle', 'northern lights viewing', 'volcano viewing', 'mountain climbing', 'scuba diving', 'zipline', 'snorkeling']\r\nexport var eventHire = ['caterer', 'photographer', 'band', 'DJ']\r\nexport var each = ['for each', 'for one', 'per']\r\nexport var canItemList = ['black beans', 'kidney beans', 'chick peas', 'spinach', 'pinto beans', 'sweet potatoes']\r\nexport var materialList = ['maple wood', 'pipe', 'drywall', 'roof shingles', 'bricks']\r\nexport var buildList = ['house', 'apartment building', 'shed', 'tree house', 'library', 'store']\r\nexport const roundDec = (num, pv) => {\r\n  if (Number.isInteger(num)) {\r\n    return num\r\n  } else {\r\n    var roundNum = Math.round((num + Number.EPSILON) * Math.pow(10, pv)) / Math.pow(10, pv)\r\n    return Number(roundNum)\r\n\r\n  }\r\n\r\n}\r\nexport function randWhole(x, y, nozerone){\r\n  var num =  Math.floor(Math.random() * (y - x + 1) + x)\r\n  if (nozerone === 'true'){\r\n    if (num !== 0 && num!== 1){\r\n      return num\r\n    }else {\r\n        return randWhole(x, y, 'true')\r\n    }\r\n  } else {\r\n    return num\r\n  }\r\n\r\n}\r\nexport const randDec = (x, y, place) => {\r\n  var num = (Math.random()*(y-x) + x).toFixed(place)\r\n  if (Number.isInteger(Number(num))) {\r\n    return randDec(x,y,place)\r\n  } else {\r\n    return num\r\n  }\r\n}\r\nexport const decPV = (x) => {\r\n  if (Number.isInteger(Number(x))){\r\n    return 0\r\n  }else{\r\n    return x.toString().split('.')[1].length\r\n  }\r\n}\r\nexport const largestDecPV = (x, y) => {\r\n  return Math.max(decPV(x), decPV(y))\r\n}\r\nexport const decOp = (x, y, pv, op) => {\r\n  return (Number(eval(x+op+y).toFixed(pv)))\r\n}\r\n\r\nexport const removeDec = (x) => {\r\n  return Number(x.toString().replace('.', ''))\r\n}\r\nexport const splitDec = (x) => {\r\n  let splitDec = x.toString().split('.')\r\n  let whole = splitDec[0]\r\n  if (splitDec[1] === undefined){\r\n    var decimal = ''\r\n  } else {\r\n    decimal = splitDec[1]\r\n  }\r\n  return [whole, decimal]\r\n\r\n}\r\n\r\n\r\n\r\nexport const cap = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\nexport var cityList = [{city:'San Francisco', pop:randWhole(850000,900000)},\r\n                    {city:'Houston', pop:randWhole(2000000,2500000)},\r\n                    {city:'Austin', pop:randWhole(900000,1000000)},\r\n                    {city:'San Antonio', pop:randWhole(1400000,1500000)},\r\n                    {city:'Los Angeles', pop:randWhole(3700000,4300000)}]\r\n\r\n\r\nexport const shuffleArray = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return (array)\r\n  }\r\nexport const wrongOptions = (answer, op, numL, numS, pv) => {\r\n    var wrong = []\r\n    wrong.push(answer+1, answer*10, answer+10) // need more\r\n    var stringNumS = (numS).toString()\r\n    if (op === 'multiply') {\r\n      if (numS > 9) { //no placeholder\r\n        var noPlaceHolder = Math.floor(Number(stringNumS[0])*numL+ Number(stringNumS[1])*numL)\r\n        console.log('correct:'+ answer+'noplaceholder:'+noPlaceHolder)\r\n        wrong.push(noPlaceHolder)\r\n      } else {\r\n      }\r\n      wrong.push(answer+100)\r\n    }else if (op === 'add') {\r\n      wrong.push(answer+2, numL+numS+numL, numL-numS, answer-10, answer-1, answer-2, answer+10)\r\n    }else if (op === 'sub') {\r\n      wrong.push(answer+2, answer-10, answer-1, answer-2, answer+10, numL+numS)\r\n    }else if (op === 'divide') {\r\n      wrong.push(answer-1, answer+10, numL+numS, numL*numS)\r\n    } else if (op === 'decimal') {\r\n      wrong.push(roundDec(answer*100, pv), roundDec(answer/10, pv), roundDec(answer+0.1, pv), roundDec(answer+0.2, pv), roundDec(answer+0.01, pv), Math.abs(roundDec(answer-0.1, pv)), Math.abs(roundDec(answer-0.01, pv)), Math.abs(roundDec(answer-0.2, pv)),) //(numL+numS).toFixed(2), (answer +100).toFixed(1), (answer+0.1).toFixed(2), (answer +0.03).toFixed(2),\r\n    \r\n    }else {\r\n      wrong.push(answer +3, answer-1)\r\n    }\r\n    var wrongChoice = shuffleArray(wrong)\r\n    return ([wrongChoice[0], wrongChoice[1], wrongChoice[2]])\r\n  }\r\n  // const tstyles = StyleSheet.create({\r\n  //   table: {\r\n  //       display: \"table\",\r\n  //        width: \"200px\",\r\n  //        textAlign:'center',\r\n  //   },\r\n  //   row: {\r\n  //       flexDirection: \"row\",\r\n  //   },\r\n  //   cell: {\r\n  //       // padding: '3px'\r\n  //     },\r\n  //   header: {\r\n  //     backgroundColor: 'grey'\r\n  //   }\r\n  // });\r\n  export const answerChoicesKey = (answer, wrong, wrong2, wrong3, f) => {\r\n    var answers = [answer, wrong, wrong2, wrong3]\r\n    answers = shuffleArray(answers)\r\n    if (f === '$') {\r\n      \r\n      answers = shuffleArray([roundDec(answer,2), roundDec(wrong,2), roundDec(wrong2,2), roundDec(wrong3,2)])\r\n      var [$, unit] = ['$', '']\r\n    } else if (f === undefined) {\r\n      [$, unit] = ['', '']\r\n    } else {\r\n      [$, unit] = ['', ' '+f]\r\n    } \r\n    if (typeof answer === 'string') {\r\n      var A = (' A ' + answers[0])\r\n      var B = (' B ' + answers[1])\r\n      var C = (' C ' + answers[2])\r\n      var D = (' D ' + answers[3])\r\n      var E = ''\r\n      if (answers[0] === answer) {\r\n      var correctAnswer = A\r\n    } else if (answers[1] === answer) {\r\n      correctAnswer = B\r\n    } else if (answers[2] === answer) {\r\n      correctAnswer = C\r\n    } else {\r\n      correctAnswer = D\r\n    }\r\n    } else if (typeof answer === 'number'){\r\n      A = (' A ' + $ + answers[0].toLocaleString()+ unit)\r\n      B = (' B ' + $ + answers[1].toLocaleString()+ unit)\r\n      C = (' C ' + $ + answers[2].toLocaleString()+ unit)\r\n      D = (' D ' + $ + answers[3].toLocaleString()+ unit)\r\n      E = ''\r\n      if (answers[0] === answer) {\r\n        correctAnswer = A\r\n    } else if (answers[1] === answer) {\r\n      correctAnswer = B\r\n    } else if (answers[2] === answer) {\r\n      correctAnswer = C\r\n    } else {\r\n      correctAnswer = D\r\n    }\r\n    } else { //answerchoices are tables\r\n      A = <View><Text>A</Text>{answers[0]}</View>\r\n      B = <View><Text>B</Text>{answers[1]}</View>\r\n      C = <View><Text>C</Text>{answers[2]}</View>\r\n      D = <View><Text>D</Text>{answers[3]}</View>\r\n      correctAnswer = ''\r\n      var answerLetter = ''\r\n      if (answers[0] === answer) {\r\n        correctAnswer = <View>{A}</View>\r\n    } else if (answers[1] === answer) {\r\n        correctAnswer = <View>{B}</View>\r\n    } else if (answers[2] === answer) {\r\n      correctAnswer = <View>{C}</View>\r\n    } else {\r\n      correctAnswer = <View>{D}</View>\r\n    }\r\n\r\n    }\r\n\r\n    return [A, B, C, D, correctAnswer, answerLetter]\r\n  }\r\n//   export const numberWithCommas = (x) => {\r\n//     return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n// }","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\multiply.js",["318","319","320","321","322","323"],"import * as g from \"./general\";\r\nimport {randWhole, shuffleArray, answerChoicesKey, wrongOptions, cap} from './general'\r\nimport {verticalAlign} from './vertical-align'\r\nconst multNumbers = (userSelection) =>{\r\n    var numArray = []\r\n    if (userSelection['1 by 1 digit']) {\r\n        numArray.push([randWhole(2, 9), randWhole(2, 20), randWhole(2, 9)])\r\n\r\n    } if (userSelection['2 by 1 digit']) {\r\n        \r\n        numArray.push([randWhole(2, 9), randWhole(12, 67), randWhole(10, 99)])\r\n\r\n    } if (userSelection['3 by 1 digit']) {\r\n        numArray.push([randWhole(2, 9), randWhole(12, 67), randWhole(100, 999)])\r\n\r\n    } if (userSelection['4 by 1 digit']) { \r\n        numArray.push([randWhole(2, 9), randWhole(12, 67), randWhole(1000, 9999)])\r\n\r\n    } if (userSelection[\"2 by 2 digit\"]) { \r\n        numArray.push([randWhole(12, 49), randWhole(12, 67), randWhole(50, 99)])\r\n\r\n    } if (userSelection[\"3 by 2 digit\"]) { \r\n        numArray.push([randWhole(20, 99), randWhole(20, 90), randWhole(102, 999)])\r\n    }\r\n    var numList = shuffleArray(numArray)[0]\r\n    return numList\r\n}\r\nexport const multAlg = (userSelection) => {\r\n    var numList = multNumbers(userSelection)\r\n    var [numberS, numberL] = [numList[0], numList[2]]\r\n    var answer = numberL*numberS\r\n    var wrong= wrongOptions(answer, 'multiply', numberL, numberS) \r\n    wrong.push()\r\n    wrong = shuffleArray(wrong)\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    if (userSelection['Vertical']) {\r\n        var prob = verticalAlign(numberL.toLocaleString(), '×', numberS.toLocaleString()) \r\n    } else {\r\n        prob = `${numberL.toLocaleString()} × ${numberS.toLocaleString()} = `\r\n    }\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\nexport const multWhole = (userSelection) => { //basic product/sum/difference\r\n    // var numberList = multNumbers(userSelection)\r\n    // var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    var [numberS, numberM, numberL] = multNumbers(userSelection)\r\n\r\n    if (userSelection.level === '1') {\r\n        var prob1 = (`What is the product of ${numberS} and ${numberL}?`)\r\n        var prob2 = (`What is the product of ${numberL} and ${numberS}?`)\r\n        var prob3 = (`A number is ${numberL} times as large as ${numberS}. What is the number?`)\r\n        var prob4 = (`A number is ${numberS} times as large as ${numberL}. What is the number?`)\r\n        var randProb = [prob1, prob2, prob3, prob4][randWhole(0,3)]\r\n        var answer = numberS*numberL\r\n\r\n    } else if (userSelection.level === '2') {\r\n        prob1 = (`What is the sum of ${numberM} and the product of ${numberL} and ${numberS}?`)\r\n        prob2 = (`What is the sum of ${numberM} and the product of ${numberS} and ${numberL}?`)\r\n        prob3 = (`What is the difference when ${numberM} is subtracted from the product of ${numberS} and ${numberL}?`)\r\n        prob4 = (`What is the difference when ${numberM} is subtracted from the product of ${numberL} and ${numberS}?`)\r\n        randProb = [prob1, prob2, prob3, prob4][randWhole(0,3)]\r\n        if (randProb === (prob1 || prob2)){ \r\n        } else {\r\n            answer = numberL*numberS-numberM\r\n        }\r\n    } else {\r\n        var numberL2 = randWhole(111,99) //not going to change based on specify\r\n        var numberS2 = randWhole(12,99)\r\n        prob1 = (`What is the difference between the product of ${numberL} and ${numberS} and the product of ${numberS2} and ${numberL2}?`)\r\n        prob2 = (`What is the sum of the product of ${numberL} and ${numberS} and the product of ${numberS2} and ${numberL2}?`)\r\n        prob3 = (`A number is ${numberS} times as much as the sum of ${numberM} and ${numberS2}and ${numberS}. What is the number?`)\r\n        randProb = [prob1, prob2, prob3][randWhole(0,2)]\r\n\r\n        if (randProb === prob1){\r\n            answer = numberL*numberS - numberS2*numberL2\r\n        } else if (randProb === prob2){\r\n            answer = numberL*numberS + numberS2*numberL2\r\n        } else {\r\n            answer = numberS*(numberM+numberS2+numberS)\r\n        }\r\n    }\r\n    \r\n    let wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    let AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    let problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n\r\n    return problem     \r\n\r\n}\r\n\r\n\r\nexport const multWhole2 = (userSelection) => { //mass\r\n    var [group, item] = [shuffleArray(g.groupList), shuffleArray(g.itemList)]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    // var numberList = multNumbers(userSelection)\r\n    var [numberS, numberM, numberL] = multNumbers(userSelection)\r\n\r\n    if (userSelection.level === '1') {\r\n        var prob1 = `${cap(e)} ${group[0]} of ${item[0]} has a mass of ${numberS} grams. What is the mass of `+\r\n        `${numberL} ${group[0]}s of ${item[0]} in grams?`\r\n        var prob2 = `There are ${numberL} ${group[0]}s of ${item[0]}. If ${e} ${group[0]} of ${item[0]} `+\r\n        `has a mass of ${numberS} grams, what is the mass of all these ${item[0]}s?`\r\n    } else {\r\n        prob1 = `${cap(e)} ${group[0]} of ${item[0]} has a mass of ${numberS} grams. ${cap(e)} ${group[0]} of `+\r\n        `${item[1]} has a mass of ${numberM} grams. What is the mass of ${numberL} ${group[0]}s of ${item[0]} in grams?`\r\n        prob2 = `There are ${numberL} ${group[0]}s of ${item[0]} and there are ${numberM} ${group[0]}s of `+\r\n        `${item[1]}. What is the mass of all the ${group[0]}s of ${item[0]} if ${e} has a mass of ${numberS} grams? `\r\n    }\r\n    let randProb = [prob1, prob2][randWhole(0,1)]\r\n    let answer = numberS*numberL\r\n    let wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    let AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], 'grams')\r\n    let problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem   \r\n}\r\n\r\nexport const multWhole3 = (userSelection) => { //simple buying items\r\n    var [expItem, girl] = [shuffleArray(g.itemList20_60), shuffleArray(g.girlList)]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    // var numberList = multNumbers(userSelection)\r\n    var [numberS, , numberL] = multNumbers(userSelection)\r\n    \r\n    var prob1 = `${cap(e)} ${expItem[0]} costs $${numberS}. How much would it cost to buy ${numberL} ${expItem[0]}s?`\r\n    var prob2 = `${girl[0]} buys ${numberL} ${expItem[0]}s which cost $${numberS} each. How much would it cost her to buy \r\n                ${numberL} ${expItem[0]}s?`\r\n    let randProb = [prob1, prob2][randWhole(0,1)]\r\n    let answer =numberS*numberL\r\n    let wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    let AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    let problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem   \r\n}\r\nexport const multWholeby1 = (userSelection) => { //by1 digit only Disaster\r\n    var [food, boy, girl, disaster] = [shuffleArray(g.disasterFoodList)[0], shuffleArray(g.boyList)[0], shuffleArray(g.girlList)[0],shuffleArray(g.disasterList)[0]]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    var numberList = multNumbers(userSelection)\r\n    var [numberS, , numberL] = [randWhole(2,7), numberList[1], numberList[2]]\r\n    var prob1 = (`${boy} is preparing for a ${disaster}. He wants to buy a lot of his favorite food so that he does not `+\r\n    `run out. ${cap(e)} box of ${food} costs $${numberS}. How much would it cost him to buy `+\r\n    `${numberL} boxes?`)\r\n    var prob2 = (`${girl} is getting ready in case of a ${disaster}. She wants stock up on ${food} so she purchases `+\r\n    `${numberL} boxes. ${cap(e)} box of ${food} costs $${numberS}. How much would it cost her to buy `+\r\n    `all the boxes?`)\r\n    let randProb = [prob1, prob2][randWhole(0,1)]\r\n    let answer =numberS*numberL\r\n    let wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    let AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    let problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem   \r\n}\r\n// export const multWhole5 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole6 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole7 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole8 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole9 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole10 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole11 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n\r\n\r\n\r\n  \r\n\r\n    // problem = (`${randGirl} 's ${randPetBig} weighs ${numberL} pounds. ${randBoy}'s ${randPetBig} weighs ${NumberS}`\r\n    // ` times as much as ${randGirl}'s ${randPetBig}. What does ${randBoy}'s ${randPetBig} weigh in pounds?`) //2 by 2 only\r\n\r\n\r\n\r\n    // problem = (`${randBoy} buys ${numberL} large bags of ${randCandy} for Halloween. It costs `\r\n    // `${numberS}$ for each bag of ${randCandy}. How much would it cost him to buy all the bags?`)\r\n\r\n    // problem = (`${randSchool} ordered ${numberL} cases of ${randSubject} textbooks. ${cap(e)} case holds ${numberS}`\r\n    // ` textbooks. How many textbooks did the school buy?`)\r\n\r\n    // problem = (`A ${randSize} bag of ${randFood}'s contains ${numberL} calories. How many calories are in ` \r\n    // `${numberS} ${randSize} bags of ${randFood}s?`)\r\n\r\n\r\n\r\n\r\n    export const randMultWhole = (userSelection) => {\r\n        let probArray = []\r\n        if (userSelection['Application']) {\r\n            probArray.push(multWhole, multWhole2, multWhole3)\r\n            if (userSelection['4 by 1 digit']|| userSelection['3 by 1 digit'] || userSelection['2 by 1 digit'] || userSelection['1 by 1 digit']) {\r\n                probArray.push(multWholeby1)\r\n            }\r\n        } if (userSelection['Algorithm']) {\r\n            probArray.push(multAlg)\r\n        }\r\n        let randProb = shuffleArray(probArray)[0]\r\n        return randProb(userSelection)\r\n    }","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\area-perimeter.js",["324","325","326","327","328"],"import {randWhole, shuffleArray, wrongOptions, answerChoicesKey} from './general.js'\r\nimport Table from './Table';\r\nimport {\r\n  StyleSheet,\r\n} from \"@react-pdf/renderer\";\r\n// const styles = StyleSheet.create({\r\n//   page: { flexDirection: \"column\", padding: 25 },\r\n//   table: {\r\n//     fontSize: 10,\r\n//     // width: 550,\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     justifyContent: \"flex-start\",\r\n//     alignContent: \"stretch\",\r\n//     flexWrap: \"nowrap\",\r\n//     alignItems: \"stretch\"\r\n//   },\r\n//   row: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"row\",\r\n//     justifyContent: \"space-around\",\r\n//     alignContent: \"stretch\",\r\n//     flexWrap: \"nowrap\",\r\n//     alignItems: \"stretch\",\r\n//     flexGrow: 0,\r\n//     flexShrink: 0,\r\n//     flexBasis: 35\r\n//   },\r\n//   cell: {\r\n//     borderColor: \"#cc0000\",\r\n//     borderStyle: \"solid\",\r\n//     borderWidth: 2,\r\n//     flexGrow: 1,\r\n//     flexShrink: 1,\r\n//     flexBasis: \"auto\",\r\n//     alignSelf: \"stretch\"\r\n//   },\r\n//   header: {\r\n//     backgroundColor: \"#eee\"\r\n//   },\r\n//   headerText: {\r\n//     fontSize: 11,\r\n//     fontWeight: 1200,\r\n//     color: \"#1a245c\",\r\n//     margin: 8\r\n//   },\r\n//   tableText: {\r\n//     margin: 10,\r\n//     fontSize: 10,\r\n//     color: 'blue'\r\n//   }\r\n// });\r\n\r\nconst cell_style_horizontal = (row_index, col_index, data, direction) => {\r\n  const borderLeftWidth = (col_index === 0 ||  (col_index===1 && row_index ===1)) ? 0 : 1\r\n  const borderTopWidth = (col_index === 0) ? 0 : 1\r\n  const borderRightWidth = (row_index===0 && col_index===1) ? 1 : 0\r\n  const borderBottomWidth = (row_index === 1 || col_index === 0) ? 0 : 1\r\n  const backgroundColor = (row_index === 0 && col_index === 1) ? 'white' : 'white'\r\n  const width = (col_index ===1) ? '100px' : '14px'\r\n  const height = (row_index === 0) ? '50px' : '15px'\r\n  // const height = (row_index === 0) ? `${randWhole(15, 70)}px` : '15px'\r\n  // const width = (data[0][0] < 40) ? `${data[0][0]*10}px` : (data[0][0] > 200) ? '200px' : `${data[0][0]}px`\r\n  // const height = (data[1][1] <100) ? `${data[1][1]*10}px` : (data[1][1] > 300) ? '300px' : `${data[1][1]}px`\r\n  // const width = (data[0][0])\r\n\r\n  return {\r\n      // fontFamily: 'Arial', \r\n      width, height,\r\n      borderLeftWidth, borderRightWidth,\r\n      borderTopWidth, borderBottomWidth,\r\n      borderStyle: \"solid\",\r\n      backgroundColor,\r\n  }\r\n}\r\n// const cell_style_vertical = (row_index, col_index, data, direction) => {\r\n//   const borderLeftWidth = (col_index === 0) ? 1 : 0\r\n//   const borderTopWidth = (row_index === 0) ? 1 : 0\r\n//   const borderRightWidth = 1\r\n//   const borderBottomWidth = 1\r\n//   if (direction === 'vertical') {\r\n//     var backgroundColor = (row_index === 0) ? '#b6b6b6' : 'white'\r\n\r\n//   } else {\r\n//     backgroundColor = (col_index === 0) ? '#b6b6b6' : 'white'\r\n//   }\r\n\r\n//   return {\r\n//       // fontFamily: 'Arial', \r\n//       width: '33%',\r\n//       borderLeftWidth, borderRightWidth,\r\n//       borderTopWidth, borderBottomWidth,\r\n//       borderStyle: \"solid\",\r\n//       backgroundColor,\r\n//   }\r\n// }\r\n// const cell_style_square = (row_index, col_index, data, direction) => {\r\n//   const borderLeftWidth = (col_index === 0) ? 1 : 0\r\n//   const borderTopWidth = (row_index === 0) ? 1 : 0\r\n//   const borderRightWidth = 1\r\n//   const borderBottomWidth = 1\r\n//   if (direction === 'vertical') {\r\n//     var backgroundColor = (row_index === 0) ? '#b6b6b6' : 'white'\r\n\r\n//   } else {\r\n//     backgroundColor = (col_index === 0) ? '#b6b6b6' : 'white'\r\n//   }\r\n\r\n//   return {\r\n//       // fontFamily: 'Arial', \r\n//       width: '33%',\r\n//       borderLeftWidth, borderRightWidth,\r\n//       borderTopWidth, borderBottomWidth,\r\n//       borderStyle: \"solid\",\r\n//       backgroundColor,\r\n//   }\r\n// }\r\nconst tstyles = StyleSheet.create({\r\n  table: {\r\n      display: \"table\",\r\n       textAlign:'center',\r\n  },\r\n  row: {\r\n      flexDirection: \"row\",\r\n  },\r\n  cell: {\r\n    },\r\n  header: {\r\n    backgroundColor: 'grey'\r\n  }\r\n});\r\n\r\nexport const area = (userSelection) => {\r\n  var text = 'What is the area of the rectangle?'\r\n  var numberS = randWhole (2,8)\r\n  var numberL = randWhole (9, 19)\r\n  var rectangle = Table([\r\n    [numberS, ''],\r\n    ['', numberL]\r\n  \r\n      ], cell_style_horizontal, tstyles, text, 'horizontal')\r\n    var answer = numberS*numberL\r\n  \r\n             \r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    // var randProb = [table1, table2][randWhole(0,1)]\r\n    var problem = {text: rectangle,\r\n    answerChoices: AC,\r\n    correctAnswer: answer,\r\n    }\r\n    return problem\r\n}\r\n\r\n\r\nexport const randArea = (userSelection) => {\r\n  var probArray = [area]\r\n\r\n  var randProb = shuffleArray(probArray)[0]\r\n  return randProb(userSelection)\r\n}\r\n","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\tables.js",["329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414"],"import { StyleSheet } from \"@react-pdf/renderer\";\r\n  import {randWhole, shuffleArray, answerChoicesKey, randDec, roundDec\r\n  } from './general.js'\r\n  import Table from './Table';\r\n// const styles = StyleSheet.create({\r\n//   page: { flexDirection: \"column\", padding: 25 },\r\n//   table: {\r\n//     fontSize: 10,\r\n//     width: 550,\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     justifyContent: \"flex-start\",\r\n//     alignContent: \"stretch\",\r\n//     flexWrap: \"nowrap\",\r\n//     alignItems: \"stretch\"\r\n//   },\r\n//   row: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"row\",\r\n//     justifyContent: \"space-around\",\r\n//     alignContent: \"stretch\",\r\n//     flexWrap: \"nowrap\",\r\n//     alignItems: \"stretch\",\r\n//     flexGrow: 0,\r\n//     flexShrink: 0,\r\n//     flexBasis: 35\r\n//   },\r\n//   cell: {\r\n//     borderColor: \"#cc0000\",\r\n//     borderStyle: \"solid\",\r\n//     borderWidth: 2,\r\n//     flexGrow: 1,\r\n//     flexShrink: 1,\r\n//     flexBasis: \"auto\",\r\n//     alignSelf: \"stretch\"\r\n//   },\r\n//   header: {\r\n//     backgroundColor: \"#eee\"\r\n//   },\r\n//   headerText: {\r\n//     fontSize: 11,\r\n//     fontWeight: 1200,\r\n//     color: \"#1a245c\",\r\n//     margin: 8\r\n//   },\r\n//   tableText: {\r\n//     margin: 10,\r\n//     fontSize: 10,\r\n//     color: 'blue'\r\n//   }\r\n// });\r\nconst tstyles = StyleSheet.create({\r\n  table: {\r\n      display: \"table\",\r\n       width: \"200px\",\r\n       textAlign:'center',\r\n  },\r\n  row: {\r\n      flexDirection: \"row\",\r\n  },\r\n  cell: {\r\n      // padding: '3px'\r\n    },\r\n  header: {\r\n    backgroundColor: 'grey'\r\n  }\r\n});\r\n\r\nconst cell_style = (row_index, col_index, data, direction) => {\r\n  const borderLeftWidth = (col_index === 0) ? 1 : 0\r\n  const borderTopWidth = (row_index === 0) ? 1 : 0\r\n  const borderRightWidth = 1\r\n  const borderBottomWidth = 1\r\n  if (direction === 'vertical') {\r\n    var backgroundColor = (row_index === 0) ? '#b6b6b6' : 'white'\r\n\r\n  } else {\r\n    backgroundColor = (col_index === 0) ? '#b6b6b6' : 'white'\r\n  }\r\n\r\n  return {\r\n      // fontFamily: 'Arial', \r\n      width: '33%',\r\n      borderLeftWidth, borderRightWidth,\r\n      borderTopWidth, borderBottomWidth,\r\n      borderStyle: \"solid\",\r\n      backgroundColor,\r\n  }\r\n}\r\nconst randQuestion = () => {\r\n  var questionArray = ['Which equation represents the pattern in the table above?',\r\n                      'Which of the following equations best represents the pattern shown in the table above?',\r\n                      'Which equation best represents the pattern shown in the table above?',\r\n                      'The table above shows a pattern based on the x and y values. Which equation shows the same pattern?'\r\n]\r\n  return shuffleArray(questionArray)[0]\r\n}\r\n\r\n\r\nconst tableNumbers = (userSelection) =>{ \r\n  var smallDec = [randDec(1,9,1), randDec(0.01,0.99,2), randDec(0.1,0.8,1), randDec(0.01,0.09,2) ]\r\n  var largeDec = [randDec(1, 9,2), randDec(0.1,0.99,2)]\r\n  var numArray = []\r\n  var randNum = randWhole(2, 10)\r\n  var randNum2 = randWhole(2, 10)\r\n  var randMultiplier = randWhole(2, 9)\r\n  var tableNumArray = [[randNum, randNum+randNum2, randNum+randNum2, randNum+randNum2], [1, 2, 3, 4], [randNum, randNum*randMultiplier, randNum*randMultiplier*2, randNum*randMultiplier*3], [randNum, randNum+1, randNum+2, randNum+3]]\r\n  if (userSelection[\"Whole numbers\"] || !('Whole numbers' in userSelection) && !('Decimals' in userSelection) && !('Integers' in userSelection)){\r\n    numArray.push(randWhole(2,9))\r\n  } if (userSelection[\"Whole numbers\"] && userSelection.level ==='2'){\r\n    numArray.push(randWhole(11,15))\r\n  } if (userSelection[\"Whole numbers\"] && userSelection.level === '3'){\r\n    numArray.push(randWhole(16,38))\r\n  } if (userSelection[\"Decimals\"] && userSelection.level === '1'){\r\n    numArray.push(shuffleArray(smallDec)[0])\r\n    var dec = randDec(2, 9, 2)\r\n    tableNumArray.push([dec, eval(dec+'+1'), eval(dec+'+2'), eval(dec+'+3')])\r\n  } if (userSelection[\"Decimals\"] && userSelection.level === '2'){\r\n    numArray.push(shuffleArray(largeDec)[0])\r\n    dec = randDec(2, 9, 2)\r\n    tableNumArray.push([dec, roundDec(eval(dec+'+1'),2), roundDec(eval(dec+'+2'),2), roundDec(eval(dec+'+3'),2)])\r\n\r\n  } if (userSelection[\"Decimals\"] && userSelection.level === '3'){\r\n    dec = randDec(2, 9, 2)\r\n    numArray.push(shuffleArray(largeDec)[0])\r\n    tableNumArray.push([dec, roundDec(eval(dec+'+0.1'),2), roundDec(eval(dec+'+1.5'),2), roundDec(eval(dec+'+2.7'),2)])\r\n\r\n  } \r\n  var numList = shuffleArray(numArray)[0]\r\n  var tableNumList = shuffleArray(tableNumArray)[0]\r\n  var tableNumList2 = shuffleArray(tableNumArray)[0]\r\n  return [numList, tableNumList, tableNumList2]\r\n}\r\nexport const tableMultiply1 = (userSelection) => {\r\n  var text = randQuestion()\r\n  var [number, tableNum] = tableNumbers(userSelection) \r\n\r\n  var table1 = Table([\r\n    ['x', 'y'],\r\n    [tableNum[0], roundDec(tableNum[0]*number,2)],\r\n    [tableNum[1], roundDec(tableNum[1]*number,2)],\r\n    [tableNum[2], roundDec(tableNum[2]*number,2)],\r\n    [tableNum[3], roundDec(tableNum[3]*number,2)],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n\r\nvar table2 = Table([\r\n  ['x', tableNum[0], tableNum[1], tableNum[2], tableNum[3]],\r\n  ['y', roundDec(tableNum[0]*number,2), roundDec(tableNum[1]*number,2), roundDec(tableNum[2]*number,2), roundDec(tableNum[3]*number,2)]\r\n  \r\n  ], cell_style, tstyles, text, 'horizontal')\r\n  var answer = `y = ${number}x`\r\n  var wrong1 = [`y = x + ${roundDec(Math.abs(eval(number*tableNum[0]+'-'+tableNum[0]),2))}`, \r\n                `y = x + ${roundDec(number/10,2)}`, \r\n                `y = ${roundDec(eval(number+'+2'),2)}x`\r\n              ]\r\n  var wrong2 = [`y = x + ${roundDec(eval(number+2),2)}`, \r\n                `y = x + ${roundDec(eval(number+'+'+randWhole(2,4)),2)}`,\r\n                `y = ${roundDec(eval(number+'+1'),2)}x`]\r\n  var wrong3 = [`y = ${roundDec(number*10,2)}x`, \r\n                `y = ${roundDec(eval(number+'+'+randWhole(2,4)),2)}x`,\r\n                `y = ${roundDec(eval(number+'+1'),2)}x`]               \r\n  var wrong = [wrong1, wrong2, wrong3][randWhole(0,2)]\r\n  var randProb = [table1, table2][randWhole(0,1)]\r\n  var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n  var problem = {text: randProb,\r\n  answerChoices: AC,\r\n  correctAnswer: answer,\r\n  }\r\n  return problem\r\n\r\n}\r\n\r\n\r\nexport const tableMultiply2 = (userSelection) => {\r\n  var [number, tableNum, tableNum2] = tableNumbers(userSelection) \r\n  var text = ''\r\n  var answer = Table([\r\n      ['x', 'y'],\r\n      [tableNum[0], roundDec(tableNum[0]*number,2)],\r\n      [tableNum[1], roundDec(tableNum[1]*number,2)],\r\n      [tableNum[2], roundDec(tableNum[2]*number,2)],\r\n      [tableNum[3], roundDec(tableNum[3]*number,2)],\r\n  \r\n  ], cell_style, tstyles, text, 'vertical')\r\n  var wrong1 = Table([\r\n      ['x', 'y'],\r\n      [tableNum[0], roundDec(tableNum[0]*(number),2)],\r\n      [tableNum[1], roundDec(tableNum[1]*(eval(number+'+1')),2)],\r\n      [tableNum[2], roundDec(tableNum[2]*(eval(number+'+2')),2)],\r\n      [tableNum[3], roundDec(tableNum[3]*(eval(number+'+3')),2)],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n  var wrong2 = Table([\r\n      ['x', 'y'],\r\n      [tableNum2[0]*2, roundDec(tableNum2[0]*2*(eval(number+'+1')),2)],\r\n      [tableNum2[1]*2, roundDec(tableNum2[1]*2*(eval(number+'+1')),2)],\r\n      [tableNum2[2]*2, roundDec(tableNum2[2]*2*(eval(number+'+1')),2)],\r\n      [tableNum2[3]*2, roundDec(tableNum2[3]*2*(eval(number+'+1')),2)],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n  var wrong3 = Table([\r\n      ['x', 'y'],\r\n      [tableNum[0], roundDec(eval(tableNum[0]+'+'+number),2)],\r\n      [tableNum[1], roundDec(eval(tableNum[1]+'+'+number),2)],\r\n      [tableNum[2], roundDec(eval(tableNum[2]+'+'+number),2)],\r\n      [tableNum[3], roundDec(eval(tableNum[3]+'+'+number),2)],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n  if (userSelection.specify === 'Decimals') {\r\n    var wrong4 = Table([\r\n      ['x', 'y'],\r\n      [tableNum2[0], roundDec(eval(tableNum2[0]*number*0.1),2)],\r\n      [tableNum2[1], roundDec(eval(tableNum2[1]*number*0.1),2)],\r\n      [tableNum2[2], roundDec(eval(tableNum2[2]*number*0.1),2)],\r\n      [tableNum2[3], roundDec(eval(tableNum2[3]*number*0.1),2)],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n  } else {\r\n    wrong4 = Table([\r\n      ['x', 'y'],\r\n      [tableNum2[0], roundDec(Math.abs(eval(tableNum2[0]*number+'-'+tableNum2[0]),2))],\r\n      [tableNum2[1], roundDec(Math.abs(eval(tableNum2[1]*number+'-'+tableNum2[1]),2))],\r\n      [tableNum2[2], roundDec(Math.abs(eval(tableNum2[2]*number+'-'+tableNum2[2]),2))],\r\n      [tableNum2[3], roundDec(Math.abs(eval(tableNum2[3]*number+'-'+tableNum2[3]),2))],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n  }\r\n\r\n\r\n  var text = `Which table shows the same pattern as the equation y = ${number}x`\r\n\r\n  \r\n  var wrong = shuffleArray([wrong1, wrong2, wrong3, wrong4])\r\n  var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n  // var AC = shuffleArray([answer, wrong1, wrong2, wrong3])\r\n  \r\n  var problem = {text: text,\r\n  answerChoices: AC, //hard coded answer, wrong1, wrong2, wrong3 works\r\n  correctAnswer: answer,\r\n  }\r\n  return problem\r\n\r\n}\r\n\r\n\r\n\r\nexport const tableAdd1 = (userSelection) => {\r\n    var text = ''\r\n\r\n    console.log(userSelection)\r\n    var [number, tableNum, tablNum2] = tableNumbers(userSelection) \r\n\r\n    var table1 = Table([\r\n      ['x', 'y'],\r\n      [tableNum[0], roundDec(eval(tableNum[0]+'+'+number),2)],\r\n      [tableNum[1], roundDec(eval(tableNum[1]+'+'+number),2)],\r\n      [tableNum[2], roundDec(eval(tableNum[2]+'+'+number),2)],\r\n      [tableNum[3], roundDec(eval(tableNum[3]+'+'+number),2)],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n\r\n  var table2 = Table([\r\n    ['x', tableNum[0], tableNum[1], tableNum[2], tableNum[3]],\r\n    ['y', roundDec(eval(tableNum[0]+'+'+number),2), roundDec(eval(tableNum[1]+'+'+number),2),\r\n          roundDec(eval(tableNum[2]+'+'+number),2), roundDec(eval(tableNum[3]+'+'+number),2)],\r\n\r\n      ], cell_style, tstyles, text, 'horizontal')\r\n        var answer = `y = x + ${number}`\r\n\r\n    var wrong1 = [`y = x + ${roundDec(eval(number+'+1'),2)}`, \r\n                  `y = x + ${roundDec(number/10,2)}`, \r\n                  `y = ${roundDec(eval(tableNum[0]*(tableNum[0]+number)),2)}x`\r\n                ]\r\n    var wrong2 = [`y = x + ${roundDec(number*2,2)}`, \r\n                  `y = x + ${roundDec(eval(number+'+'+randWhole(2,4)),2)}`,\r\n                  `y = ${roundDec(eval(tableNum[0]*(tableNum[0]+number)),2)}x`]\r\n    var wrong3 = [`y = ${roundDec(eval(tableNum[0]*(tableNum[0]+number)),2)}x`, \r\n                  `y = ${roundDec(eval(number+'+'+randWhole(2,4)),2)}x`,\r\n                  `y = ${roundDec(eval(number+'+1'),2)}x`]               \r\n    var wrong = [wrong1, wrong2, wrong3][randWhole(0,2)]\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var randProb = [table1, table2][randWhole(0,1)]\r\n    var problem = {text: randProb,\r\n    answerChoices: AC,\r\n    correctAnswer: answer,\r\n    }\r\n    return problem\r\n\r\n}\r\n\r\n\r\n\r\nexport const tableAdd2 = (userSelection) => {\r\n  var text = ''\r\n  // var number = tableNumbers(userSelection) //userSelection is undefined\r\n  var [number, tableNum] = tableNumbers(userSelection) \r\n  var answer = Table([\r\n      ['x', 'y'],\r\n      [tableNum[0], roundDec(eval(tableNum[0]+'+'+number),2)],\r\n      [tableNum[1], roundDec(eval(tableNum[1]+'+'+number),2)],\r\n      [tableNum[2], roundDec(eval(tableNum[2]+'+'+number),2)],\r\n      [tableNum[3], roundDec(eval(tableNum[3]+'+'+number),2)],\r\n  \r\n  ], cell_style, tstyles, text, 'vertical')\r\n  var wrong1 = Table([\r\n      ['x', 'y'],\r\n      [tableNum[0], roundDec(eval(tableNum[0]+'+'+number),2)],\r\n      [tableNum[1], roundDec(eval(tableNum[1]+'+'+eval(number+'+1')),2)],\r\n      [tableNum[2], roundDec(eval(tableNum[2]+'+'+eval(number+'+1')),2)],\r\n      [tableNum[3], roundDec(eval(tableNum[3]+'+'+eval(number+'+1')),2)],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n  var randAddend = randWhole(2,10)\r\n  var wrong2 = Table([\r\n      ['x', 'y'],\r\n      [eval(tableNum[0]+randAddend), roundDec(eval(tableNum[0]+'+'+number),2)],\r\n      [eval(tableNum[1]+randAddend), roundDec(eval(tableNum[0]+'+'+eval(number+'+1')),2)],\r\n      [eval(tableNum[2]+randAddend), roundDec(eval(tableNum[2]+'+'+eval(number+'+1')),2)],\r\n      [eval(tableNum[3]+randAddend), roundDec(eval(tableNum[3]+'+'+eval(number+'+1')),2)],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n  var wrong3 = Table([\r\n      ['x', 'y'],\r\n      [tableNum[0], roundDec(tableNum[0]*number,2)],\r\n      [tableNum[1], roundDec(tableNum[1]*number,2)],\r\n      [tableNum[2], roundDec(tableNum[2]*number,2)],\r\n      [tableNum[3], roundDec(tableNum[3]*number,2)],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n  var wrong4 = Table([\r\n      ['x', 'y'],\r\n      [tableNum[0], roundDec(eval(tableNum[0]+'+'+number+'+1'),2)],\r\n      [tableNum[1], roundDec(eval(tableNum[1]+'+'+number+'+1'),2)],\r\n      [tableNum[2], roundDec(eval(tableNum[2]+'+'+number+'+1'),2)],\r\n      [tableNum[3], roundDec(eval(tableNum[3]+'+'+number+'+1'),2)],\r\n\r\n  ], cell_style, tstyles, text, 'vertical')\r\n\r\n  text = `Which table shows the same pattern as the equation y = x + ${number}`\r\n\r\n  \r\n  var wrong = shuffleArray([wrong1, wrong2, wrong3, wrong4])\r\n  var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n  // var AC = shuffleArray([answer, wrong1, wrong2, wrong3])\r\n  \r\n  var problem = {text: text,\r\n  answerChoices: AC, //hard coded answer, wrong1, wrong2, wrong3 works\r\n  correctAnswer: answer,\r\n  }\r\n  return problem\r\n\r\n}\r\nexport const randTable = (userSelection) => {\r\n  var probArray = [tableMultiply1, tableMultiply2, tableAdd1, tableAdd2]\r\n\r\n  var randProb = shuffleArray(probArray)[0]\r\n  return randProb(userSelection)\r\n}\r\n\r\n","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\divide.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433"],"import * as g from \"./general\";\r\nimport {randWhole, shuffleArray, answerChoicesKey, wrongOptions, cap} from './general'\r\nimport {verticalDivide} from './vertical-align'\r\n// var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n\r\n\r\nconst divNumbers = (userSelection) => {\r\n    var numArray = []\r\n    if (userSelection['2 by 1 digit']) {\r\n        numArray.push([randWhole(5, 10), randWhole(2, 9)],)\r\n    } if (userSelection['3 by 1 digit']) {\r\n        numArray.push(\r\n            [randWhole(50, 99), randWhole(2, 9)],\r\n            [randWhole(25, 50), randWhole(5, 9)],\r\n            [randWhole(101, 166), randWhole(2, 6)],\r\n            [randWhole(166, 249), randWhole(2, 4)],\r\n        )\r\n    } if (userSelection['4 by 1 digit']) {\r\n        numArray.push(\r\n            [randWhole(500, 999), randWhole(2, 9)],\r\n            [randWhole(250, 500), randWhole(4, 9)],\r\n            [randWhole(1000, 1660), randWhole(2, 6)],\r\n            [randWhole(1660, 2490), randWhole(2, 4)],\r\n        )\r\n    } if (userSelection['3 by 2 digit']) { \r\n        numArray.push(\r\n            [randWhole(7, 41), randWhole(15, 24)],\r\n            [randWhole(3, 19), randWhole(35, 50)],\r\n            [randWhole(15, 28), randWhole(21, 35)],\r\n            [randWhole(3, 12), randWhole(50, 80)],\r\n        )\r\n    } if (userSelection['4 by 2 digit']) {\r\n        numArray.push(\r\n            [randWhole(67, 416), randWhole(15, 24)],\r\n            [randWhole(28, 199), randWhole(35, 50)],\r\n            [randWhole(48, 285), randWhole(21, 35)],\r\n            [randWhole(20, 124), randWhole(50, 80)],\r\n        )\r\n    }\r\n    console.log(numArray)\r\n    var num = shuffleArray(numArray)\r\n    \r\n    var answer = num[0][0]\r\n\r\n    var numberS = num[0][1]\r\n    var numberL = answer*numberS\r\n    return [answer, numberS, numberL]\r\n}\r\nexport const divAlg = (userSelection) => {\r\n    var numList = divNumbers(userSelection)\r\n    var [answer, numberS, numberL] = [numList[0], numList[1], numList[2]]\r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) \r\n    console.log(answer)\r\n    console.log(numberS)\r\n    console.log(typeof numberS)\r\n    console.log(numberL)\r\n    wrong.push()\r\n    wrong = shuffleArray(wrong)\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    if (userSelection['Vertical']){\r\n        var prob = verticalDivide(numberL.toLocaleString(), numberS.toLocaleString())\r\n    } else {\r\n        prob = `${numberL.toLocaleString()} ÷ ${numberS.toLocaleString()} = `\r\n    }\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\nexport const div1dig = (userSelection) => { // 1 digit divisor only\r\n    var numberList = divNumbers(userSelection)\r\n    var girl = shuffleArray(g.girlList)[0]\r\n    var store = shuffleArray(g.storeList)[0]\r\n    var item = shuffleArray(g.itemPkgList)[0]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n\r\n\r\n    var [answer, numberS, numberL] = [numberList[0], randWhole(2,6), numberList[2]]\r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = `${girl} is going to ${store} to buy some ${item} for a party. It costs $${numberS} for ${e} `+\r\n    `package of ${item}. After the cashier rang up her items, she had to give the cashier a total `+\r\n    `of $${numberL}. How many packages of ${item} did she buy?`\r\n    var prob2 = `${girl} wants to buy some ${item} at ${store} to prepare for a large family gathering.`+\r\n    ` She ended up purchasing ${numberS} packages of ${item} which cost `+\r\n    `$${numberL} altogether. How much does ${e} package of ${item} cost?`\r\n    \r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    if (randProb === prob2) {\r\n        AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    }\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\nexport const div2dig= (userSelection) => { //playing sports 2 digit only\r\n    var numberList = divNumbers(userSelection)\r\n    var boy = shuffleArray(g.boyList)[0]\r\n    var sport = shuffleArray(g.sportList)[0]\r\n    var [answer, numberS, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = `${boy} plays ${sport} for a total of ${numberL} minutes last year. He played ${sport} `+\r\n    `for ${numberS} minutes each day. How many days did ${boy} play ${sport} last year? `\r\n    var prob2 = `${boy} plays ${sport} for a total of ${numberL} minutes last year. He played ${sport} `+\r\n    `for ${numberS} days last year for an equal amount of time each day. How many minutes did ${boy} play ${sport} each day last year? `\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\nexport const divWhole = (userSelection) => { //simple purchase items\r\n    var numberList = divNumbers(userSelection)\r\n    var [answer, numberS, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    var item = shuffleArray(g.itemList10_20)[0]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    if (userSelection.specify === '2by1') { //4 by 1\r\n        [answer, numberS] = [randWhole(2,9), randWhole(5,8)];\r\n        numberL= answer*numberS\r\n   }else if (userSelection.specify === '3by1'){\r\n       [answer, numberS] = [randWhole(23,40), randWhole(6,9)];\r\n       numberL = answer*numberS\r\n   } else if (userSelection.specify === '4by1'){\r\n        [answer, numberS] = [randWhole(167,250), randWhole(6,9)];\r\n        numberL = answer*numberS\r\n    } else{\r\n        [answer, numberS] = [randWhole(23,89), randWhole(20,40)];\r\n        numberL = answer*numberS\r\n        item = shuffleArray(g.itemList20_60)[0]\r\n    } \r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var prob1 = `It costs $${numberL} to buy ${numberS} ${item}s. How much would it cost to buy one `+\r\n    `${item}?`\r\n    var prob2 = `How much would it cost to buy ${e} ${item} if it costs $${numberL} to buy ${numberS} ${item}s?`\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\nexport const div1dig2 = (userSelection) => { //teacher buying items\r\n    var woman = shuffleArray(g.womanList)[0]\r\n    var theme = shuffleArray(g.themeList)[0]\r\n    var item = shuffleArray(['pencil','marker','pen','journal','notebook','decoration'])[0]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    if (userSelection.specify === '2by1') { \r\n        var [answer, numberS] = [randWhole(2,9), randWhole(5,8)];\r\n        var numberL= answer*numberS\r\n    }else { //3by1\r\n        [answer, numberS] = [randWhole(15,15), randWhole(6,9)];\r\n        numberL = answer*numberS\r\n    } \r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS)\r\n    var prob1 = `${woman} bought ${numberS} ${theme} ${item}s for a total of $${numberL} `+\r\n    `. If each ${item} costs the same amount, how much did ${woman} spend on each ${theme} ${item}? `\r\n    var prob2 = `${woman} has a total of $${numberL} to spend on ${item}s. She wants to buy ${theme} `+\r\n        ` ${item}s for her classroom. If ${e} package of ${theme} ${item}s costs $${numberS}, how many packagess can she buy?`\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    if (randProb === prob1) {\r\n        AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    } \r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\n// export const randDivideWhole = () => {\r\n//     var randProb = shuffleArray([\r\n    \r\n//     ])[0]\r\n// }\r\n\r\n\r\n    // var prob1 = `${girl} has ${numberL} ${theme} themed ${schoolItem}. She wants to split them equally `+\r\n    //             ` between her friends. If she has ${numberS} friends, how many ${schoolItem} can each friend get?`\r\n    // var prob2 = `${boy} has ${numberL} ${theme} themed ${schoolItem}. If he gives each friend ${numberS} `+\r\n    //             `${schoolItem}, how many friends can he give them to?`\r\n\r\n    // var prob1 = `${girl} has ${numberL} ${noun} saved up. She decides that she has way too many ${noun} and she `+\r\n    //             `$wants to give them all away to her friends. She wants to give each friend the same amount of ${noun}. `+\r\n    //             `${girl} has ${numberS} friends that she would like to give the ${noun} to. How many ${noun} would each friend get?`\r\n    // var prob2 = `${boy} has too many ${noun} saved up. He decides to split them equally between each of his ${numberS} friends. `+\r\n    //             `How many ${noun} will each friend get?`\r\n\r\n\r\n\r\n    // var prob1 = `${boy} has ${numberL} ${noun}. He wants to split them equally into ${group}s. If ${boy} puts ${numberS} `+\r\n    //             `${noun} into each ${group}, how many ${group}s can ${boy} fill?`\r\n    // var prob2 = `${girl} wants to split their ${numberL} ${noun} into equal ${group}s. If she makes ${numberS} `+\r\n    //             `${group}s, how many ${noun}s fit in ${e} ${group}?`\r\n\r\n\r\n    // var prob1 = `${boy} has ${numberL} ${candy}. He would like to share these ${candy} equally with ${numberS} friends. How `+\r\n    //             `many ${candy} will each friend get?`\r\n    // var prob2 = `${girl} has ${numberL} ${candy}. She wants to give each friend ${numberS} ${candy}. How many friends will `+\r\n    //             `she be able to give ${candy} to?`\r\n\r\n    // var prob1 = `A ${food} company can fit ${numberS} packages of ${food} in ${e} box. How many boxes are needed to fill an `+\r\n    //             `order for ${numberL} packages of ${food}?`\r\n    // var prob2 = `A ${food} company needs to put ${numberL} packages of ${food} into boxes to fill an order. They can fit ${numberS} `+\r\n    //             `packages of ${food} in ${e} box. How many boxes will they need to fill the order?`\r\n\r\n    // var dogNameList = ['Zoey','Bowser','Spot','Snickerdoodle','Sir Fluffyboy', 'Chuggington', 'Bella', 'Max','Daisy','Bitsy','Archie','Barkley','Baxter','Chewy','Izzy','Murphy','Pippin','Waffles','Wiggleton','Ziggy']\r\n    // var prob1 = `${girl} walks her dog ${dogName} ${numberS} minutes each day they go for a walk. If they walk for a total of `+\r\n    //             `${numberL} minutes last month, how many days did she take ${dogName} for a walk?`\r\n    // var prob2 = `${boy} walks his dog ${dogName} for a total of ${numberL} minutes last month. Each time he takes ${dogName} `+\r\n    //             `on a walk for ${numberS} minutes. How many days did he take ${dogName} for a walk last month? `\r\n    // var prob3 = `${girl} took her dog ${dogName} on a walk ${numberS} times last month. They walked for a total of ${numberL} `+\r\n    //             `minutes. If each walk lasted the same amount of time, how long was each walk? `\r\n    \r\n    // var prob1 = `${dogName} the dog eats ${numberS} ounces of dog food each week. ${dogName}'s pet parent has stocked up with `+\r\n    //             `${numberL} ounces of dog food. How many weeks will the food last?`\r\n    // var prob2 = `${boy} bought a large bag of dog food so now he has ${numberL} ounces. He gives his dog ${dogName} ${numberS} `+\r\n    //             `ounces of food each week. How many weeks will the food last until he runs out?`\r\n\r\n\r\n    export const randDivWhole = (userSelection) => {\r\n        var probArray = []\r\n\r\n        if (userSelection['Algorithm']){\r\n            probArray.push(divAlg)\r\n        } if (userSelection['Application']) {\r\n            probArray.push(divWhole)\r\n            if (userSelection['3 by 1 digit'] || userSelection['4 by 1 digit']) {\r\n                probArray.push(div1dig, div1dig2)\r\n            } else  { //4 by 2\r\n                probArray.push(div2dig)\r\n            } \r\n        }\r\n        var randProb = shuffleArray(probArray)[0]\r\n        return randProb(userSelection)\r\n    }","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Card.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\Input.js",["434"],"import React, { useReducer, useEffect } from \"react\";\r\n//useReducer manage more complex state, write logic that runs when you change state rather than just change value. good when have interconnected state.\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n      case 'TOUCH':\r\n        return {\r\n          ...state,\r\n          isTouched: true\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const {id, onInput} = props;\r\n  const {value, isValid} = inputState;\r\n\r\n  useEffect(()=> {\r\n    props.onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput])\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH',\r\n    })\r\n  }\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur= {touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur= {touchHandler}\r\n\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Backdrop.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\LoadingSpinner.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\hooks\\form-hook.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\ImageUpload.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\hooks\\http-hook.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\ErrorModal.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\Button.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\util\\validators.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\Table.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\vertical-align.js",["435","436","437","438","439","440"],"\r\nimport {StyleSheet} from \"@react-pdf/renderer\";\r\nimport {splitDec} from './general'\r\nimport Table from './Table'\r\nconst tstyles = StyleSheet.create({\r\n    table: {\r\n        display: \"table\",\r\n         textAlign:'right',\r\n         padding: '20px 0px 50px 10px',\r\n         margin:0,\r\n         \r\n    },\r\n    row: {\r\n        flexDirection: \"row\",\r\n    },\r\n    cell: {\r\n\r\n    },\r\n    header: {\r\n      backgroundColor: 'grey'\r\n      \r\n    }\r\n  });\r\n\r\n  const cell_style_fraction = (row_index, col_index) => {\r\n    const borderLeftWidth =  0\r\n    const borderTopWidth = 0\r\n    const borderRightWidth = 0\r\n    const borderBottomWidth = (row_index === 1 && col_index === 1) ? 1 : 0\r\n    const backgroundColor = 'white'\r\n    const width = (col_index === 0) ? '20px' : '50px'\r\n\r\n    if (col_index > 0) {\r\n\r\n    }\r\n  \r\n    return {\r\n        // fontFamily: 'Arial', \r\n        width: width,\r\n        borderLeftWidth, borderRightWidth,\r\n        borderTopWidth, borderBottomWidth,\r\n        borderStyle: \"solid\",\r\n        backgroundColor, \r\n    }\r\n  }\r\n\r\nconst cell_style_decAlign = (row_index, col_index) => {\r\n    const borderLeftWidth =  0\r\n    const borderTopWidth = 0\r\n    const borderRightWidth = 0\r\n    const borderBottomWidth = (row_index === 1 && col_index === 1)||( row_index === 1 && col_index ===2) ? 1 : 0\r\n    const backgroundColor = 'white'\r\n    const width = (col_index === 0) ? '20px' : '30px'\r\n    const textAlign = (col_index === 1) ? 'right' : 'left'\r\n\r\n    if (col_index > 0) {\r\n\r\n    }\r\n  \r\n    return {\r\n        // fontFamily: 'Arial', \r\n        width: width,\r\n        borderLeftWidth, borderRightWidth,\r\n        borderTopWidth, borderBottomWidth,\r\n        borderStyle: \"solid\",\r\n        backgroundColor, textAlign:textAlign\r\n    }\r\n  }\r\n\r\n  const cell_style_divide = (row_index, col_index) => {\r\n    const borderLeftWidth =  0\r\n    const borderTopWidth =  ( col_index === 2) ? 1.5 : 0\r\n    const borderRightWidth = (col_index ===1) ? 2 : 0\r\n    const borderBottomWidth = 0\r\n    const borderTopRightRadius = (col_index === 1) ? '1':  '0'\r\n    const borderBottomRightRadius = (col_index === 1) ? '60': '0'\r\n    // const borderTopLeftRadius = (col_index === 2) ? '1' :'0'\r\n    const backgroundColor = 'white'\r\n    const width = (col_index === 0 ) ? '20px' : (col_index === 1)? '9px': '40px'\r\n    const textAlign = (col_index === 0) ? 'right' : 'left'\r\n    const paddingTop = '3px'\r\n    const paddingLeft = (col_index ===2) ? '5px' : '0px'\r\n    const paddingRight = (col_index===0) ? '1px' : '0px'\r\n    const marginRight = (col_index===1) ? '0px': '0px'\r\n  \r\n    // const marginLeft = (col_index === 2) ? '0px' : '0px'\r\n    // const fontWeight = (col_index===2) ? 1500: 'normal'\r\n    // const fontWeight = 'bold'\r\n    // const alignItems = (col_index === 2) ? 'flexStart': 'flexEnd'\r\n    // const justifyContent = (col_index === 1) ? 'flexStart': 'flexStart'\r\n    // const verticalAlign = (col_index === 1) ? '10px': 'baseline'\r\n\r\n    if (col_index > 0) {\r\n\r\n    }\r\n  \r\n    return {\r\n        // fontFamily: 'Arial', \r\n        width,\r\n        borderLeftWidth, borderRightWidth,\r\n        borderTopWidth, borderBottomWidth,\r\n        borderStyle: \"solid\",\r\n        backgroundColor, textAlign, paddingLeft,\r\n         marginRight, paddingTop,\r\n        borderTopRightRadius, borderBottomRightRadius, paddingRight,\r\n    }\r\n  }\r\n\r\n// export const Table = (data, style_function=(() => {}), style={}, text, direction) => {\r\n//   return (\r\n//     <View style={[tstyles.table, style]}>\r\n//         {data.map((row, row_index) =>\r\n//       <View key={row_index} style={tstyles.row}  wrap={false}>\r\n//         {row.map( (cell, col_index) =>\r\n//                       <View key={col_index} style={[tstyles.cell, style_function(row_index, col_index, data, direction)]}>\r\n//                         {sanitize_block(cell)}\r\n//                       </View>\r\n//                 )\r\n//         }\r\n//       </View>\r\n//     )\r\n//     }\r\n//     <Text>{text}</Text>\r\n//     </View>\r\n//     )\r\n// }\r\n\r\nexport const verticalAlign = (numberL, op, numberS) => {\r\n    return Table([['', numberL],\r\n                  [op, numberS]], cell_style_fraction, tstyles)\r\n}\r\n\r\nexport const verticalAlignDec = (numberL, op, numberS) => {\r\n    var [wholeNumberL, decNumberL] = splitDec(numberL)\r\n    var [wholeNumberS, decNumberS] = splitDec(numberS)\r\n    return Table([['', wholeNumberL,'.'+decNumberL],\r\n                  [op, wholeNumberS, '.'+decNumberS]], cell_style_decAlign, tstyles)\r\n}\r\nexport const verticalDivide = (numberL, numberS) => {\r\n    return Table([[numberS, ' ',numberL]], cell_style_divide, tstyles)\r\n}","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Modal.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\order-of-ops.js",["441","442","443","444","445","446","447","448","449","450","451","452"],"import {randWhole, shuffleArray, answerChoicesKey, randDec, roundDec\r\n    } from './general.js'\r\n\r\nvar simpleQArray = shuffleArray(['What is the value of the expression? \\n',\r\n                  'An expression is shown below, what value is equivalent to the expression?\\n',\r\n                  'Which value is equivalent to the expression below? \\n'])\r\n\r\nconst orderOpsNumbers = (userSelection) => {\r\n    var numArray = []\r\n    if (userSelection['Whole numbers'] || (!('Whole numbers' in userSelection) && !('Decimals' in userSelection) && !('Integers' in userSelection))){\r\n        if (userSelection.level === '2') {\r\n            numArray.push([randWhole(2,9), randWhole(2,9),randWhole(10,20),\r\n                randWhole(10,20),randWhole(21,30),randWhole(21,30)])\r\n\r\n        } else if (userSelection.level === '3') {\r\n            numArray.push([randWhole(20,50), randWhole(20,50), randWhole(30,70), \r\n                randWhole(30,70), randWhole(51,70), randWhole(51,70)])\r\n        } else {\r\n            numArray.push([randWhole(2,5), randWhole(2,5), randWhole(2,9), \r\n                randWhole(2,9),randWhole(6,9),randWhole(6,9)])\r\n        }\r\n\r\n    } if (userSelection['Decimals']) {\r\n        var smallDec = [randDec(1,4,1), randDec(1,4,2), randDec(0.01,0.99,2), \r\n                        randDec(0.01,0.9,1), randDec(0.01,0.1,2) ]\r\n        var largeDec = [randDec(10, 20,1), randDec(10,20,2)]\r\n        if (userSelection.level === '2') {\r\n            numArray.push([smallDec[randWhole(0, smallDec.length-1)], \r\n            smallDec[randWhole(0, smallDec.length-1)], \r\n            randWhole(7,12),randWhole(7,12),randWhole(7,12),randWhole(7,12)])\r\n\r\n        } else if (userSelection.level === '3') {\r\n            numArray.push([largeDec[randWhole(0, largeDec.length-1)], \r\n            largeDec[randWhole(0, largeDec.length-1)],\r\n            randWhole(10,19), randWhole(10,19),randWhole(21,30),randWhole(21,30)])\r\n        } else {\r\n            numArray.push([smallDec[randWhole(0, smallDec.length-1)], \r\n            smallDec[randWhole(0, smallDec.length-1)], \r\n            randWhole(2,9),randWhole(2,9),randWhole(5,9),randWhole(5,9)])\r\n        }\r\n\r\n    } if (userSelection['Integers']){\r\n        if (userSelection.level === '2') {\r\n            numArray.push([randWhole(-12,-2), randWhole(-12,-2), randWhole(-12, 12), randWhole(-9,12), randWhole(5,15),randWhole(5,15)])\r\n \r\n        } else if (userSelection.level === '3') {\r\n            numArray.push([randWhole(-15,-2), randWhole(-15,-2), randWhole(-15, 15), randWhole(-15,15), randWhole(5,20),randWhole(5,20)])\r\n\r\n        } else {\r\n            numArray.push([randWhole(-9,-2), randWhole(-9,-2), randWhole(-9, 9), randWhole(-9,9), randWhole(2,10),randWhole(2,10)])\r\n        }\r\n    } \r\n  \r\n    var numList = shuffleArray(numArray)[0]\r\n\r\nreturn numList\r\n}                  \r\nexport const orderOps = (userSelection) => { //oooA\r\n    var randQuest = simpleQArray[randWhole(simpleQArray.length, 0)]\r\n    var numList = orderOpsNumbers(userSelection) \r\n    var [numberL, numberL2, numberS] = [numList[4], numList[5], numList[2]]\r\n    var [numberM, numberS2, numberM2] = [numList[0], numList[1], numList[3]]\r\n    var dividend = numberL2*numberS\r\n\r\n    var probArray = []\r\n    if (userSelection['3 steps']) {\r\n        var OoOA = `${numberL} + (${dividend} ÷ ${numberS} - ${numberS2})` //10 + (40÷8 - 2)\r\n        var OoOB = `(${dividend} ÷ ${numberS} - ${numberS2}) + ${numberL} ` //(40÷8 - 9) +10\r\n        var OoOC = `${numberL} + ${dividend} ÷ ${numberS} - ${numberS2}` //10 + 40÷8 - 2\r\n        var answer = numberL+(dividend/numberS-numberS2)\r\n        var wrong = [Math.floor(((numberL+dividend)/numberS)-numberS2), answer-1,\r\n                     answer+2, answer+1]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection['4 steps']) {\r\n        OoOA = `${numberL} + (${dividend} ÷ ${numberS} - ${numberS2}) × ${numberM2}` //10 + (40÷8 - 9) × 10\r\n        OoOB = `${numberL} + ${numberM2}(${dividend} ÷ ${numberS} - ${numberS2}) `   //10 + 10(40÷8 - 9)\r\n        OoOC = `${numberM2}(${dividend} ÷ ${numberS} - ${numberS2}) + ${numberL} `  //10(40÷8 - 9)+10\r\n        answer = numberL+(dividend/numberS-numberS2)*numberM2\r\n        wrong = [Math.abs(numberL+dividend/numberS-numberS2*numberM2), answer-1,answer+1,       \r\n                (Math.floor((numberL+dividend)/numberS)-numberS2)*numberM2, answer+5,\r\n                   ]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection['5 steps'])  { //no selection/5\r\n        OoOA = `${numberM2} + (${dividend} ÷ ${numberS} - ${numberS2}) × ${numberL} - ${numberM}` //10 + (40÷8-9) x 10 - 2 \r\n        OoOB = `${numberM2} + ${numberL}(${dividend} ÷ ${numberS} - ${numberS2}) - ${numberM}` //10 + 10(40÷8-9) - 2 \r\n        OoOC = `${numberL}(${dividend} ÷ ${numberS} - ${numberS2}) - ${numberM} + ${numberM2}` //10(40÷8-9) - 2 + 10\r\n        answer = numberM2+((dividend/numberS-numberS2)*numberL)-numberM\r\n        wrong = [Math.abs((numberL+dividend)/numberS-numberS2*numberL-numberM), answer+1, answer-1,       \r\n            (Math.floor(((numberM2+numberL)*dividend)/numberS)-numberS2-numberM),\r\n            (((numberM2+dividend)/numberS)-numberS2)*numberL-numberM,\r\n            Math.abs((numberM2+dividend/numberS-numberS2)*numberL-numberM+1)]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n    }\r\n    var randProbObj = shuffleArray(probArray)[0]\r\n    wrong=shuffleArray(randProbObj.wrong)\r\n    var randProb = shuffleArray(randProbObj.prob)[0]\r\n    var AC = answerChoicesKey(randProbObj.answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text: randQuest + randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: randProbObj.answer}\r\n    return problem\r\n}\r\n\r\nexport const orderOps2 = (userSelection) => { //oooB\r\n    var randQuest = simpleQArray[randWhole(simpleQArray.length, 0)]\r\n    var numList = orderOpsNumbers(userSelection) \r\n    var [numberL, numberL2, numberM] = [numList[4], numList[5], numList[2]]\r\n    var [numberS, numberS2, numberM2] = [numList[0], numList[1], numList[3]]\r\n    var dividend = roundDec(numberM2*numberS2, 2)\r\n    var probArray = []\r\n\r\n    if (userSelection[\"3 steps\"]) { \r\n        var OoOA = `${numberM} × (${numberL}-${dividend} ÷ ${numberM2})` // 8 x (9- 40/5)\r\n        var OoOB = `(${numberL} - ${dividend} ÷ ${numberM2}) × ${numberM}` //(9-40/5)x8\r\n        var OoOC = `${numberM}(${numberL}-${dividend} ÷ ${numberM2})` //8(9-40/5)\r\n        var answer = numberM*(numberL-(dividend/numberM2))\r\n        var wrong = [numberM*numberL-dividend/numberM2, \r\n                    Math.abs(Math.floor(numberM*((numberL-dividend)/numberM2))), answer-1, answer+1,\r\n        Math.floor(((numberM*numberL+1)-dividend)/numberM2)]\r\n        if (userSelection.specify === 'Decimals') {\r\n            wrong.push(Math.abs(numberM*((numberL-dividend)/numberM2), ((numberM*numberL+1)-dividend)/numberM2))\r\n        }\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection[\"4 steps\"]) { \r\n        OoOA = `${numberM}(${numberL}-${dividend} ÷ ${numberM2}) + ${numberL2}` //8(9 - 40/5) + 9\r\n        OoOB = `(${numberL} - ${dividend} ÷ ${numberM2}) × ${numberM} + ${numberL2}` // (9-40/5)x8 +9\r\n        OoOC = `${numberL2} +  ${numberM}(${numberL}-${dividend} ÷ ${numberM2})` //9+ 8(9-40/5)\r\n        answer = numberM*(numberL-(dividend/numberM2))+numberL2\r\n        wrong = [numberM*numberL-dividend/numberM2+numberL2, answer-1,\r\n                (numberL2+numberM)*numberL-(dividend/numberM2),\r\n                Math.floor((((numberM*numberL)-dividend)/numberM2)+numberL2)]\r\n                probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection[\"5 steps\"]) { \r\n        OoOA = `${numberM} (${numberS} × ${numberL} - ${dividend} ÷ ${numberM2}) + ${numberL2}` //8 (5 x 9 - 40/5) + 9\r\n        OoOB = `${numberM} (${numberL} × ${numberS} - ${dividend} ÷ ${numberM2}) + ${numberL2}` //8 (9 x 5- 40/5) +9\r\n        OoOC = `${numberL2} + ${numberM} (${numberS} × ${numberL} - ${dividend} ÷ ${numberM2})` //9 + 8( 5 x 9 - 40/5)\r\n\r\n        answer = numberM*(numberS*numberL-(dividend/numberM2))+numberL2\r\n        wrong = [numberM*numberS*numberL-numberS2*numberM2/numberM2+numberL2, \r\n                numberM*numberS*(numberL-(numberS2*numberM2/numberM2)+numberL2),\r\n                Math.floor((((numberM*numberS*numberL)-numberS2)*numberM2))+numberL2,\r\n                answer-1]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n    }        \r\n    var randProbObj = shuffleArray(probArray)[0]\r\n    wrong=shuffleArray(randProbObj.wrong)\r\n    var randProb = shuffleArray(randProbObj.prob)[0]\r\n    var AC = answerChoicesKey(randProbObj.answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text: randQuest + randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: randProbObj.answer}\r\n    return problem\r\n}\r\n\r\nexport const orderOps3 = (userSelection) => { //oooC\r\n    \r\n    var randQuest = simpleQArray[randWhole(simpleQArray.length, 0)]\r\n    var numList = orderOpsNumbers(userSelection) \r\n    var [numberL, numberL2, numberM] = [numList[4], numList[5], numList[2]]\r\n    var [numberS, numberS2, numberM2] = [numList[0], numList[1], numList[3]]\r\n    var probArray = []\r\n\r\n    if (userSelection[\"3 steps\"]) { \r\n        var OoOA = `(${numberL} - ${numberS2}) + (${numberL2} + ${numberM2})` //(9-2)+(8+5)\r\n        var OoOB = `(${numberL2} + ${numberM2}) + (${numberL} - ${numberS2})` //(8+5)+(9-2)\r\n        var OoOC = `${numberM2} + ${numberL2} + (${numberL} - ${numberS2})` //5+8+(9-2)\r\n        var answer = (numberL-numberS2)+(numberL2+numberM2)\r\n        var wrong = [numberL-numberS2+numberL2-numberM2, \r\n            answer+3, answer-1,\r\n            (numberL+numberS2)+numberL2+numberM2\r\n        ]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n\r\n      } if (userSelection[\"4 steps\"]) {  \r\n        OoOA = `(${numberL} - ${numberS2}) + ${numberM}(${numberL2} + ${numberM2})` // (9-4) + 5(8+2)\r\n        OoOB = `${numberM}(${numberL2} + ${numberM2}) + (${numberL} - ${numberS2})` //5(8+2) + (9-4) \r\n        OoOC = `(${numberM2} + ${numberL2}) × ${numberM} + (${numberL} - ${numberS2})` //(8+2)x5 + (9-4)\r\n        answer = (numberL-numberS2)+numberM*(numberL2+numberM2)\r\n        wrong = [numberL-numberS2+numberM*numberL2+numberM2, answer+1,answer-1,\r\n            (numberL-numberS2+numberM)*(numberL2+numberM2),\r\n            ((numberL-numberS2+numberM)*numberL2)+numberM2\r\n        ]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection[\"5 steps\"]) { \r\n        OoOA = `${numberS}(${numberL} - ${numberS2}) + ${numberM}(${numberL2} + ${numberM2})` //2(9-4) + 5(8+2)\r\n        OoOB = `${numberM}(${numberL2} + ${numberM2}) + ${numberS}(${numberL} - ${numberS2}) ` //5(8+2) + 2(9-4)\r\n        OoOC = `${numberM}(${numberL2} + ${numberM2}) + (${numberL} - ${numberS2}) × ${numberS} ` //5(8+2) + (9-4) x 2\r\n        answer = numberS*(numberL-numberS2)+numberM*(numberL2+numberM2)\r\n        wrong = [numberS*numberL-numberS2+numberM*numberL2+numberM2, \r\n            (Math.floor(((numberL+numberS)*numberL2)/numberS)-numberS2)*numberM2,\r\n            (((numberS*numberL-numberS2)+numberM)*numberL2)+numberM2, answer-1\r\n        ]\r\n        if (userSelection.specify==='Integers'){\r\n            wrong.push(answer*-1, \r\n                numberS*(numberL-numberS2*-1)+numberM*(numberL2+numberM2),\r\n                numberS*-1*(numberL-numberS2*-1)+numberM*(numberL2+numberM2),\r\n                )\r\n        } else if (userSelection.specify==='Decimals') {\r\n            wrong.push(answer/10, answer*10, answer+0.1, answer+0.01,\r\n                numberS*(numberL-numberS2/10)+numberM*(numberL2+numberM2),\r\n                )\r\n        }\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n\r\n    }        \r\n    var randProbObj = shuffleArray(probArray)[0]\r\n    wrong=shuffleArray(randProbObj.wrong)\r\n    var randProb = shuffleArray(randProbObj.prob)[0]\r\n    var AC = answerChoicesKey(randProbObj.answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text: randQuest + randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: randProbObj.answer}\r\n    return problem\r\n}\r\n\r\nexport const orderOps4 = (userSelection) => { //oooD\r\n    var randQuest = simpleQArray[randWhole(simpleQArray.length, 0)]\r\n    var numList = orderOpsNumbers(userSelection) \r\n    var [numberL, numberL2, numberM] = [numList[4], numList[5], numList[2]]\r\n    var [numberS, numberS2, numberM2] = [numList[0], numList[1], numList[3]]\r\n    var dividend = numberM2*numberS2\r\n    var probArray = []\r\n\r\n    if (userSelection[\"3 steps\"]) { \r\n        var OoOA = `[${numberL2} + (${numberL} - ${numberS})] × ${numberM2}` //[40+(30-10)]x20\r\n        var OoOB = `${numberM2}[${numberL2} + (${numberL} - ${numberS})]` // 20[40+(30-10)]\r\n        var OoOC = `${numberM2}(${numberL} - ${numberS} + ${numberL2})` // 20[30-10+40]\r\n        var answer = (numberL2+(numberL-numberS))*numberM2\r\n        var wrong = [(numberL2+(numberL-numberS))*(numberM2+1), \r\n                    Math.abs(numberL2*numberL-numberS*numberM2), \r\n                    numberL2*numberM2+Math.abs(numberL-numberS),   \r\n                    (numberL2+numberL-numberS+1)*numberM2, answer+1,answer-1]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection[\"4 steps\"]) { \r\n        OoOA = `[${numberL2} + (${numberS2} × ${numberL} - ${numberS})] × ${numberM2}` // [100+(8x40-10)]x40\r\n        OoOB = `${numberM2}[${numberL2} + (${numberS2} × ${numberL} - ${numberS})]` // 40[100+(8x40-10)]\r\n        OoOC = `${numberM2}[(${numberS2} × ${numberL} - ${numberS}) + ${numberL2}]` //40[(8x40-10)+100]\r\n        answer = (numberL2+(numberS2*numberL-numberS))*numberM2\r\n        wrong = [(numberL2+(numberS2*numberL-numberS))*eval(numberM2+1), \r\n                (numberL2+numberS2)*numberL-numberS,\r\n                 numberL2+Math.abs(numberS2*numberL-numberS*numberM2),   \r\n                 (((numberL2+numberS2)*numberL)-numberS)*numberM2, answer+1,answer-1]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n        \r\n      } if (userSelection[\"5 steps\"]) { //\r\n        OoOA = `${numberM2}[${numberL2} + (${numberM} + ${numberS2} × ${numberL} - ${numberS})]` // 40[100+(30+8x40-10)]\r\n        OoOB = `${numberM2}[${numberL2} + (${numberS2} × ${numberL} - ${numberS} + ${numberM})]` // 40[100+(8x40-10+30)]\r\n        OoOC = `[${numberL2} + (${numberM} + ${numberS2} × ${numberL} - ${numberS})] × ${numberM2} ` // [100+(30+8x40-10)] x 40\r\n        answer = (numberL2+(numberM+numberS2*numberL-numberS))*numberM2\r\n        wrong = [(numberL2+(numberM+numberS2*numberL-numberS))*numberM2+1, \r\n                (Math.floor(numberL2+numberM+numberS2)*numberL-numberS),\r\n                 Math.floor(numberL2+numberM+Math.abs(numberS2*numberL-numberS*numberM2)),   \r\n                 Math.floor((((numberL2+numberS2+numberM)*numberL)-numberS)*numberM2),\r\n                answer-1, answer+1] \r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n        \r\n    }        \r\n    var randProbObj = shuffleArray(probArray)[0]\r\n    wrong=shuffleArray(randProbObj.wrong)\r\n    var randProb = shuffleArray(randProbObj.prob)[0]\r\n    var AC = answerChoicesKey(randProbObj.answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text: randQuest + randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: randProbObj.answer}\r\n    return problem\r\n}\r\n\r\nexport const orderOps5 = (userSelection) => { //oooE\r\n    console.log(userSelection)\r\n    var randQuest = simpleQArray[randWhole(simpleQArray.length, 0)]\r\n    var numList = orderOpsNumbers(userSelection) \r\n    var [numberL, numberL2, numberM] = [numList[4], numList[5], numList[2]]\r\n    var [numberS, numberS2, numberM2] = [numList[0], numList[1], numList[3]]\r\n    numberM2 = eval(numberM2+'+'+numberS2)\r\n    var probArray = []\r\n\r\n    if (userSelection[\"3 steps\"]) { \r\n        var OoOA = `${numberL2}[${numberL} + (${numberM2} - ${numberS2})]` //5[9+(7-2)]\r\n        var OoOB = `${numberL2}[(${numberM2} - ${numberS2}) + ${numberL}]` //5[(7-2)+9]\r\n        var OoOC = `[${numberL} + (${numberM2} - ${numberS2})] × ${numberL2}` //[9+(7-2)]x5\r\n        var answer = numberL2*(numberL+(numberM2-numberS2))\r\n        var wrong = [numberL2+(numberL+(numberM2+numberM2+numberM2-numberS2)), \r\n                    answer+1, answer-1,\r\n                    numberL2*numberL + numberM2, \r\n                    (numberL2*numberL)*numberM2-numberS2]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } else if (userSelection['4 steps']) { \r\n        OoOA = `${numberL2}[${numberL} + ${numberM}(${numberM2} - ${numberS2})]` // 5[9+6(7-2)]\r\n        OoOB = `${numberL2}[${numberM}(${numberM2} - ${numberS2}) + ${numberL}]` // 5[6(7-2)+9]\r\n        OoOC = `${numberL2} × [${numberL} + ${numberM}(${numberM2} - ${numberS2})]` //5x[9+6(7-2)]\r\n        answer = numberL2*(numberL+numberM*(numberM2-numberS2))\r\n        wrong = [numberL2+(numberL+numberM+(numberM2-numberS2)), answer+1,answer-1,\r\n                numberL2*(numberL+numberM)*(numberM2-numberS2),\r\n                numberL2*numberL + (numberM*numberM2-numberS2), \r\n                ((numberL2*numberL+numberM)*numberM2)-numberS2]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n        \r\n      } if (userSelection['5 steps']){ \r\n        OoOA = `${numberL2}[${numberL} + ${numberM}(${numberM2} × ${numberS} - ${numberS2})]` // 5[9+6(7x3-2)]\r\n        OoOB = `${numberL2}[${numberM}(${numberM2} × ${numberS} - ${numberS2}) + ${numberL}]` //5[6(7x3-2)+9]\r\n        OoOC = `[${numberM}(${numberL} + ${numberS} × ${numberM2} - ${numberS2})] × ${numberL}` //[9+6(3x7-2)]x5\r\n        answer = numberL2*(numberL+numberM*(numberM2*numberS-numberS2))\r\n        wrong = [numberL2+(numberL+numberM+(numberM2*numberS-numberS2)), answer+1,answer-1,\r\n                numberL2*(numberL+numberM)*(numberM2*numberS-numberS2),\r\n                numberL2*numberL + (numberM*numberM2*numberS-numberS2), \r\n                ((numberL2*numberL+numberM)*numberM2*numberS)-numberS2]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n        \r\n    }        \r\n    var randProbObj = shuffleArray(probArray)[0]\r\n    wrong=shuffleArray(randProbObj.wrong)\r\n    var randProb = shuffleArray(randProbObj.prob)[0]\r\n    var AC = answerChoicesKey(randProbObj.answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text: randQuest + randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: randProbObj.answer}\r\n    return problem\r\n}\r\n\r\nexport const randOrderOps = (userSelection) => {\r\n    var probArray = [orderOps, orderOps2, orderOps3, orderOps4, orderOps5]\r\n    if (userSelection.specify === '3by1' || '4by1') {\r\n        probArray.push()\r\n    } //else if (userSelection.specify === '2by2') {\r\n\r\n    // } else {//3by2\r\n\r\n    // }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(userSelection)\r\n}\r\n//ideas: \r\n//make order of op problems the answer choices and have them select the one that is or is not the same as a given answer. \r\n\r\n// give two problems asking if the given problems have the same answer. (make it 50/50)\r\n\r\n//make it show student solving and they identify what step was messed up.\r\n\r\n","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\UserWorksheets.js",["453"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport WorksheetList from \"../components/WorksheetList\";\r\n\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserWorksheets = (props) => {\r\n  const userId = useParams().userId;\r\n  const [loadedWorksheets, setLoadedWorksheets] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    props.handleClearSelections()\r\n    const fetchWorksheets = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/worksheets/${userId}`\r\n        );\r\n        setLoadedWorksheets(responseData.worksheets);\r\n      } catch (err) {}\r\n    };\r\n    fetchWorksheets();\r\n  }, []);\r\n  console.log(loadedWorksheets);\r\n  const worksheetDeletedHandler = (deletedWorksheetId) => {\r\n    setLoadedWorksheets((prevWorksheets) =>\r\n      prevWorksheets.filter((worksheet) => worksheet.id !== deletedWorksheetId)\r\n    );\r\n  };\r\n  // const loadedPlaces = DUMMY_PLACES.filter(place => place.creator===userId)\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedWorksheets && (\r\n        <div>\r\n        <h3>My Worksheet Collection</h3>\r\n        <WorksheetList\r\n          items={loadedWorksheets}\r\n          onDeleteWorksheet={worksheetDeletedHandler}\r\n          handleDuplicate={props.handleDuplicate}\r\n        />\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserWorksheets;\r\n","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetList.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetItem.js",["454"],"import React, { useState, useContext } from \"react\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport WorksheetData from \"./WorksheetData\";\r\n\r\n// import './WorksheetItem.css'\r\nconst WorksheetItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const showDeleteWarningHandler = () => setShowConfirmModal(true);\r\n  const cancelDeleteHandler = () => setShowConfirmModal(false);\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      // const history = useHistory();\r\n      await sendRequest(\r\n        `http://localhost:5000/api/worksheets/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: \"Bearer \" + auth.token }\r\n      );\r\n      props.onDelete(props.id);\r\n      // history.push('/');\r\n    } catch (err) {}\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"worksheet-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this worksheet? Please note that it\r\n          can't be undone.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"worksheet-item\">\r\n        <Card className=\"worksheet-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"worksheet-item__info\">\r\n            <WorksheetData\r\n              key={props.key}\r\n              userSelection={props.userSelection}\r\n              title={props.title}\r\n              docStyle={props.docStyle}\r\n              creatorId={props.creatorId}\r\n              createdAt={props.createdAt}\r\n              handleDuplicate={props.handleDuplicate}\r\n              questAnswerList={props.questAnswerList}\r\n            />\r\n          </div>\r\n\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WorksheetItem;","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Map.js",["455"],"import React, { useRef, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Map.css\";\r\n//useEffect allows you to input function that can execute when certain inputs change\r\n//useRef can create referenes which can be used to get a reference/pointer to a real dom node. with REST, create variables which survive re-render\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  const {center, zoom} = props; //pulls elements out of props so you dont have to do props. Allows you to use the props inside hte useEffect without it changing anytime any props change.\r\n\r\n  useEffect(()=>{\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n\r\n  }, [center, zoom]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n",["456","457"],"C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetData.js",["458","459","460"],"import React, { useState, useContext } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {CSSTransition} from 'react-transition-group'\r\n\r\nimport './WorksheetData.css';\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst WorksheetData = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const [dropdownDisplay, setDropdownDisplay] = React.useState(null);\r\n  const [expandWorksheetData, setExpandWorksheetData] = React.useState(false);\r\n\r\n  const handleClick = (e) => {\r\n    setDropdownDisplay(e.currentTarget);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setDropdownDisplay(null);\r\n  }\r\n  const handleDelete = () => {\r\n    setDropdownDisplay(null);\r\n  }\r\n  const handleClose = () => {\r\n    setDropdownDisplay(null);\r\n  }\r\n\r\n  const handleExpandWorksheetData = () => {\r\n    setExpandWorksheetData(!expandWorksheetData)\r\n  }\r\n  if (props.userSelection.length===0) {\r\n    return null\r\n  }\r\n  var displayArray = [];\r\n  let specify = [];\r\n  for (var i = 0; i < props.userSelection.length; i++) {\r\n    for (let k in props.userSelection[i]){\r\n      if (props.userSelection[k] === true) {\r\n        specify.push(props.userSelection[k])\r\n      }\r\n    }\r\n    displayArray.push(\r\n      <div className=\"ws-data__concept-container\">\r\n        <p className=\"ws-data__concept\">{props.userSelection[i].concept}</p>\r\n        <p className=\"ws-data__specify\">{specify} working on it, this could be a long list, with a few things, in it. </p>\r\n        <p className=\"ws-data__quantity\">{props.userSelection[i].quantity}</p>\r\n      </div>\r\n\r\n\r\n          \r\n    );\r\n  }\r\n  let questTotal = props.userSelection.map(concept => concept.quantity)\r\n   .reduce((a,b) => {return Number(a) + Number(b);});\r\n\r\n  var table = (\r\n    <React.Fragment>\r\n    <div className= \"ws-data__container\">\r\n      <div className= \"ws-data__title-container\">\r\n        <h3 className=\"ws-data__title\">{props.title}<p></p></h3>\r\n        <p className=\"ws-data__totalQ\">Total Questions: {questTotal} </p>\r\n        <p className= \"ws-data__totalQ\">Created: {props.createdAt}</p>\r\n        <button onClick={handleClick} className=\"ws-data__dropdown\">\r\n            <MoreVertIcon />\r\n        </button>\r\n        {auth.userId === props.creatorId && (\r\n          <React.Fragment>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              key={props.key}\r\n              anchorEl={dropdownDisplay}\r\n              keepMounted\r\n              open={Boolean(dropdownDisplay)}\r\n              onClose={handleClose}\r\n              getContentAnchorEl={null}\r\n            >\r\n              <MenuItem onClick={handleEdit}>Edit</MenuItem>\r\n              <MenuItem onClick={()=>{props.handleDuplicate('copy',props.userSelection, props.title, props.questAnswerList)}}>Download again</MenuItem>\r\n              <MenuItem onClick={()=>{props.handleDuplicate('new',props.userSelection, props.title, props.questAnswerList)}}>New Version</MenuItem>\r\n              \r\n              <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n\r\n            </Menu>\r\n            </React.Fragment>\r\n            )}\r\n      \r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n      <CSSTransition \r\n      in={expandWorksheetData} \r\n      timeout={200} \r\n      classNames=\"slide-down\" \r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <div>\r\n    <div className=\"ws-data__sub-title-container\">\r\n                <p className=\"ws-data__concept\">Concept</p>\r\n                <p className=\"ws-data__specify\">Specify</p>\r\n                <p className=\"ws-data__quantity\">Quantity</p>\r\n          </div>\r\n          <div className=\"ws-data__content-container\">\r\n            {displayArray}\r\n          </div>\r\n\r\n\r\n\r\n      {/* <aside onClick={handleExpandWorksheetData}>\r\n          \r\n      </aside> */}\r\n      </div>\r\n    </CSSTransition>\r\n\r\n    <button className=\"ws-data__expandWorksheetData\" onClick={handleExpandWorksheetData}>{expandWorksheetData?<ExpandLessIcon/>:<ExpandMoreIcon/>}</button>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n  return table;\r\n};\r\n\r\nexport default WorksheetData;",{"ruleId":"461","replacedBy":"462"},{"ruleId":"463","replacedBy":"464"},{"ruleId":"465","severity":1,"message":"466","line":5,"column":3,"nodeType":"467","messageId":"468","endLine":5,"endColumn":13},{"ruleId":"465","severity":1,"message":"469","line":9,"column":22,"nodeType":"467","messageId":"468","endLine":9,"endColumn":28},{"ruleId":"465","severity":1,"message":"470","line":9,"column":37,"nodeType":"467","messageId":"468","endLine":9,"endColumn":41},{"ruleId":"465","severity":1,"message":"471","line":82,"column":21,"nodeType":"467","messageId":"468","endLine":82,"endColumn":33},{"ruleId":"465","severity":1,"message":"472","line":83,"column":11,"nodeType":"467","messageId":"468","endLine":83,"endColumn":20},{"ruleId":"465","severity":1,"message":"473","line":83,"column":22,"nodeType":"467","messageId":"468","endLine":83,"endColumn":27},{"ruleId":"465","severity":1,"message":"474","line":83,"column":42,"nodeType":"467","messageId":"468","endLine":83,"endColumn":52},{"ruleId":"465","severity":1,"message":"475","line":194,"column":9,"nodeType":"467","messageId":"468","endLine":194,"endColumn":38},{"ruleId":"465","severity":1,"message":"469","line":1,"column":9,"nodeType":"467","messageId":"468","endLine":1,"endColumn":15},{"ruleId":"465","severity":1,"message":"476","line":1,"column":17,"nodeType":"467","messageId":"468","endLine":1,"endColumn":22},{"ruleId":"465","severity":1,"message":"477","line":1,"column":30,"nodeType":"467","messageId":"468","endLine":1,"endColumn":36},{"ruleId":"478","severity":1,"message":"479","line":31,"column":10,"nodeType":"480","endLine":31,"endColumn":58},{"ruleId":"478","severity":1,"message":"479","line":37,"column":9,"nodeType":"480","endLine":37,"endColumn":58},{"ruleId":"478","severity":1,"message":"479","line":45,"column":9,"nodeType":"480","endLine":45,"endColumn":55},{"ruleId":"478","severity":1,"message":"479","line":52,"column":11,"nodeType":"480","endLine":52,"endColumn":56},{"ruleId":"465","severity":1,"message":"466","line":2,"column":17,"nodeType":"467","messageId":"468","endLine":2,"endColumn":27},{"ruleId":"465","severity":1,"message":"481","line":2,"column":29,"nodeType":"467","messageId":"468","endLine":2,"endColumn":39},{"ruleId":"465","severity":1,"message":"482","line":14,"column":10,"nodeType":"467","messageId":"468","endLine":14,"endColumn":21},{"ruleId":"465","severity":1,"message":"483","line":1,"column":8,"nodeType":"467","messageId":"468","endLine":1,"endColumn":16},{"ruleId":"465","severity":1,"message":"484","line":2,"column":17,"nodeType":"467","messageId":"468","endLine":2,"endColumn":26},{"ruleId":"465","severity":1,"message":"485","line":9,"column":11,"nodeType":"467","messageId":"468","endLine":9,"endColumn":15},{"ruleId":"465","severity":1,"message":"472","line":10,"column":12,"nodeType":"467","messageId":"468","endLine":10,"endColumn":21},{"ruleId":"465","severity":1,"message":"473","line":10,"column":23,"nodeType":"467","messageId":"468","endLine":10,"endColumn":28},{"ruleId":"465","severity":1,"message":"486","line":10,"column":30,"nodeType":"467","messageId":"468","endLine":10,"endColumn":41},{"ruleId":"465","severity":1,"message":"474","line":10,"column":43,"nodeType":"467","messageId":"468","endLine":10,"endColumn":53},{"ruleId":"465","severity":1,"message":"487","line":5,"column":8,"nodeType":"467","messageId":"468","endLine":5,"endColumn":28},{"ruleId":"465","severity":1,"message":"470","line":2,"column":10,"nodeType":"467","messageId":"468","endLine":2,"endColumn":14},{"ruleId":"465","severity":1,"message":"488","line":1,"column":9,"nodeType":"467","messageId":"468","endLine":1,"endColumn":21},{"ruleId":"465","severity":1,"message":"489","line":1,"column":23,"nodeType":"467","messageId":"468","endLine":1,"endColumn":32},{"ruleId":"465","severity":1,"message":"490","line":1,"column":41,"nodeType":"467","messageId":"468","endLine":1,"endColumn":49},{"ruleId":"465","severity":1,"message":"491","line":1,"column":29,"nodeType":"467","messageId":"468","endLine":1,"endColumn":37},{"ruleId":"465","severity":1,"message":"492","line":7,"column":9,"nodeType":"467","messageId":"468","endLine":7,"endColumn":15},{"ruleId":"465","severity":1,"message":"493","line":1,"column":9,"nodeType":"467","messageId":"468","endLine":1,"endColumn":17},{"ruleId":"465","severity":1,"message":"494","line":2,"column":20,"nodeType":"467","messageId":"468","endLine":2,"endColumn":23},{"ruleId":"465","severity":1,"message":"495","line":72,"column":7,"nodeType":"467","messageId":"468","endLine":72,"endColumn":24},{"ruleId":"496","severity":1,"message":"497","line":174,"column":9,"nodeType":"467","messageId":"498","endLine":174,"endColumn":15},{"ruleId":"465","severity":1,"message":"499","line":180,"column":9,"nodeType":"467","messageId":"468","endLine":180,"endColumn":21},{"ruleId":"465","severity":1,"message":"500","line":182,"column":9,"nodeType":"467","messageId":"468","endLine":182,"endColumn":11},{"ruleId":"465","severity":1,"message":"501","line":187,"column":9,"nodeType":"467","messageId":"468","endLine":187,"endColumn":17},{"ruleId":"465","severity":1,"message":"499","line":218,"column":9,"nodeType":"467","messageId":"468","endLine":218,"endColumn":21},{"ruleId":"465","severity":1,"message":"500","line":220,"column":9,"nodeType":"467","messageId":"468","endLine":220,"endColumn":11},{"ruleId":"496","severity":1,"message":"502","line":223,"column":9,"nodeType":"467","messageId":"498","endLine":223,"endColumn":14},{"ruleId":"465","severity":1,"message":"501","line":225,"column":9,"nodeType":"467","messageId":"468","endLine":225,"endColumn":17},{"ruleId":"465","severity":1,"message":"500","line":269,"column":9,"nodeType":"467","messageId":"468","endLine":269,"endColumn":11},{"ruleId":"465","severity":1,"message":"500","line":300,"column":9,"nodeType":"467","messageId":"468","endLine":300,"endColumn":11},{"ruleId":"465","severity":1,"message":"503","line":4,"column":21,"nodeType":"467","messageId":"468","endLine":4,"endColumn":25},{"ruleId":"465","severity":1,"message":"504","line":4,"column":27,"nodeType":"467","messageId":"468","endLine":4,"endColumn":31},{"ruleId":"465","severity":1,"message":"492","line":5,"column":9,"nodeType":"467","messageId":"468","endLine":5,"endColumn":15},{"ruleId":"505","severity":1,"message":"506","line":58,"column":9,"nodeType":"467","messageId":"507","endLine":58,"endColumn":21},{"ruleId":"505","severity":1,"message":"506","line":63,"column":27,"nodeType":"467","messageId":"507","endLine":63,"endColumn":39},{"ruleId":"505","severity":1,"message":"506","line":64,"column":27,"nodeType":"467","messageId":"507","endLine":64,"endColumn":39},{"ruleId":"496","severity":1,"message":"508","line":139,"column":14,"nodeType":"467","messageId":"498","endLine":139,"endColumn":21},{"ruleId":"496","severity":1,"message":"509","line":139,"column":23,"nodeType":"467","messageId":"498","endLine":139,"endColumn":30},{"ruleId":"496","severity":1,"message":"508","line":141,"column":14,"nodeType":"467","messageId":"498","endLine":141,"endColumn":21},{"ruleId":"496","severity":1,"message":"509","line":141,"column":23,"nodeType":"467","messageId":"498","endLine":141,"endColumn":30},{"ruleId":"496","severity":1,"message":"508","line":144,"column":14,"nodeType":"467","messageId":"498","endLine":144,"endColumn":21},{"ruleId":"496","severity":1,"message":"509","line":144,"column":23,"nodeType":"467","messageId":"498","endLine":144,"endColumn":30},{"ruleId":"465","severity":1,"message":"510","line":2,"column":23,"nodeType":"467","messageId":"468","endLine":2,"endColumn":31},{"ruleId":"465","severity":1,"message":"511","line":4,"column":9,"nodeType":"467","messageId":"468","endLine":4,"endColumn":22},{"ruleId":"496","severity":1,"message":"512","line":100,"column":9,"nodeType":"467","messageId":"498","endLine":100,"endColumn":14},{"ruleId":"505","severity":1,"message":"513","line":113,"column":32,"nodeType":"467","messageId":"507","endLine":113,"endColumn":39},{"ruleId":"465","severity":1,"message":"514","line":222,"column":19,"nodeType":"467","messageId":"468","endLine":222,"endColumn":26},{"ruleId":"465","severity":1,"message":"514","line":260,"column":19,"nodeType":"467","messageId":"468","endLine":260,"endColumn":26},{"ruleId":"465","severity":1,"message":"514","line":295,"column":19,"nodeType":"467","messageId":"468","endLine":295,"endColumn":26},{"ruleId":"465","severity":1,"message":"515","line":323,"column":9,"nodeType":"467","messageId":"468","endLine":323,"endColumn":13},{"ruleId":"465","severity":1,"message":"514","line":328,"column":19,"nodeType":"467","messageId":"468","endLine":328,"endColumn":26},{"ruleId":"465","severity":1,"message":"516","line":358,"column":9,"nodeType":"467","messageId":"468","endLine":358,"endColumn":16},{"ruleId":"465","severity":1,"message":"514","line":360,"column":19,"nodeType":"467","messageId":"468","endLine":360,"endColumn":26},{"ruleId":"465","severity":1,"message":"514","line":390,"column":19,"nodeType":"467","messageId":"468","endLine":390,"endColumn":26},{"ruleId":"465","severity":1,"message":"514","line":422,"column":19,"nodeType":"467","messageId":"468","endLine":422,"endColumn":26},{"ruleId":"465","severity":1,"message":"514","line":452,"column":19,"nodeType":"467","messageId":"468","endLine":452,"endColumn":26},{"ruleId":"465","severity":1,"message":"515","line":493,"column":9,"nodeType":"467","messageId":"468","endLine":493,"endColumn":13},{"ruleId":"465","severity":1,"message":"517","line":494,"column":9,"nodeType":"467","messageId":"468","endLine":494,"endColumn":14},{"ruleId":"518","severity":1,"message":"519","line":102,"column":18,"nodeType":"520","messageId":"521","endLine":102,"endColumn":22},{"ruleId":"465","severity":1,"message":"522","line":166,"column":9,"nodeType":"467","messageId":"468","endLine":166,"endColumn":16},{"ruleId":"496","severity":1,"message":"523","line":190,"column":12,"nodeType":"467","messageId":"498","endLine":190,"endColumn":13},{"ruleId":"496","severity":1,"message":"524","line":190,"column":15,"nodeType":"467","messageId":"498","endLine":190,"endColumn":19},{"ruleId":"496","severity":1,"message":"523","line":192,"column":12,"nodeType":"467","messageId":"498","endLine":192,"endColumn":13},{"ruleId":"496","severity":1,"message":"524","line":192,"column":15,"nodeType":"467","messageId":"498","endLine":192,"endColumn":19},{"ruleId":"505","severity":1,"message":"525","line":201,"column":9,"nodeType":"467","messageId":"507","endLine":201,"endColumn":22},{"ruleId":"505","severity":1,"message":"525","line":203,"column":7,"nodeType":"467","messageId":"507","endLine":203,"endColumn":20},{"ruleId":"505","severity":1,"message":"525","line":205,"column":7,"nodeType":"467","messageId":"507","endLine":205,"endColumn":20},{"ruleId":"505","severity":1,"message":"525","line":207,"column":7,"nodeType":"467","messageId":"507","endLine":207,"endColumn":20},{"ruleId":"496","severity":1,"message":"526","line":210,"column":11,"nodeType":"467","messageId":"498","endLine":210,"endColumn":12},{"ruleId":"496","severity":1,"message":"527","line":211,"column":11,"nodeType":"467","messageId":"498","endLine":211,"endColumn":12},{"ruleId":"496","severity":1,"message":"528","line":212,"column":11,"nodeType":"467","messageId":"498","endLine":212,"endColumn":12},{"ruleId":"496","severity":1,"message":"529","line":213,"column":11,"nodeType":"467","messageId":"498","endLine":213,"endColumn":12},{"ruleId":"496","severity":1,"message":"530","line":214,"column":11,"nodeType":"467","messageId":"498","endLine":214,"endColumn":12},{"ruleId":"465","severity":1,"message":"531","line":214,"column":11,"nodeType":"467","messageId":"468","endLine":214,"endColumn":12},{"ruleId":"505","severity":1,"message":"525","line":216,"column":9,"nodeType":"467","messageId":"507","endLine":216,"endColumn":22},{"ruleId":"505","severity":1,"message":"525","line":218,"column":7,"nodeType":"467","messageId":"507","endLine":218,"endColumn":20},{"ruleId":"505","severity":1,"message":"525","line":220,"column":7,"nodeType":"467","messageId":"507","endLine":220,"endColumn":20},{"ruleId":"505","severity":1,"message":"525","line":222,"column":7,"nodeType":"467","messageId":"507","endLine":222,"endColumn":20},{"ruleId":"496","severity":1,"message":"526","line":230,"column":11,"nodeType":"467","messageId":"498","endLine":230,"endColumn":12},{"ruleId":"496","severity":1,"message":"527","line":231,"column":11,"nodeType":"467","messageId":"498","endLine":231,"endColumn":12},{"ruleId":"496","severity":1,"message":"528","line":232,"column":11,"nodeType":"467","messageId":"498","endLine":232,"endColumn":12},{"ruleId":"496","severity":1,"message":"529","line":233,"column":11,"nodeType":"467","messageId":"498","endLine":233,"endColumn":12},{"ruleId":"465","severity":1,"message":"532","line":101,"column":23,"nodeType":"467","messageId":"468","endLine":101,"endColumn":27},{"ruleId":"465","severity":1,"message":"533","line":105,"column":9,"nodeType":"467","messageId":"468","endLine":105,"endColumn":17},{"ruleId":"496","severity":1,"message":"502","line":114,"column":13,"nodeType":"467","messageId":"498","endLine":114,"endColumn":18},{"ruleId":"496","severity":1,"message":"512","line":116,"column":13,"nodeType":"467","messageId":"498","endLine":116,"endColumn":18},{"ruleId":"465","severity":1,"message":"514","line":136,"column":19,"nodeType":"467","messageId":"468","endLine":136,"endColumn":26},{"ruleId":"465","severity":1,"message":"514","line":158,"column":19,"nodeType":"467","messageId":"468","endLine":158,"endColumn":26},{"ruleId":"465","severity":1,"message":"492","line":6,"column":7,"nodeType":"467","messageId":"468","endLine":6,"endColumn":13},{"ruleId":"534","severity":1,"message":"535","line":55,"column":44,"nodeType":"536","messageId":"537","endLine":55,"endColumn":46},{"ruleId":"534","severity":1,"message":"535","line":55,"column":62,"nodeType":"536","messageId":"537","endLine":55,"endColumn":64},{"ruleId":"465","severity":1,"message":"538","line":76,"column":7,"nodeType":"467","messageId":"468","endLine":76,"endColumn":26},{"ruleId":"465","severity":1,"message":"539","line":97,"column":7,"nodeType":"467","messageId":"468","endLine":97,"endColumn":24},{"ruleId":"465","severity":1,"message":"504","line":3,"column":5,"nodeType":"467","messageId":"468","endLine":3,"endColumn":9},{"ruleId":"465","severity":1,"message":"503","line":4,"column":5,"nodeType":"467","messageId":"468","endLine":4,"endColumn":9},{"ruleId":"465","severity":1,"message":"540","line":5,"column":5,"nodeType":"467","messageId":"468","endLine":5,"endColumn":10},{"ruleId":"465","severity":1,"message":"492","line":15,"column":7,"nodeType":"467","messageId":"468","endLine":15,"endColumn":13},{"ruleId":"534","severity":1,"message":"535","line":124,"column":38,"nodeType":"536","messageId":"537","endLine":124,"endColumn":40},{"ruleId":"534","severity":1,"message":"535","line":124,"column":111,"nodeType":"536","messageId":"537","endLine":124,"endColumn":113},{"ruleId":"518","severity":1,"message":"519","line":133,"column":30,"nodeType":"520","messageId":"521","endLine":133,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":133,"column":46,"nodeType":"520","messageId":"521","endLine":133,"endColumn":50},{"ruleId":"518","severity":1,"message":"519","line":133,"column":62,"nodeType":"520","messageId":"521","endLine":133,"endColumn":66},{"ruleId":"518","severity":1,"message":"519","line":137,"column":39,"nodeType":"520","messageId":"521","endLine":137,"endColumn":43},{"ruleId":"518","severity":1,"message":"519","line":137,"column":67,"nodeType":"520","messageId":"521","endLine":137,"endColumn":71},{"ruleId":"518","severity":1,"message":"519","line":137,"column":95,"nodeType":"520","messageId":"521","endLine":137,"endColumn":99},{"ruleId":"518","severity":1,"message":"519","line":142,"column":39,"nodeType":"520","messageId":"521","endLine":142,"endColumn":43},{"ruleId":"518","severity":1,"message":"519","line":142,"column":69,"nodeType":"520","messageId":"521","endLine":142,"endColumn":73},{"ruleId":"518","severity":1,"message":"519","line":142,"column":99,"nodeType":"520","messageId":"521","endLine":142,"endColumn":103},{"ruleId":"465","severity":1,"message":"541","line":152,"column":26,"nodeType":"467","messageId":"468","endLine":152,"endColumn":35},{"ruleId":"518","severity":1,"message":"519","line":169,"column":46,"nodeType":"520","messageId":"521","endLine":169,"endColumn":50},{"ruleId":"518","severity":1,"message":"519","line":171,"column":33,"nodeType":"520","messageId":"521","endLine":171,"endColumn":37},{"ruleId":"518","severity":1,"message":"519","line":173,"column":37,"nodeType":"520","messageId":"521","endLine":173,"endColumn":41},{"ruleId":"518","severity":1,"message":"519","line":174,"column":37,"nodeType":"520","messageId":"521","endLine":174,"endColumn":41},{"ruleId":"518","severity":1,"message":"519","line":175,"column":33,"nodeType":"520","messageId":"521","endLine":175,"endColumn":37},{"ruleId":"518","severity":1,"message":"519","line":177,"column":33,"nodeType":"520","messageId":"521","endLine":177,"endColumn":37},{"ruleId":"518","severity":1,"message":"519","line":178,"column":33,"nodeType":"520","messageId":"521","endLine":178,"endColumn":37},{"ruleId":"518","severity":1,"message":"519","line":205,"column":43,"nodeType":"520","messageId":"521","endLine":205,"endColumn":47},{"ruleId":"518","severity":1,"message":"519","line":206,"column":43,"nodeType":"520","messageId":"521","endLine":206,"endColumn":47},{"ruleId":"518","severity":1,"message":"519","line":207,"column":43,"nodeType":"520","messageId":"521","endLine":207,"endColumn":47},{"ruleId":"518","severity":1,"message":"519","line":212,"column":49,"nodeType":"520","messageId":"521","endLine":212,"endColumn":53},{"ruleId":"518","severity":1,"message":"519","line":213,"column":49,"nodeType":"520","messageId":"521","endLine":213,"endColumn":53},{"ruleId":"518","severity":1,"message":"519","line":214,"column":49,"nodeType":"520","messageId":"521","endLine":214,"endColumn":53},{"ruleId":"518","severity":1,"message":"519","line":215,"column":49,"nodeType":"520","messageId":"521","endLine":215,"endColumn":53},{"ruleId":"518","severity":1,"message":"519","line":220,"column":30,"nodeType":"520","messageId":"521","endLine":220,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":221,"column":30,"nodeType":"520","messageId":"521","endLine":221,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":222,"column":30,"nodeType":"520","messageId":"521","endLine":222,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":223,"column":30,"nodeType":"520","messageId":"521","endLine":223,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":229,"column":31,"nodeType":"520","messageId":"521","endLine":229,"endColumn":35},{"ruleId":"518","severity":1,"message":"519","line":230,"column":31,"nodeType":"520","messageId":"521","endLine":230,"endColumn":35},{"ruleId":"518","severity":1,"message":"519","line":231,"column":31,"nodeType":"520","messageId":"521","endLine":231,"endColumn":35},{"ruleId":"518","severity":1,"message":"519","line":232,"column":31,"nodeType":"520","messageId":"521","endLine":232,"endColumn":35},{"ruleId":"518","severity":1,"message":"519","line":238,"column":40,"nodeType":"520","messageId":"521","endLine":238,"endColumn":44},{"ruleId":"518","severity":1,"message":"519","line":239,"column":40,"nodeType":"520","messageId":"521","endLine":239,"endColumn":44},{"ruleId":"518","severity":1,"message":"519","line":240,"column":40,"nodeType":"520","messageId":"521","endLine":240,"endColumn":44},{"ruleId":"518","severity":1,"message":"519","line":241,"column":40,"nodeType":"520","messageId":"521","endLine":241,"endColumn":44},{"ruleId":"496","severity":1,"message":"542","line":247,"column":7,"nodeType":"467","messageId":"498","endLine":247,"endColumn":11},{"ruleId":"465","severity":1,"message":"543","line":268,"column":28,"nodeType":"467","messageId":"468","endLine":268,"endColumn":36},{"ruleId":"518","severity":1,"message":"519","line":272,"column":30,"nodeType":"520","messageId":"521","endLine":272,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":273,"column":30,"nodeType":"520","messageId":"521","endLine":273,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":274,"column":30,"nodeType":"520","messageId":"521","endLine":274,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":275,"column":30,"nodeType":"520","messageId":"521","endLine":275,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":281,"column":20,"nodeType":"520","messageId":"521","endLine":281,"endColumn":24},{"ruleId":"518","severity":1,"message":"519","line":281,"column":62,"nodeType":"520","messageId":"521","endLine":281,"endColumn":66},{"ruleId":"518","severity":1,"message":"519","line":282,"column":20,"nodeType":"520","messageId":"521","endLine":282,"endColumn":24},{"ruleId":"518","severity":1,"message":"519","line":282,"column":62,"nodeType":"520","messageId":"521","endLine":282,"endColumn":66},{"ruleId":"518","severity":1,"message":"519","line":287,"column":39,"nodeType":"520","messageId":"521","endLine":287,"endColumn":43},{"ruleId":"518","severity":1,"message":"519","line":289,"column":35,"nodeType":"520","messageId":"521","endLine":289,"endColumn":39},{"ruleId":"518","severity":1,"message":"519","line":292,"column":39,"nodeType":"520","messageId":"521","endLine":292,"endColumn":43},{"ruleId":"518","severity":1,"message":"519","line":293,"column":35,"nodeType":"520","messageId":"521","endLine":293,"endColumn":39},{"ruleId":"518","severity":1,"message":"519","line":294,"column":35,"nodeType":"520","messageId":"521","endLine":294,"endColumn":39},{"ruleId":"518","severity":1,"message":"519","line":295,"column":35,"nodeType":"520","messageId":"521","endLine":295,"endColumn":39},{"ruleId":"518","severity":1,"message":"519","line":296,"column":35,"nodeType":"520","messageId":"521","endLine":296,"endColumn":39},{"ruleId":"518","severity":1,"message":"519","line":316,"column":30,"nodeType":"520","messageId":"521","endLine":316,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":317,"column":30,"nodeType":"520","messageId":"521","endLine":317,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":318,"column":30,"nodeType":"520","messageId":"521","endLine":318,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":319,"column":30,"nodeType":"520","messageId":"521","endLine":319,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":324,"column":30,"nodeType":"520","messageId":"521","endLine":324,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":325,"column":30,"nodeType":"520","messageId":"521","endLine":325,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":325,"column":51,"nodeType":"520","messageId":"521","endLine":325,"endColumn":55},{"ruleId":"518","severity":1,"message":"519","line":326,"column":30,"nodeType":"520","messageId":"521","endLine":326,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":326,"column":51,"nodeType":"520","messageId":"521","endLine":326,"endColumn":55},{"ruleId":"518","severity":1,"message":"519","line":327,"column":30,"nodeType":"520","messageId":"521","endLine":327,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":327,"column":51,"nodeType":"520","messageId":"521","endLine":327,"endColumn":55},{"ruleId":"518","severity":1,"message":"519","line":333,"column":8,"nodeType":"520","messageId":"521","endLine":333,"endColumn":12},{"ruleId":"518","severity":1,"message":"519","line":333,"column":47,"nodeType":"520","messageId":"521","endLine":333,"endColumn":51},{"ruleId":"518","severity":1,"message":"519","line":334,"column":8,"nodeType":"520","messageId":"521","endLine":334,"endColumn":12},{"ruleId":"518","severity":1,"message":"519","line":334,"column":47,"nodeType":"520","messageId":"521","endLine":334,"endColumn":51},{"ruleId":"518","severity":1,"message":"519","line":334,"column":68,"nodeType":"520","messageId":"521","endLine":334,"endColumn":72},{"ruleId":"518","severity":1,"message":"519","line":335,"column":8,"nodeType":"520","messageId":"521","endLine":335,"endColumn":12},{"ruleId":"518","severity":1,"message":"519","line":335,"column":47,"nodeType":"520","messageId":"521","endLine":335,"endColumn":51},{"ruleId":"518","severity":1,"message":"519","line":335,"column":68,"nodeType":"520","messageId":"521","endLine":335,"endColumn":72},{"ruleId":"518","severity":1,"message":"519","line":336,"column":8,"nodeType":"520","messageId":"521","endLine":336,"endColumn":12},{"ruleId":"518","severity":1,"message":"519","line":336,"column":47,"nodeType":"520","messageId":"521","endLine":336,"endColumn":51},{"ruleId":"518","severity":1,"message":"519","line":336,"column":68,"nodeType":"520","messageId":"521","endLine":336,"endColumn":72},{"ruleId":"518","severity":1,"message":"519","line":349,"column":30,"nodeType":"520","messageId":"521","endLine":349,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":350,"column":30,"nodeType":"520","messageId":"521","endLine":350,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":351,"column":30,"nodeType":"520","messageId":"521","endLine":351,"endColumn":34},{"ruleId":"518","severity":1,"message":"519","line":352,"column":30,"nodeType":"520","messageId":"521","endLine":352,"endColumn":34},{"ruleId":"496","severity":1,"message":"542","line":356,"column":7,"nodeType":"467","messageId":"498","endLine":356,"endColumn":11},{"ruleId":"465","severity":1,"message":"544","line":1,"column":10,"nodeType":"467","messageId":"468","endLine":1,"endColumn":12},{"ruleId":"465","severity":1,"message":"494","line":3,"column":66,"nodeType":"467","messageId":"468","endLine":3,"endColumn":69},{"ruleId":"465","severity":1,"message":"545","line":5,"column":5,"nodeType":"467","messageId":"468","endLine":5,"endColumn":6},{"ruleId":"496","severity":1,"message":"497","line":128,"column":13,"nodeType":"467","messageId":"498","endLine":128,"endColumn":19},{"ruleId":"496","severity":1,"message":"508","line":128,"column":21,"nodeType":"467","messageId":"498","endLine":128,"endColumn":28},{"ruleId":"496","severity":1,"message":"509","line":129,"column":12,"nodeType":"467","messageId":"498","endLine":129,"endColumn":19},{"ruleId":"496","severity":1,"message":"497","line":131,"column":14,"nodeType":"467","messageId":"498","endLine":131,"endColumn":20},{"ruleId":"496","severity":1,"message":"508","line":131,"column":22,"nodeType":"467","messageId":"498","endLine":131,"endColumn":29},{"ruleId":"496","severity":1,"message":"509","line":132,"column":13,"nodeType":"467","messageId":"498","endLine":132,"endColumn":20},{"ruleId":"496","severity":1,"message":"497","line":134,"column":14,"nodeType":"467","messageId":"498","endLine":134,"endColumn":20},{"ruleId":"496","severity":1,"message":"508","line":134,"column":22,"nodeType":"467","messageId":"498","endLine":134,"endColumn":29},{"ruleId":"496","severity":1,"message":"509","line":135,"column":13,"nodeType":"467","messageId":"498","endLine":135,"endColumn":20},{"ruleId":"496","severity":1,"message":"546","line":136,"column":13,"nodeType":"467","messageId":"498","endLine":136,"endColumn":17},{"ruleId":"496","severity":1,"message":"497","line":138,"column":10,"nodeType":"467","messageId":"498","endLine":138,"endColumn":16},{"ruleId":"496","severity":1,"message":"508","line":138,"column":18,"nodeType":"467","messageId":"498","endLine":138,"endColumn":25},{"ruleId":"496","severity":1,"message":"509","line":138,"column":27,"nodeType":"467","messageId":"498","endLine":138,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":161,"column":14,"nodeType":"467","messageId":"498","endLine":161,"endColumn":20},{"ruleId":"496","severity":1,"message":"508","line":161,"column":22,"nodeType":"467","messageId":"498","endLine":161,"endColumn":29},{"ruleId":"496","severity":1,"message":"509","line":162,"column":13,"nodeType":"467","messageId":"498","endLine":162,"endColumn":20},{"ruleId":"547","severity":1,"message":"548","line":37,"column":6,"nodeType":"549","endLine":37,"endColumn":35,"suggestions":"550"},{"ruleId":"465","severity":1,"message":"503","line":2,"column":21,"nodeType":"467","messageId":"468","endLine":2,"endColumn":25},{"ruleId":"465","severity":1,"message":"504","line":2,"column":27,"nodeType":"467","messageId":"468","endLine":2,"endColumn":31},{"ruleId":"534","severity":1,"message":"551","line":56,"column":48,"nodeType":"536","messageId":"537","endLine":56,"endColumn":50},{"ruleId":"534","severity":1,"message":"551","line":56,"column":66,"nodeType":"536","messageId":"537","endLine":56,"endColumn":68},{"ruleId":"534","severity":1,"message":"535","line":56,"column":66,"nodeType":"536","messageId":"537","endLine":56,"endColumn":68},{"ruleId":"534","severity":1,"message":"535","line":56,"column":85,"nodeType":"536","messageId":"537","endLine":56,"endColumn":87},{"ruleId":"534","severity":1,"message":"535","line":10,"column":40,"nodeType":"536","messageId":"537","endLine":10,"endColumn":42},{"ruleId":"534","severity":1,"message":"535","line":10,"column":113,"nodeType":"536","messageId":"537","endLine":10,"endColumn":115},{"ruleId":"496","severity":1,"message":"552","line":98,"column":9,"nodeType":"467","messageId":"498","endLine":98,"endColumn":14},{"ruleId":"496","severity":1,"message":"552","line":153,"column":9,"nodeType":"467","messageId":"498","endLine":153,"endColumn":14},{"ruleId":"465","severity":1,"message":"553","line":169,"column":9,"nodeType":"467","messageId":"468","endLine":169,"endColumn":17},{"ruleId":"496","severity":1,"message":"552","line":219,"column":9,"nodeType":"467","messageId":"498","endLine":219,"endColumn":14},{"ruleId":"465","severity":1,"message":"553","line":234,"column":9,"nodeType":"467","messageId":"468","endLine":234,"endColumn":17},{"ruleId":"518","severity":1,"message":"519","line":253,"column":56,"nodeType":"520","messageId":"521","endLine":253,"endColumn":60},{"ruleId":"496","severity":1,"message":"552","line":273,"column":9,"nodeType":"467","messageId":"498","endLine":273,"endColumn":14},{"ruleId":"496","severity":1,"message":"554","line":289,"column":9,"nodeType":"467","messageId":"498","endLine":289,"endColumn":17},{"ruleId":"518","severity":1,"message":"519","line":289,"column":20,"nodeType":"520","messageId":"521","endLine":289,"endColumn":24},{"ruleId":"496","severity":1,"message":"552","line":327,"column":9,"nodeType":"467","messageId":"498","endLine":327,"endColumn":14},{"ruleId":"547","severity":1,"message":"555","line":25,"column":6,"nodeType":"549","endLine":25,"endColumn":8,"suggestions":"556"},{"ruleId":"465","severity":1,"message":"557","line":18,"column":9,"nodeType":"467","messageId":"468","endLine":18,"endColumn":33},{"ruleId":"465","severity":1,"message":"558","line":2,"column":8,"nodeType":"467","messageId":"468","endLine":2,"endColumn":16},{"ruleId":"461","replacedBy":"559"},{"ruleId":"463","replacedBy":"560"},{"ruleId":"465","severity":1,"message":"561","line":1,"column":17,"nodeType":"467","messageId":"468","endLine":1,"endColumn":25},{"ruleId":"465","severity":1,"message":"470","line":2,"column":9,"nodeType":"467","messageId":"468","endLine":2,"endColumn":13},{"ruleId":"465","severity":1,"message":"562","line":9,"column":8,"nodeType":"467","messageId":"468","endLine":9,"endColumn":18},"no-native-reassign",["563"],"no-negated-in-lhs",["564"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Link' is defined but never used.","'setCopyState' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","'handleDuplicatePDFViewTrigger' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'AuthContext' is defined but never used.","'Trashcan' is defined but never used.","'useEffect' is defined but never used.","'auth' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","'DisplayUserSelection' is defined but never used.","'defaultProps' is defined but never used.","'PropTypes' is defined but never used.","'Fragment' is defined but never used.","'roundDec' is defined but never used.","'styles' is assigned a value but never used.","'Fraction' is defined but never used.","'cap' is defined but never used.","'verticalFractions' is assigned a value but never used.","no-redeclare","'answer' is already defined.","redeclared","'mixedNumber1' is assigned a value but never used.","'AC' is assigned a value but never used.","'randProb' is assigned a value but never used.","'prob1' is already defined.","'View' is defined but never used.","'Text' is defined but never used.","no-use-before-define","'randDecimal2' was used before it was defined.","usedBeforeDefined","'numberS' is already defined.","'numberL' is already defined.","'splitDec' is defined but never used.","'verticalAlign' is defined but never used.","'prob2' is already defined.","'addWord' was used before it was defined.","'numberM' is assigned a value but never used.","'name' is assigned a value but never used.","'numList' is assigned a value but never used.","'sport' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'tstyles' is assigned a value but never used.","'$' is already defined.","'unit' is already defined.","'correctAnswer' was used before it was defined.","'A' is already defined.","'B' is already defined.","'C' is already defined.","'D' is already defined.","'E' is already defined.","'E' is assigned a value but never used.","'mass' is assigned a value but never used.","'numberL2' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'cell_style_vertical' is assigned a value but never used.","'cell_style_square' is assigned a value but never used.","'Image' is defined but never used.","'tableNum2' is assigned a value but never used.","'text' is already defined.","'tablNum2' is assigned a value but never used.","'to' is defined but never used.","'e' is assigned a value but never used.","'item' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["565"],"Unexpected mix of '&&' and '||'.","'wrong' is already defined.","'dividend' is assigned a value but never used.","'numberM2' is already defined.","React Hook useEffect has missing dependencies: 'sendRequest' and 'userId'. Either include them or remove the dependency array.",["566"],"'showDeleteWarningHandler' is assigned a value but never used.","'ReactDOM' is defined but never used.",["563"],["564"],"'useState' is defined but never used.","'DeleteIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},"Update the dependencies array to be: [id, value, isValid, onInput, props]",{"range":"571","text":"572"},"Update the dependencies array to be: [sendRequest, userId]",{"range":"573","text":"574"},[991,1020],"[id, value, isValid, onInput, props]",[909,911],"[sendRequest, userId]"]