[{"C:\\projects\\worksheet-creator\\src\\index.js":"1","C:\\projects\\worksheet-creator\\src\\reportWebVitals.js":"2","C:\\projects\\worksheet-creator\\src\\App.js":"3","C:\\projects\\worksheet-creator\\src\\app-files\\add-sub.js":"4","C:\\projects\\worksheet-creator\\src\\app-files\\general.js":"5","C:\\projects\\worksheet-creator\\src\\app-files\\order-of-ops.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":7173,"mtime":1607225362461,"results":"10","hashOfConfig":"8"},{"size":6144,"mtime":1607224242834,"results":"11","hashOfConfig":"8"},{"size":2259,"mtime":1607223595896,"results":"12","hashOfConfig":"8"},{"size":7478,"mtime":1607226217032,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ahlkum",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\worksheet-creator\\src\\index.js",[],"C:\\projects\\worksheet-creator\\src\\reportWebVitals.js",[],"C:\\projects\\worksheet-creator\\src\\App.js",["29","30","31"],"C:\\projects\\worksheet-creator\\src\\app-files\\add-sub.js",["32","33","34","35","36","37","38","39"],"import { getDefaultNormalizer } from \"@testing-library/react\"\r\nimport * as gen from './general.js'\r\n\r\n\r\n\r\nexport const addWhole = (Options) => {\r\n    var boy = gen.boyList[Math.floor(Math.random()*gen.boyList.length)]\r\n    var boy2 = gen.boyList2[Math.floor(Math.random()*gen.boyList2.length)]\r\n    var sport = gen.sportList[Math.floor(Math.random()*gen.sportList.length)]\r\n    var [numberS, numberL, numberXS] = [Math.floor(Math.random()*500 + 100), Math.floor(Math.random()*999+500), Math.floor(Math.random()*99+50)];\r\n\r\n    if (Options === \"2\") {\r\n    [numberS, numberL, numberXS] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001), Math.floor(Math.random()*700+300)];\r\n\r\n    } else if (Options ===\"3\") {\r\n    [numberS, numberL, numberXS] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001), Math.floor(Math.random()*700+300)];\r\n    } \r\n    var answer = (numberL+numberS)\r\n    var wrong= gen.wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = gen.answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    \r\n    var problem = {questionText:    (boy + \" played \" + sport + \" for \" + (numberS).toLocaleString() + \" minutes last year. \" + boy2 +\r\n                 \" played \" + sport + \" for \" + (numberL).toLocaleString() + \" minutes last year. How many minutes did \"\r\n                + boy + \" and \" + boy2 + ' play altogether?'),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    \r\n\r\n    console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n\r\n    // console.log(problem)\r\n            \r\n}\r\nexport const addDec = (Options) => {\r\n    var boy = gen.boyList[Math.floor(Math.random()*gen.boyList.length)]\r\n    var boy2 = gen.boyList2[Math.floor(Math.random()*gen.boyList2.length)]\r\n    var sport = gen.sportList[Math.floor(Math.random()*gen.sportList.length)]\r\n    var [numberS, numberL, numberXS] = [(Math.random()*49999+10011).toFixed(1),  (Math.random()*999999+500011).toFixed(2),  (Math.random()*3999+1001).tofixed(1)];\r\n    var f = 'format'\r\n    var answer= (numberL + numberS);\r\n    var wrong= gen.wrongOptions(answer, 'decimal', numberL, numberS)\r\n    var AC = gen.answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    // var wrong = gen.shuffleArray(gen.wrongOptions(answer, 'add', numberL, numberS))\r\n    // var tempAC = [answer, wrong[0], wrong[1], wrong[2]]\r\n    // var AC = gen.shuffleArray(tempAC)\r\n    var problem = { questionText: (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n                \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last year. How many minutes did \"\r\n                + boy + \" and \" + boy2 + \" play altogether?\"),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n\r\n    console.log(problem)\r\n    return problem\r\n    \r\n}\r\n\r\nexport const subDec = (Options) => {\r\n    var boy = gen.boyList[Math.floor(Math.random()*gen.boyList.length)]\r\n    var boy2 = gen.boyList2[Math.floor(Math.random()*gen.boyList2.length)]\r\n    var sport = gen.sportList[Math.floor(Math.random()*gen.sportList.length)]\r\n    var f = 'format'\r\n    var [numberS, numberL, numberXS] = [(Math.random()*49999+10011).toFixed(1),  (Math.random()*999999+500011).toFixed(2),  (Math.random()*3999+1001).tofixed(1)];\r\n\r\n    var answer= (numberL - numberS);\r\n    var wrong = gen.shuffleArray(gen.wrongOptions(answer, 'sub', numberL, numberS))\r\n    var AC = gen.answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var sub1 = (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n    \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last month. How many more minutes did \"\r\n    + boy2 + \" play than \" + boy + \"?\")\r\n    var sub2 = (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n    \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last month. What is the difference between \" +\r\n    \"the number of minutes \" + boy2 + \" played and the number of minutes \" + boy + \" played?\")\r\n    var randSub = [sub1, sub2][Math.floor(Math.random())]\r\n    var problem = {questionText: randSub,\r\n                answerChoices: AC,\r\n                correctAnswer: answer}\r\n    return problem\r\n}\r\n\r\nexport const subWhole = (Options) => {\r\n    var boy = gen.boyList[Math.floor(Math.random()*gen.boyList.length)]\r\n    var boy2 = gen.boyList2[Math.floor(Math.random()*gen.boyList2.length)]\r\n    var sport = gen.sportList[Math.floor(Math.random()*gen.sportList.length)]\r\n    var f = 'format'\r\n    var [numberS, numberL, numberXS] = [Math.floor(Math.random()*500 + 100), Math.floor(Math.random()*999+500), Math.floor(Math.random()*99+50)];\r\n\r\n    if (Options.level === \"2\") {\r\n        [numberS, numberL, numberXS] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001), Math.floor(Math.random()*700+300)];\r\n    \r\n    } else if (Options.level === \"3\") {\r\n        [numberS, numberL, numberXS] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001), Math.floor(Math.random()*700+300)];\r\n\r\n    }\r\n    var answer= (numberL - numberS);\r\n    var wrong = gen.shuffleArray(gen.wrongOptions(answer, 'sub', numberL, numberS))\r\n    var AC = gen.answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var sub1 = (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n    \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last month. How many more minutes did \"\r\n    + boy2 + \" play than \" + boy + \"?\")\r\n    var sub2 = (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n    \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last month. What is the difference between \" +\r\n    \"the number of minutes \" + boy2 + \" played and the number of minutes \" + boy + \" played?\")\r\n    var randSub = [sub1, sub2][Math.floor(Math.random())]\r\n    var problem = {questionText: randSub,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n    return problem\r\n\r\n}",["40","41"],"C:\\projects\\worksheet-creator\\src\\app-files\\general.js",["42","43"],"export var boyList = ['Greg', 'David', 'Jason', 'Samuel', 'Alex', 'Trevor']\r\nexport var boyList2 = ['Daniel', 'Javier', 'Chris', 'Brett', 'Henry', 'Kenneth']\r\nexport var sportList = ['football', 'soccer', 'baseball']\r\n\r\n\r\n\r\n\r\nexport const shuffleArray = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return (array)\r\n  }\r\nexport const wrongOptions = (answer, op, numL, numS) => {\r\n    var wrong = []\r\n    if (op === 'multiply') {\r\n      if (numS > 9) {\r\n          var noPlaceHolder = \"noplaceholder\"\r\n      } else {\r\n          var noPlaceHolder = numS+1\r\n      }\r\n      wrong.push(answer+1, answer*10, numL+numS) // need more\r\n    }else if (op === 'add') {\r\n      console.log(\"If op === add\")\r\n      wrong.push(answer+1, answer+2, numL+numS+numL, numL-numS, answer-10, answer-1, answer-2, answer+10)\r\n    }else if (op === 'sub') {\r\n      wrong.push(answer+1, answer+2, numL+numS, answer-10, answer-1, answer-2, answer+10)\r\n    }else if (op === 'divide') {\r\n      wrong.push(answer+1, answer*10, numL+numS, numL*numS)\r\n    } else {\r\n      console.log(\"op=== not triggering\")\r\n      wrong.push(answer +3, answer-1, answer*10, answer+1)\r\n    }\r\n    var wrongChoice = shuffleArray(wrong)\r\n    return ([wrongChoice[0], wrongChoice[1], wrongChoice[2]])\r\n  }\r\n\r\n  export const answerChoicesKey = (answer, wrong, wrong2, wrong3, f) => {\r\n    var answers = [answer, wrong, wrong2, wrong3]\r\n    answers = shuffleArray(answers)\r\n    var A = (' A ' + answers[0])\r\n    var B = (' B ' + answers[1])\r\n    var C = (' C ' + answers[2])\r\n    var D = (' D ' + answers[3])\r\n    var E = ''\r\n    console.log('A = ' +answer)\r\n    console.log('answers[2]'+ answers[2])\r\n    if (answers[0] === answer) {\r\n        E = A\r\n    } else if (answers[1] === answer) {\r\n        E = B\r\n    } else if (answers[2] === answer) {\r\n        E = C\r\n    } else if (answers[3] === answer) {\r\n        E = D\r\n    }\r\n    console.log(A, B, C, D, E)\r\n    return [A, B, C, D, E]\r\n  }\r\n","C:\\projects\\worksheet-creator\\src\\app-files\\order-of-ops.js",["44","45","46","47","48"],{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":12},{"ruleId":"53","severity":1,"message":"54","line":106,"column":18,"nodeType":"51","messageId":"55","endLine":106,"endColumn":19},{"ruleId":"53","severity":1,"message":"56","line":108,"column":15,"nodeType":"51","messageId":"55","endLine":108,"endColumn":23},{"ruleId":"49","severity":1,"message":"57","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":30},{"ruleId":"49","severity":1,"message":"58","line":16,"column":24,"nodeType":"51","messageId":"52","endLine":16,"endColumn":32},{"ruleId":"49","severity":1,"message":"58","line":41,"column":28,"nodeType":"51","messageId":"52","endLine":41,"endColumn":36},{"ruleId":"49","severity":1,"message":"59","line":42,"column":9,"nodeType":"51","messageId":"52","endLine":42,"endColumn":10},{"ruleId":"49","severity":1,"message":"59","line":65,"column":9,"nodeType":"51","messageId":"52","endLine":65,"endColumn":10},{"ruleId":"49","severity":1,"message":"58","line":66,"column":28,"nodeType":"51","messageId":"52","endLine":66,"endColumn":36},{"ruleId":"49","severity":1,"message":"59","line":88,"column":9,"nodeType":"51","messageId":"52","endLine":88,"endColumn":10},{"ruleId":"49","severity":1,"message":"58","line":95,"column":28,"nodeType":"51","messageId":"52","endLine":95,"endColumn":36},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"53","severity":1,"message":"64","line":21,"column":15,"nodeType":"51","messageId":"55","endLine":21,"endColumn":28},{"ruleId":"49","severity":1,"message":"65","line":21,"column":15,"nodeType":"51","messageId":"52","endLine":21,"endColumn":28},{"ruleId":"49","severity":1,"message":"59","line":24,"column":14,"nodeType":"51","messageId":"52","endLine":24,"endColumn":15},{"ruleId":"49","severity":1,"message":"66","line":24,"column":17,"nodeType":"51","messageId":"52","endLine":24,"endColumn":18},{"ruleId":"49","severity":1,"message":"67","line":27,"column":13,"nodeType":"51","messageId":"52","endLine":27,"endColumn":21},{"ruleId":"49","severity":1,"message":"68","line":30,"column":13,"nodeType":"51","messageId":"52","endLine":30,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":37,"column":17,"nodeType":"71","messageId":"72","endLine":37,"endColumn":18},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-redeclare","'x' is already defined.","redeclared","'question' is already defined.","'getDefaultNormalizer' is defined but never used.","'numberXS' is assigned a value but never used.","'f' is assigned a value but never used.","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'noPlaceHolder' is already defined.","'noPlaceHolder' is assigned a value but never used.","'r' is assigned a value but never used.","'DecimalT' is assigned a value but never used.","'decTwoDigit' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]