[{"C:\\projects\\worksheet-creator\\src\\index.js":"1","C:\\projects\\worksheet-creator\\src\\reportWebVitals.js":"2","C:\\projects\\worksheet-creator\\src\\App.js":"3","C:\\projects\\worksheet-creator\\src\\app-files\\add-sub.js":"4","C:\\projects\\worksheet-creator\\src\\app-files\\general.js":"5","C:\\projects\\worksheet-creator\\src\\app-files\\order-of-ops.js":"6","C:\\projects\\worksheet-creator\\src\\create-worksheet.js":"7","C:\\projects\\worksheet-creator\\src\\app-files\\algorithms.js":"8","C:\\projects\\worksheet-creator\\src\\app-files\\tables.js":"9","C:\\projects\\worksheet-creator\\src\\app-files\\add-sub-fract.js":"10","C:\\projects\\worksheet-creator\\src\\app-files\\multiply.js":"11","C:\\projects\\worksheet-creator\\src\\components\\display-user-selection.js":"12","C:\\projects\\worksheet-creator\\src\\components\\user-inputs.js":"13","C:\\projects\\worksheet-creator\\src\\components\\input.js":"14","C:\\projects\\worksheet-creator\\src\\app-files\\divide.js":"15","C:\\projects\\worksheet-creator\\src\\components\\concept-customization.js":"16"},{"size":3789,"mtime":1608475342108,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":5872,"mtime":1611536938115,"results":"20","hashOfConfig":"18"},{"size":23912,"mtime":1611712567584,"results":"21","hashOfConfig":"18"},{"size":7662,"mtime":1611805905506,"results":"22","hashOfConfig":"18"},{"size":17581,"mtime":1612066490150,"results":"23","hashOfConfig":"18"},{"size":11200,"mtime":1611500582757,"results":"24","hashOfConfig":"18"},{"size":16396,"mtime":1611452995047,"results":"25","hashOfConfig":"18"},{"size":14811,"mtime":1611620955307,"results":"26","hashOfConfig":"18"},{"size":10294,"mtime":1611500437013,"results":"27","hashOfConfig":"18"},{"size":14306,"mtime":1611500437050,"results":"28","hashOfConfig":"18"},{"size":1644,"mtime":1611367117161,"results":"29","hashOfConfig":"18"},{"size":8669,"mtime":1611500437024,"results":"30","hashOfConfig":"18"},{"size":1013,"mtime":1609477038359,"results":"31","hashOfConfig":"18"},{"size":12027,"mtime":1611500437012,"results":"32","hashOfConfig":"18"},{"size":24821,"mtime":1611716187371,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ahlkum",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":73,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\worksheet-creator\\src\\index.js",[],["74","75"],"C:\\projects\\worksheet-creator\\src\\reportWebVitals.js",[],"C:\\projects\\worksheet-creator\\src\\App.js",["76","77","78","79"],"C:\\projects\\worksheet-creator\\src\\app-files\\add-sub.js",["80","81","82","83","84","85","86"],"// import * as gen from './general.js'\r\nimport {randWhole, shuffleArray, wrongOptions, answerChoicesKey,\r\n        boyList, girlList, nameList, cityList, disasterList, sportList, candyList, forestAnimal, lakeAnimal, desertAnimal} from './general.js'\r\n\r\n\r\nexport const subWhole = (Options) => { //sport\r\n    var name = shuffleArray(nameList)\r\n    var sport = sportList[randWhole(0, sportList.length-1)]\r\n    // var f = 'format'\r\n    var [numberS, numberL] = [randWhole(100, 500), randWhole(500, 999)];\r\n\r\n    if (Options.level === \"2\") {\r\n        [numberS, numberL] = [randWhole(1000, 4000), randWhole(4001, 9999)];\r\n    \r\n    } else if (Options.level === \"3\") {\r\n        [numberS, numberL] = [randWhole(1000, 4000), randWhole(4001, 9999)];\r\n\r\n    }\r\n    var answer= (numberL - numberS);\r\n    var wrong = shuffleArray(wrongOptions(answer, 'sub', numberL, numberS))\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (`${name[0]} played ${sport} for ${numberS.toLocaleString()} minutes last year. ${name[1]} ` +\r\n    `played ${sport} for ${numberL.toLocaleString()} minutes last year. How many more minutes did `+\r\n    `${name[1]} play than ${name[0]}?`)\r\n    var prob2 = (`${name[0]} played ${sport} for ${numberS.toLocaleString()} minutes last year. ${name[1]} `+\r\n    `played ${sport} for ${numberL.toLocaleString()} minutes last year. What is the difference between ` +\r\n    `the number of minutes ${name[1]} played and the number of minutes ${name[0]} played?`)\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n    return problem\r\n\r\n}\r\nexport const addWhole = (Options) => { //sports\r\n    var name = shuffleArray(nameList)\r\n    var sport = sportList[randWhole(0, sportList.length-1)]\r\n    var [numberS, numberL] = [randWhole(100, 500), randWhole(500, 999)];\r\n\r\n    if (Options.level === \"2\") {\r\n    // [numberS, numberL] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001)];\r\n    [numberS, numberL] = [randWhole(1000, 4000), randWhole(4001, 9999)];\r\n\r\n\r\n    } else if (Options.level ===\"3\") {\r\n    [numberS, numberL] = [randWhole(1000, 4000), randWhole(4001, 9999)];\r\n    } \r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    \r\n    var problem = {text:    (`${name[0]} played ${sport} for ${(numberS).toLocaleString()} minutes last year. ${name[1]} `+\r\n                 `played ${sport} for ${(numberL).toLocaleString()} minutes last year. How many minutes did ` +\r\n                 `${name[0]} and ${name[1]} play altogether?`),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    \r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem        \r\n}\r\nexport const subWhole2 = (Options) => { //candy\r\n    var name = nameList[randWhole(0, nameList.length-1)]\r\n    var disaster = disasterList[randWhole(0, disasterList.length-1)]\r\n    var girl = shuffleArray(girlList)\r\n    var boy = shuffleArray(boyList)\r\n\r\n    var candy = shuffleArray(candyList)\r\n    var [numberS, numberM, numberL] = [randWhole(100, 500), randWhole(500, 699), randWhole(700, 999)];\r\n\r\n    if (Options === \"2\") {\r\n    [numberS, numberM, numberL] = [randWhole(1000, 4000), randWhole(4000, 7000), randWhole(7001, 9999)];\r\n\r\n    } else if (Options ===\"3\") {\r\n    [numberS, numberM, numberL] = [randWhole(1000, 4000), randWhole(4000, 7000), randWhole(7001, 9999)];\r\n    } \r\n    var answer = (numberL-numberS)\r\n    var wrong= wrongOptions(answer, 'sub', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    \r\n    var prob1 = (`In a jar there are three different types of candies. There are ${numberS.toLocaleString()} ${candy[0]} `+\r\n        `, ${numberM.toLocaleString()} ${candy[1]}, and ${numberL.toLocaleString()} ${candy[2]}. What is the difference between `+ \r\n        `the number of ${candy[0]} and the number of ${candy[2]} in the jar?`)\r\n    var prob2 = (`${name} has a basket of candies. There are ${numberS} ${candy[0]}, `+\r\n        `${numberS.toLocaleString()} ${candy[1]}, and ${numberL.toLocaleString()} ${candy[2]}. How many more `+\r\n        `${candy[2]} are in the basket than ${candy[0]} ?`)\r\n    var prob3 = (`${girl[0]} loves ${candy[0]} so much that she ate ${numberS.toLocaleString()} in the past month. `+\r\n        `This brought her total number of ${candy[0]} eaten in her life to ${numberL.toLocaleString()}. How much was `+\r\n        `her total ${candy[0]} eaten before this past month?`)\r\n    var prob4 = (`${boy[0]} is obsessed with ${candy[0]} so he decides to stock up in case of a ${disaster} coming soon.`+\r\n        `He buys ${numberL.toLocaleString()} ${candy[0]} but then on the way home he got really hungry so he ate `+\r\n        `${numberS.toLocaleString()} of the ${candy[0]}. How many ${candy[0]} does he have now?`)\r\n    var prob5 = (`${boy[0]} is obsessed with ${candy[0]} so he decides to stock up by purchasing ${numberL.toLocaleString()} in case of `+\r\n        `a ${disaster} coming soon.He decided that he had way too many and ended up giving ${numberS.toLocaleString()} of the ${candy[0]} `+\r\n        `to his friend ${boy[1]}. How many ${candy[0]} does he have left?`)\r\n    var randProb = [prob1, prob2, prob3, prob4, prob5][randWhole(0, 4)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n        console.log(problem)\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n            \r\n\r\n\r\n}\r\nexport const addWhole2 = (Options) => { //candy\r\n    var name = shuffleArray(nameList)\r\n    var girl = shuffleArray(girlList)\r\n    var boy = shuffleArray(boyList)\r\n    var disaster = disasterList[randWhole(0, disasterList.length-1)]\r\n\r\n    var candy = shuffleArray(candyList)\r\n    var [numberS, numberM, numberL] = [randWhole(100, 300), randWhole(300, 500), randWhole(500, 999)];\r\n\r\n    if (Options === \"2\") {\r\n    [numberS, numberM, numberL] = [randWhole(1000, 3000), randWhole(3000, 5000), randWhole(5001, 9999)];\r\n\r\n    } else if (Options ===\"3\") {\r\n    [numberS, numberM, numberL] = [randWhole(1000, 3000), randWhole(3000, 5000), randWhole(5001, 9999)];\r\n    } \r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (`There are three different types of candies in a jar. There are ${numberS.toLocaleString()} ${candy[0]}`+\r\n    `, ${numberM.toLocaleString()} ${candy[1]}, and ${numberL.toLocaleString()} ${candy[2]}. How many total ${candy[0]} and ${candy[2]} are in the jar?`)\r\n    var prob2 = (`${name[0]} has a jar with three different types of candies inside. There are ${numberS.toLocaleString()} `+\r\n    `${candy[0]},  ${numberM.toLocaleString()} ${candy[1]}, and ${numberL.toLocaleString()} ${candy[2]}. `+\r\n    ` How many ${candy[2]} and ${candy[1]} are in the jar altogether?`)\r\n    var prob3 = (`${girl[0]} loves ${candy[0]} so much that she has already eaten ${numberL.toLocaleString()} in her life. `+\r\n    `If she eats ${numberS.toLocaleString()} more by the end of the year, how many total ${candy[0]} will she have eaten?`)\r\n    var prob4 = (`${boy[0]} is obsessed with ${candy[0]} so he already has ${numberS.toLocaleString()} in his pantry at home. `+\r\n    `He begins to worry about a ${disaster} coming soon, so he decides`+\r\n    `to stock up by purchasing ${numberL.toLocaleString()} ${candy[0]} just in case. How many ${candy[0]} does he have now?`)\r\n    var randProb = [prob1, prob2, prob3, prob4][randWhole(0,3)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem        \r\n}\r\n\r\nexport const subWhole3 = (Options) => { //animals\r\n    var randForestAnimal = shuffleArray(forestAnimal)\r\n    var randDesertAnimal = shuffleArray(desertAnimal)\r\n    var randLakeAnimal = shuffleArray(lakeAnimal)\r\n    var randAnimal = shuffleArray([randDesertAnimal, randForestAnimal, randLakeAnimal])\r\n    var [numberS, numberL] = [randWhole(100, 500), randWhole(500, 999)];\r\n    var place\r\n    if (randAnimal[0] === randDesertAnimal) {\r\n        place = 'desert'\r\n    }else if (randAnimal[0] === randForestAnimal) {\r\n        place = 'forest'\r\n    }else if (randAnimal[0] === randLakeAnimal) {\r\n        place = 'lake'\r\n    }\r\n    if (Options === \"2\") {\r\n    [numberS, numberL] = [randWhole(1000, 4000), randWhole(4001, 9999)];\r\n\r\n    } else if (Options ===\"3\") {\r\n    [numberS, numberL] = [randWhole(1000, 4000), randWhole(4001, 9999)];\r\n    } \r\n    var answer = (numberL-numberS)\r\n    var wrong= wrongOptions(answer, 'sub', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (`There are ${numberL.toLocaleString()} ${randAnimal[0][0]}s and ${randAnimal[0][1]}s in the `+\r\n        `${place}. If there are ${numberS.toLocaleString()} ${randAnimal[0][0]}s in the ${place}, `+\r\n        `how many ${randAnimal[0][1]}s are in the ${place}?`)\r\n    var prob2 = (`In the ${place} there are ${numberS.toLocaleString()} ${randAnimal[0][1]}s and `+\r\n        `${numberL.toLocaleString()} ${randAnimal[0][0]}s. What is the difference beween the number of `+\r\n        `${randAnimal[0][0]}s and ${randAnimal[0][1]}s in the ${place}?`)\r\n    var prob3 = (`Researchers are surveying the ${place}. They found a total of ${numberL.toLocaleString()} `+ \r\n        `${randAnimal[0][1]}s, and a total of ${numberS.toLocaleString()} ${randAnimal[0][0]}s. How many more `+\r\n        `${randAnimal[0][1]}s are there in the ${place} than ${randAnimal[0][0]}s?`)\r\n    var randProb = [prob1, prob2, prob3][Math.floor(Math.random()*2)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n\r\n            \r\n}\r\nexport const addWhole3 = (Options) => { //animals\r\n    var randForestAnimal = shuffleArray(forestAnimal)\r\n    var randDesertAnimal = shuffleArray(desertAnimal)\r\n    var randLakeAnimal = shuffleArray(lakeAnimal)\r\n    var randAnimal = shuffleArray([randDesertAnimal, randForestAnimal, randLakeAnimal])\r\n    var [numberS, numberL] = [randWhole(100, 500), randWhole(500, 999)];\r\n    var place\r\n    if (randAnimal[0] === randDesertAnimal) {\r\n        place = 'desert'\r\n    }else if (randAnimal[0] === randForestAnimal) {\r\n        place = 'forest'\r\n    }else if (randAnimal[0] === randLakeAnimal) {\r\n        place = 'lake'\r\n    }\r\n    if (Options === \"2\") {\r\n        [numberS, numberL] = [randWhole(1000, 4000), randWhole(4001, 9999)];\r\n\r\n    } else if (Options ===\"3\") {\r\n        [numberS, numberL] = [randWhole(1000, 4000), randWhole(4001, 9999)];\r\n    } \r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (`There are ${numberL.toLocaleString()} ${randAnimal[0][0]}s in the ${place}. If there are ${numberS.toLocaleString()} ${randAnimal[0][1]}s `+\r\n        `in the ${place} , how many total ${randAnimal[0][0]}s and ${randAnimal[0][1]} are in the ${place}?`)\r\n    var prob2 = (`In the ${place} there are ${numberS.toLocaleString()} ${randAnimal[0][1]}s and ${numberL.toLocaleString()} ${randAnimal[0][0]}s. `+ \r\n        `How many ${randAnimal[0][0]}s and ${randAnimal[0][1]}s are in the ${place} combined?`)\r\n    var prob3 = (`Researchers are surveying the ${place}. They found a total of ${numberL.toLocaleString()} `+\r\n        `${randAnimal[0][1]}s, and a total of ${numberS.toLocaleString()} ${randAnimal[0][0]}s. How many animals did the researchers `+\r\n        `find at the ${place} combined?`)\r\n    var randProb = [prob1, prob2, prob3][randWhole(0,2)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n\r\n            \r\n}\r\n\r\n\r\nexport const addWhole4 = (Options) => { //youtube\r\n    var boy = shuffleArray(boyList)\r\n    var girl = shuffleArray(girlList)\r\n    var [numberS, numberM, numberL] = [randWhole(10000, 30000), randWhole(30000, 50000), randWhole(50000, 99900)];\r\n\r\n    if (Options === \"2\") {\r\n    [numberS, numberM, numberL] = [randWhole(100000, 300000), randWhole(300000, 500000), randWhole(500100, 999900)];\r\n\r\n    } else if (Options ===\"3\") {\r\n    [numberS, numberM, numberL] = [randWhole(1000000, 3000000), randWhole(3000000, 5000000), randWhole(5001000, 9999000)];\r\n    } \r\n    var videoAdj = ['hilarious', 'funny', 'silly', 'popular', 'viral'][randWhole(0,4)]\r\n    var videoTopic = ['dog', 'fashion', 'cat', 'music', 'tutorial', 'cooking' ][randWhole(0,6)]\r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (`${boy[0]} had ${numberL.toLocaleString()} subscribers on his youtube channel as of last month. This month so far he has gained `+\r\n                `${numberS.toLocaleString()} subscribers after making a ${videoAdj} video. How many subscribers does his channel have?`)\r\n    var prob2 = (`${girl[0]} had ${numberL.toLocaleString()} subscribers on her youtube channel as of last month. This month her subscriber count has increased by `+\r\n                `${numberS.toLocaleString()} after she made a very popular ${videoTopic} video. How many subscribers does her channel have now?`)\r\n    var prob3 = (`${boy[0]} got ${numberL.toLocaleString()} views on his latest ${videoTopic} video. His previous video got ${numberS.toLocaleString()} views. How `+\r\n                `many combined views did the two videos get?`)\r\n    var prob4 = (`${girl[0]} currently has ${numberS.toLocaleString()} subscribers on her channel. Her goal is to reach ${numberL.toLocaleString()} subscribers by `+\r\n                `the end of the year. How many more subscribers will she need to get in order to reach her goal?`)\r\n    var randProb = [prob1, prob2, prob3, prob4][randWhole(0,3)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem        \r\n}\r\n\r\nexport const subWhole4 = (Options) => { //youtube\r\n    var name = nameList[randWhole(0, nameList.length-1)]\r\n    var boy = shuffleArray(boyList)\r\n    var girl = shuffleArray(girlList)\r\n    var [numberS, numberM, numberL] = [randWhole(10000, 30000), randWhole(30000, 50000), randWhole(50000, 99900)];\r\n\r\n    if (Options === \"2\") {\r\n    [numberS, numberM, numberL] = [randWhole(10000, 300000), randWhole(300000, 500000), randWhole(500100, 999900)];\r\n\r\n    } else if (Options ===\"3\") {\r\n    [numberS, numberM, numberL] = [randWhole(1000000, 3000000), randWhole(3000000, 5000000), randWhole(5001000, 9999000)];\r\n    } \r\n    var reason = [`hasn't been making new videos`, `hasn't been actively making videos`, \r\n                `has been inactive recently`, `made a video that the subscribers did not like`][randWhole(0,3)]\r\n    var answer = (numberL-numberS)\r\n    var wrong= wrongOptions(answer, 'sub', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (`${boy[0]} had ${numberL.toLocaleString()} subscribers on his youtube channel as of last month. This month so far he has lost `+\r\n                `${numberS.toLocaleString()} subscribers because he ${reason}. How many subscribers does his channel have now?`)\r\n    var prob2 = (`${girl[0]} had ${numberL.toLocaleString()} subscribers on her youtube channel as of last month. This month she has lost `+\r\n                `${numberS.toLocaleString()} subscribers because she ${reason}. How many subscribers does her channel have?`)\r\n    var prob3 = (`${boy[0]} got ${numberL.toLocaleString()} views on his latest video. His previous video got ${numberS.toLocaleString()} views. How `+\r\n                `many more views did his latest video get than his previous video?`)\r\n    var prob4 = (`${girl[0]} got ${numberS.toLocaleString()} views on her latest video. Her other video went viral last week and got ${numberL.toLocaleString()} views. How `+\r\n                `many more views did her viral video get than her latest video?`)\r\n    var randProb = [prob1, prob2, prob3, prob4][randWhole(0,3)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem        \r\n}\r\nexport const addWhole5 = (Options) => { //population\r\n    // var name = nameList[randWhole(0, nameList.length-1)]\r\n    var city = shuffleArray(cityList)\r\n    var [numberS, numberM, numberL] = [randWhole(10000, 30000), city[1].pop, city[0].pop];\r\n    if (Options === \"2\") {\r\n        [numberS, numberM, numberL] = [randWhole(100000, 300000), randWhole(300000, 500000), city[0].pop];\r\n    \r\n        }\r\n    var year = randWhole(2015,2019)\r\n    var answer = (numberL+numberS)\r\n    var wrong= wrongOptions(answer, 'add', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (`${city[0].city} had a population of ${numberL.toLocaleString()} as of the end of the year ${year}. Since `+\r\n                `then the city has increased in population by ${numberS.toLocaleString()}. What is the current population of ${city[0].city}?`)\r\n    var prob2 = (`The population of ${city[0].city} has increased by ${numberS.toLocaleString()} since the end of the year ${year}. `+\r\n                `the population before then was ${numberL.toLocaleString()}. What is the new population of ${city[0].city}?`)\r\n    var prob3 = (`Since the beginning of the year ${year} the population of ${city[0].city} has increased by ${numberS.toLocaleString()}. `+\r\n                `If the population started off ${year} at ${numberL.toLocaleString()}, how much is the current population?`)\r\n    var randProb = [prob1, prob2, prob3][randWhole(0,2)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem        \r\n}\r\n\r\nexport const subWhole5 = (Options) => { //population\r\n    // var name = nameList[randWhole(0, nameList.length-1)]\r\n    var city = shuffleArray(cityList)\r\n    var [numberS, numberM, numberL] = [randWhole(10000, 30000), city[1].pop, city[0].pop];\r\n    if (Options === \"2\") {\r\n        [numberS, numberM, numberL] = [randWhole(100000, 300000), randWhole(300000, 500000), city[0].pop];\r\n    \r\n        }\r\n    var year = randWhole(2015,2019)\r\n    var answer = (numberL-numberS)\r\n    var wrong= wrongOptions(answer, 'sub', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (`${city[0].city} had a population of ${numberL.toLocaleString()} as of the end of the year ${year}. Since `+\r\n                `then the city has decreased in population by ${numberS.toLocaleString()}. What is the current population of ${city[0].city}?`)\r\n    var prob2 = (`The population of ${city[0].city} has decreased by ${numberS.toLocaleString()} since the end of the year ${year}. `+\r\n                `the population before then was ${numberL.toLocaleString()}. What is the new population of ${city[0].city}`)\r\n    var prob3 = (`Since the beginning of the year ${year} the population of ${city[0].city} has decreased by ${numberS.toLocaleString()}. `+\r\n                `If the population started off ${year} at ${numberL.toLocaleString()}, how much is the current population?`)\r\n    var randProb = [prob1, prob2, prob3][randWhole(0,2)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem        \r\n}\r\n\r\nexport const subWhole6 = (Options) => { //space distances, elves army of goblins invades, \r\n    // var name = nameList[randWhole(0, nameList.length-1)]\r\n    var city = shuffleArray(cityList)\r\n    var [numberS, numberM, numberL] = [randWhole(10000, 30000), city[1].pop, city[0].pop];\r\n    if (Options === \"2\") {\r\n        [numberS, numberM, numberL] = [randWhole(100000, 300000), city[1].pop, city[0].pop];\r\n    \r\n        }\r\n    var year = randWhole(2015,2019)\r\n    var answer = (numberL-numberS)\r\n    var wrong= wrongOptions(answer, 'sub', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = (``)\r\n    var prob2 = (``)\r\n    var prob3 = (``)\r\n    var randProb = [prob1, prob2, prob3][randWhole(0,2)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer}\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem        \r\n}\r\n\r\n//Problem ideas: space distance? elves army of goblins, factory producing products, movies making money, tourists that visit a city/country, city = smaller numbers, country = larger. \r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const addDec = (Options) => { //sport\r\n    var name = nameList[randWhole(0, nameList.length-1)]\r\n    var sport = sportList[randWhole(0, sportList.length-1)]\r\n    var [numberS, numberL] = [(Math.random()*49999+10011).toFixed(1),  (Math.random()*999999+500011).toFixed(2)];\r\n    // var f = 'format'\r\n    var answer= (numberL + numberS);\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS)\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    // var wrong = gen.shuffleArray(gen.wrongOptions(answer, 'add', numberL, numberS))\r\n    // var tempAC = [answer, wrong[0], wrong[1], wrong[2]]\r\n    // var AC = gen.shuffleArray(tempAC)\r\n    var problem = { text: (`${name[0]} played ${sport} for ${(numberS).toString()} minutes last year. ${name[1]} `+\r\n                `played ${sport} for${(numberL).toString()} minutes last year. How many minutes did `+\r\n                `${name[0]} and ${name[1]} play altogether?`),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n\r\n    // console.log(problem)\r\n    return problem\r\n    \r\n}\r\n\r\nexport const subDec = (Options) => { //sport\r\n    var name = nameList[randWhole(0, nameList.length-1)]\r\n    var sport = sportList[randWhole(0, sportList.length-1)]\r\n    // var f = 'format'\r\n    var [numberS, numberL] = [(Math.random()*49999+10011).toFixed(1),  (Math.random()*999999+500011).toFixed(2)];\r\n\r\n    var answer= (numberL - numberS);\r\n    var wrong = shuffleArray(wrongOptions(answer, 'sub', numberL, numberS))\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var sub1 = (`${name[0]} played ${sport} for ${(numberS).toString()} minutes last year. ${name[1]} `+\r\n    `played ${sport} for ${(numberL).toString()} minutes last month. How many more minutes did `+\r\n     `${name[1]} play than ${name[0]}?`)\r\n    var sub2 = (`${name[0]} played ${sport} for ${(numberS).toString()} minutes last year. ${name[1]} `+\r\n     `played ${sport} for ${(numberL).toString()} minutes last month. What is the difference between `+\r\n    `the number of minutes ${name[1]} played and the number of minutes ${name[0]} played?`)\r\n\r\n    var randSub = [sub1, sub2][Math.floor(Math.random())]\r\n    var problem = {text: randSub,\r\n                answerChoices: AC,\r\n                correctAnswer: answer}\r\n    return problem\r\n}\r\nexport const randAddWhole = (options) => {\r\n    var probArray = [addWhole, addWhole2, addWhole3, addWhole4, addWhole5]\r\n    if (options.specify === '3by1' || '4by1') {\r\n        probArray.push()\r\n    } //else if (options.specify === '2by2') {\r\n\r\n    // } else {//3by2\r\n\r\n    // }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(options)\r\n}\r\nexport const randSubWhole = (options) => {\r\n    var probArray = [subWhole, subWhole2, subWhole3, subWhole4, subWhole5, subWhole6]\r\n    if (options.specify === '3by1' || '4by1') {\r\n        probArray.push()\r\n    } //else if (options.specify === '2by2') {\r\n\r\n    // } else {//3by2\r\n\r\n    // }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(options)\r\n}","C:\\projects\\worksheet-creator\\src\\app-files\\general.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"C:\\projects\\worksheet-creator\\src\\app-files\\order-of-ops.js",["116","117","118"],"C:\\projects\\worksheet-creator\\src\\create-worksheet.js",["119","120","121","122","123","124","125","126"],"C:\\projects\\worksheet-creator\\src\\app-files\\algorithms.js",["127","128","129","130","131","132","133","134"],"import {randWhole, randDec, roundDec, shuffleArray, wrongOptions, answerChoicesKey} from './general.js'\r\nimport {\r\n    Page,\r\n    Text,\r\n    View,\r\n    Image,\r\n    Document,\r\n    StyleSheet,\r\n    Font,\r\n  \r\n    // PDFViewer,\r\n    // ReactPDF,\r\n    PDFDownloadLink,\r\n  } from \"@react-pdf/renderer\";\r\n  const styles = StyleSheet.create({\r\n    top: {\r\n      marginBottom:10,\r\n      fontSize: 12,\r\n      textAlign: 'justify',\r\n      // fontFamily: 'arial'\r\n    },\r\n    probContainer: {\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        // fontFamily: 'arial'\r\n      },\r\n    bottom: {\r\n        marginBottom:10,\r\n        fontSize: 12,\r\n        textAlign: 'justify',\r\n        // fontFamily: 'arial'\r\n      },\r\n\r\n  });\r\nexport const divideDec = (options) => {\r\n    var answer = randDec(1, 9, 2)\r\n    var divisor = randWhole(2, 11)\r\n    var dividend = roundDec(answer*divisor, 2)\r\n\r\n    if (options.level === \"2\") {\r\n    // [numberS, numberL] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001)];\r\n    answer = randDec(1, 9, 2)\r\n    divisor = randWhole(2, 11)\r\n    dividend = roundDec(answer*divisor, 2)\r\n\r\n    } else if (options.level ===\"3\") {\r\n        answer = randDec(1, 9, 2)\r\n        divisor = randWhole(12, 50)\r\n        dividend = roundDec(answer*divisor, 2)\r\n    } \r\n    var wrong= wrongOptions(answer, 'decimal', dividend, divisor)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text:    (`${dividend} ÷ ${divisor} = `),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n}\r\nexport const multDec = (options) => {\r\n    if (options.specify === 'Decimal x Whole Number') {\r\n        var numArray = [\r\n            [randWhole(2, 9), randDec(0.1, 0.9, randWhole(1,2))],\r\n            [randWhole(2, 9), randDec(1, 9, randWhole(1,2))],\r\n            [randWhole(2, 9), randDec(10,99, 1)],\r\n        ]\r\n\r\n    } else if (options.specify === '3 by 1 digit') {\r\n        var randDecimal = [randDec(10, 99, 1), randDec(2,9,2), randDec(0.2, 0.999, 3)][randWhole(0,2)]\r\n        numArray = [\r\n            [randWhole(2, 9), randDecimal],\r\n            [randDec(0.2, 0.9, 1), randDecimal],\r\n            [randDec(0.2, 0.9, 1), randDecimal],\r\n            [randDec(0.2, 0.9, 1), randWhole(100,999) ],\r\n            [randDec(0.02, 0.09, 2), randDecimal],\r\n            [randDec(0.02, 0.09, 2), randDecimal],\r\n            [randDec(0.02, 0.09, 2), randWhole(100,999) ],\r\n        ]\r\n\r\n    } else if (options.specify === '4 by 1 digit') {\r\n        randDecimal = [randDec(100, 999, 1), randDec(20,99,2), randDec(2, 9, 3), randDec(0.2, 0.9999, 4)][randWhole(0,3)]\r\n        numArray = [\r\n            [randWhole(2, 9), randDecimal],\r\n            [randDec(0.2,0.9, 1), randWhole(1000,9999)],\r\n            [randDec(0.2,0.9,1), randDecimal],\r\n            [randDec(0.02,0.09,2), randDecimal],\r\n            [randDec(0.02,0.09,2), randWhole(1000,9999)],\r\n\r\n\r\n        ]\r\n    } else if (options.specify === '2 by 2 digit') {\r\n        randDecimal = [randDec(1, 9, 1), randDec(0.2,0.99,2)][randWhole(0,1)]\r\n        randDecimal2 = [randDec(1, 9, 1), randDec(0.2,0.99,2)][randWhole(0,1)]\r\n\r\n        numArray = [\r\n            [randWhole(11, 99), randDecimal],\r\n            [randDecimal, randDecimal2],\r\n            [randDec(1, 9, 1), randDec(0.2,0.99,2)],\r\n\r\n        ]\r\n    } else if (options.specify === '3 by 2 digit') {\r\n        var randDecimal3 = [randDec(10, 99, 1), randDec(2,9,2), randDec(0.2, 0.999, 3)][randWhole(0,2)]\r\n        var randDecimal2 = [randDec(1, 9, 1), randDec(0.2,0.99,2)][randWhole(0,1)]\r\n        numArray = [\r\n            [randWhole(11, 99), randDecimal3],\r\n            [randDecimal2, randWhole(100,999)],\r\n            [randDecimal2, randDecimal3],\r\n            [randDecimal2, randDecimal3],\r\n            [randDecimal2, randDecimal3],\r\n\r\n        ]\r\n    }\r\n    var num = shuffleArray(numArray)\r\n    var numberS = num[0][0]\r\n    var numberL = num[0][1]\r\n    var answer = numberL*numberS\r\n    if (options.probStyle === 'Vertical') {\r\n        var prob = `${numberL} × ${numberS} = `\r\n    } else {\r\n        prob = <View style={styles.probContainer}>\r\n            {/* <View style={styles.top}>{`    ${numberL}`}</View>\r\n            <View style={styles.bottom}>{`× ${numberS}`}</View> */}\r\n            <Text style={styles.top}>{`    ${numberL}`}</Text>\r\n            <Text style={styles.bottom}>{`× ${numberS}`}</Text>\r\n        </View>\r\n    }\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    // var order = (numberS, numberL)\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n}\r\nexport const multDec2 = (options) => {\r\n    var pv = randWhole(1, 2)\r\n    var numberS = randDec(1, 9, pv)\r\n    var numberL = randDec(0, 1, pv)\r\n    var answer = roundDec(numberS*numberL, 2)\r\n\r\n    if (options.level === \"2\") {\r\n    // [numberS, numberL] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001)];\r\n    numberS = randDec(1, 9, pv)\r\n    numberL = randDec(11, 99, pv)\r\n    answer = roundDec(numberS*numberL, 2)\r\n\r\n    } else if (options.level ===\"3\") {\r\n        numberS = randDec(1, 9, pv)\r\n        numberL = randDec(13, 99, pv)\r\n        answer = roundDec(numberS*numberL, 2)\r\n    } \r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    // var order = (numberS, numberL)\r\n    var problem = {text:    (`${numberS} × ${numberL} = `),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n}\r\nexport const randMultDec = (options) => {\r\n    var probArray = [multDec]\r\n    if (options.specify === '3by1' || '4by1') {\r\n        probArray.push()\r\n    } //else if (options.specify === '2by2') {\r\n\r\n    // } else {//3by2\r\n\r\n    // }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(options)\r\n}\r\n\r\nexport const divideDec2 = (options) => {\r\n    var answer = randDec(0, 1, 3)\r\n    var divisor = randWhole(2, 11)\r\n    var dividend = (answer*divisor).toFixed(3)\r\n\r\n    if (options.level === \"2\") {\r\n    // [numberS, numberL] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001)];\r\n    answer = randDec(1, 9, 3)\r\n    divisor = randWhole(2, 11)\r\n    dividend = (answer*divisor).toFixed(3)\r\n\r\n    } else if (options.level ===\"3\") {\r\n        answer = randDec(1, 9, 3)\r\n        divisor = randWhole(12, 50)\r\n        dividend = (answer*divisor).toFixed(3)\r\n    } \r\n    var wrong= wrongOptions(answer, 'decimal', dividend, divisor)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text:    (`${dividend} ÷ ${divisor} = `),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n}\r\nexport const divideDec3 = (options) => {\r\n    var answer = randDec(10, 90, 1)\r\n    var divisor = randWhole(2, 11)\r\n    var dividend = (answer*divisor).toFixed(1)\r\n\r\n    if (options.level === \"2\") {\r\n    // [numberS, numberL] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001)];\r\n    answer = randDec(100, 900, 1)\r\n    divisor = randWhole(2, 11)\r\n    dividend = (answer*divisor).toFixed(1)\r\n\r\n    } else if (options.level ===\"3\") {\r\n        answer = randDec(100, 900, 1)\r\n        divisor = randWhole(12, 50)\r\n        dividend = (answer*divisor).toFixed(1)\r\n    } \r\n    var wrong= wrongOptions(answer, 'decimal', dividend, divisor)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text:    (`${dividend} ÷ ${divisor} = `),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n    }\r\nexport const randDivDec = (options) => {\r\n    var probArray = [divideDec, divideDec2, divideDec3]\r\n    if (options.specify === '3by1' || '4by1') {\r\n        probArray.push()\r\n    } //else if (options.specify === '2by2') {\r\n\r\n    // } else {//3by2\r\n\r\n    // }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(options)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const divideDecOLD = (options) => {\r\n    var [dec1, dec2, dec3] = [randDec(1, 9, 2), randDec(0, 1, 3), randDec (10, 90, 1)]\r\n    var x\r\n    // var shuffleDecimals = shuffleArray([randDec(1, 9, 2), randDec(0, 1, 3), randDec (10, 90, 1)])\r\n    var shuffleDecimals = shuffleArray([dec1, dec2, dec3])\r\n    if (shuffleDecimals[0] === dec1){\r\n        x = 2\r\n    } else if (shuffleDecimals[1] === dec2) {\r\n        x = 3\r\n    } else {\r\n        x = 1\r\n    }\r\n    var answer = shuffleDecimals[0] \r\n    var divisor = randWhole(2, 11)\r\n    var dividend = (answer*divisor).toFixed(x)\r\n\r\n    if (options === \"2\") {\r\n    // [numberS, numberL] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001)];\r\n    shuffleDecimals = shuffleArray([randDec(10, 90, 2), randDec(1, 9, 3), randDec (100, 900, 1)])\r\n    answer = shuffleDecimals[0]\r\n    divisor = randWhole(2, 11)\r\n    dividend = (answer*divisor).toFixed(x)\r\n\r\n    } else if (options ===\"3\") {\r\n        shuffleDecimals = shuffleArray([randDec(10, 90, 2), randDec(1, 9, 3), randDec (100, 900, 1)])\r\n        answer = shuffleDecimals[0]\r\n        divisor = randWhole(12, 50)\r\n        dividend = (answer*divisor).toFixed(x)\r\n    } \r\n    var wrong= wrongOptions(answer, 'decimal', dividend, divisor)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text:    (`${dividend} ÷ ${divisor} = `),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n    }\r\n\r\n\r\n\r\n\r\nexport const addDecPV = (options) => {\r\n    var xArray = shuffleArray([1, 2, 3])\r\n    var[x, y] = [xArray[0], xArray[1]]\r\n    if (x>y) {\r\n        var w = x\r\n    } else {\r\n        w = y\r\n    }\r\n    var combo = [{numberS:randDec(1, 5, x), numberL: randDec(5, 9, y)},\r\n                {numberS:randDec(1, 9, x), numberL: randDec(50, 90, y)},\r\n                ]\r\n\r\n    if (options.level === \"2\") {\r\n        combo = [{numberS:randDec(1, 9, x), numberL: randDec(50, 90, y)},\r\n                {numberS:randDec(10, 90, x), numberL: randDec(90, 300, y)}]\r\n\r\n    } else if (options.level ===\"3\") {\r\n        combo = [{numberS:randDec(100, 499, x), numberL: randDec(500, 900, y)},\r\n                {numberS:randDec(10, 499, x), numberL: randDec(500, 900, y)},\r\n                {numberS:randDec(11, 99, x), numberL: randDec(100,900, y)}]\r\n    } \r\n    var randNums = combo[randWhole(0, combo.length-1)]\r\n\r\n    var numberS = Number(randNums.numberS)\r\n    var numberL = Number(randNums.numberL)\r\n    var answer = roundDec(numberL+numberS, w)\r\n    // console.log(numberL+numberS)\r\n    // console.log(answer)\r\n    var wrong= wrongOptions(answer, 'decimal', numberS, numberL)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text:    (`${numberL} + ${numberS} = `),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n}\r\n\r\nexport const addDecWhole = (options) => {\r\n    var xArray = shuffleArray([1, 2, 3])\r\n    var x = xArray[0]\r\n\r\n    var combo = [{numberS:randDec(1, 5, x), numberL: randWhole(6,20)},\r\n                {numberS:randWhole(1, 9), numberL: randDec(9,15, x)},\r\n                ]\r\n\r\n    if (options.level === \"2\") {\r\n        combo = [{numberS:randDec(1, 9, x), numberL: randWhole(50,90)},\r\n                {numberS:randWhole(10, 90), numberL: randDec(90,300, x)}]\r\n\r\n    } else if (options.level ===\"3\") {\r\n        combo = [{numberS:randWhole(100, 499), numberL: randDec(500, 900, x)},\r\n                {numberS:randDec(10, 499, x), numberL: randWhole(500, 900)},\r\n                {numberS:randDec(11, 99, x), numberL: randWhole(100,900)}]\r\n    } \r\n    var randNums = combo[randWhole(0, combo.length-1)]\r\n    var numberS = Number(randNums.numberS)\r\n    var numberL = Number(randNums.numberL)\r\n    var answer = roundDec(numberL+numberS, x)\r\n    var wrong= wrongOptions(answer, 'decimal', numberS, numberL)\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text:    (`${numberL} + ${numberS} = `),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n}\r\n\r\nexport const randAddDec = (options) => {\r\n    var probArray = [addDecWhole, addDecPV]\r\n    if (options.specify === '3by1' || '4by1') {\r\n        probArray.push()\r\n    } //else if (options.specify === '2by2') {\r\n\r\n    // } else {//3by2\r\n\r\n    // }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(options)\r\n}\r\n\r\nexport const subDecWhole = (options) => {\r\n    var xArray = shuffleArray([1, 2, 3])\r\n    var x = xArray[0]\r\n\r\n    var combo = [{numberS:randDec(1, 5, x), numberL: randWhole(6,20)},\r\n                    {numberS:randWhole(1, 9), numberL: randDec(10,15, x)},\r\n                ]\r\n\r\n    if (options.level === \"2\") {\r\n        combo = [{numberS:randDec(1, 9, x), numberL: randWhole(50,90)},\r\n            {numberS:randWhole(10, 90), numberL: randDec(91,300, x)}]\r\n\r\n    } else if (options.level ===\"3\") {\r\n        combo = [{numberS:randWhole(100, 499), numberL: randDec(500, 900, x)},\r\n            {numberS:randDec(10, 499, x), numberL: randWhole(500, 900)},\r\n            {numberS:randDec(11, 99, x), numberL: randWhole(100,900)}]\r\n    } \r\n    var randNums = combo[randWhole(0, combo.length-1)]\r\n    var numberS = randNums.numberS\r\n    var numberL = randNums.numberL\r\n    var answer = roundDec(numberL-numberS, x)\r\n    var wrong= wrongOptions(answer, 'decimal', numberS, numberL)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text:    (`${numberL} - ${numberS} = `),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n}\r\nexport const subDecPV = (options) => {\r\n    var xArray = shuffleArray([1, 2, 3])\r\n    var[x, y] = [xArray[0], xArray[1]]\r\n    if (x>y) {\r\n        var w = x\r\n    } else {\r\n        var w = y\r\n    }\r\n    var combo = [{numberS:randDec(1, 5, x), numberL: randDec(6, 11, y)},\r\n                    {numberS:randDec(1, 9, x), numberL: randDec(50,90, y)},\r\n                ]\r\n\r\n    if (options.level === \"2\") {\r\n        combo = [{numberS:randDec(1, 9, x), numberL: randDec(50,90, y)},\r\n            {numberS:randDec(10, 90, x), numberL: randDec(91,300, y)}]\r\n\r\n    } else if (options.level ===\"3\") {\r\n        combo = [{numberS:randDec(100, 499, x), numberL: randDec(500, 900, y)},\r\n            {numberS:randDec(10, 499, x), numberL: randDec(500, 900, y)},\r\n            {numberS:randDec(11, 99, x), numberL: randDec(100,900, y)}]\r\n    } \r\n    var randNums = combo[randWhole(0, combo.length-1)]\r\n    var numberS = Number(randNums.numberS)\r\n    var numberL = Number(randNums.numberL)\r\n    var answer = roundDec(numberL-numberS, w)\r\n    var wrong= wrongOptions(answer, 'decimal', numberS, numberL)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text:    (`${numberL} - ${numberS} = `),\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n}\r\n\r\nexport const randSubDec = (options) => {\r\n    var probArray = [subDecPV, subDecWhole]\r\n    if (options.specify === '3by1' || '4by1') {\r\n        probArray.push()\r\n    } //else if (options.specify === '2by2') {\r\n\r\n    // } else {//3by2\r\n\r\n    // }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(options)\r\n}\r\n","C:\\projects\\worksheet-creator\\src\\app-files\\tables.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"C:\\projects\\worksheet-creator\\src\\app-files\\add-sub-fract.js",["208","209","210","211","212","213","214","215","216","217","218","219","220","221"],"import {Fraction} from 'fraction.js'\r\nimport {randWhole, cap} from './general.js'\r\nimport './problems.css';\r\nimport {Table, sanitize_block} from './tables.js'\r\nimport {Text,View,StyleSheet,} from \"@react-pdf/renderer\";\r\n  const { create, all } = require('mathjs')\r\n  const styles = StyleSheet.create({\r\n    verticalFractionContainer: {\r\n        display:'flex',\r\n        flexDirection:'column',\r\n    },\r\n    fractionProblemContainer: {\r\n        // margin:'0px 0px 0px 150px',\r\n        marginLeft: '45px',\r\n        width:'50px',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        flexDirection:'row',\r\n        alignItems:'center',\r\n        // borderBottom: 2,\r\n    },\r\n    problemLine: {\r\n        borderBottom:0.5,\r\n        width: '50px',\r\n        flexDirection: 'row',\r\n        alignItems:'center',\r\n\r\n    },\r\n    horizontalFractionContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'left',\r\n        alignItems: 'center',\r\n    },\r\n    fraction: {\r\n        paddingRight: '0px',\r\n        marginLeft:'10px',\r\n        width:'30px',\r\n\r\n    }\r\n  });\r\nconst fractionNumbers = () => {\r\n      var numerator1 = randWhole(1,8)\r\n      var denominator1 = randWhole(numerator1+1,10)\r\n      if (denominator1 > 6) {\r\n          var topRange = randWhole(2,5)\r\n          var numerator2 = randWhole(1, topRange)\r\n          var denominator2 = randWhole(numerator2+1, topRange+1)\r\n      }else {\r\n        topRange = randWhole(2,10)\r\n        numerator2 = randWhole(1, topRange)\r\n        denominator2 = randWhole(numerator2+1, topRange+1)\r\n      }\r\n      console.log(numerator1)\r\n    return [numerator1, denominator1, numerator2, denominator2]      \r\n  }\r\nconst verticalFractions = (fract1, fract2, op) => {\r\n    return (\r\n        <View style={styles.fractionProblemContainer}>\r\n            <View style={styles.problemLine}>\r\n                <View>\r\n                    {op}\r\n                </View>\r\n                <View style= {styles.verticalFractionContainer}>\r\n                    {fract1}\r\n                    {fract2}\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\nconst horizontalFractions = (fract1, fract2, op) => {\r\n    return (\r\n            <View style= {styles.horizontalFractionContainer}>\r\n                    <View style= {styles.fraction}>\r\n                        {fract1}\r\n                    </View>\r\n                    <View>\r\n                        {op}\r\n                    </View>\r\n                    <View style= {styles.fraction}>\r\n                        {fract2}\r\n                    </View>\r\n                <Text>\r\n                    = ________\r\n                </Text>\r\n            </View>\r\n    )\r\n}\r\nconst config = {\r\n    // Default type of number\r\n    // Available options: 'number' (default), 'BigNumber', or 'Fraction'\r\n    number: 'Fraction'\r\n  }\r\n\r\n  const tstyles = StyleSheet.create({\r\n    table: {\r\n        display: \"table\",\r\n         width: \"10px\",\r\n         textAlign:'center',\r\n    },\r\n    row: {\r\n        flexDirection: \"row\",\r\n    },\r\n    cell: {\r\n        // padding: '3px'\r\n      },\r\n    header: {\r\n      backgroundColor: 'grey'\r\n    }\r\n  });\r\n\r\n  const cell_style_fraction = (row_index, col_index) => {\r\n    const borderLeftWidth =  0\r\n    const borderTopWidth = (row_index === 0) ? 0 : 1\r\n    const borderRightWidth = 0\r\n    const borderBottomWidth = 0\r\n    const backgroundColor = 'white'\r\n    if (col_index > 0) {\r\n\r\n    }\r\n  \r\n    return {\r\n        // fontFamily: 'Arial', \r\n        width: '20px',\r\n        borderLeftWidth, borderRightWidth,\r\n        borderTopWidth, borderBottomWidth,\r\n        borderStyle: \"solid\",\r\n        backgroundColor,\r\n    }\r\n  }\r\n  const cell_style_mixednumber = (row_index, col_index) => {\r\n    const borderLeftWidth =  0\r\n    const borderTopWidth = (row_index === 0 || col_index === 0) ? 0 : 1\r\n    const borderRightWidth = 0\r\n    const borderBottomWidth = 0\r\n    const backgroundColor = 'white'\r\n    const fontSize = '15px'  \r\n    return {\r\n        // fontFamily: 'Arial', \r\n        width: '20px',\r\n        borderLeftWidth, borderRightWidth,\r\n        borderTopWidth, borderBottomWidth,\r\n        borderStyle: \"solid\",\r\n        backgroundColor, fontSize,\r\n    }\r\n  }\r\nconst math = create(all, config)\r\n\r\nexport const addFract = () => {\r\n    var numberList = fractionNumbers()\r\n    var whole = randWhole(1,4)\r\n    var [num1, denom1, num2, denom2] = [numberList[0], numberList[1], numberList[2], numberList[3]]\r\n    console.log(num1)\r\n    // console.log(num)\r\n    var fract1 = math.fraction(`${num1}/${denom1}`)\r\n    var fract2 = math.fraction(`${num2}/${denom2}`)\r\n    var answer = math.format(math.add(fract1, fract2))\r\n    var answer = math.format(math.add(fract1, fract2))\r\n\r\n    // console.log(fract1)\r\n    // console.log(math.fraction('1/2'))\r\n    var styledFract1 = Table([[num1],[denom1]], cell_style_fraction, tstyles)\r\n    var styledFract2 = Table([[num2],[denom2]], cell_style_fraction, tstyles)\r\n    var mixedNumber1 = Table([['hi', num1],[whole, denom1]], cell_style_mixednumber, tstyles)\r\n\r\n    var AC = [answer, 'this is wrong', 'this is wrong2', 'this is wrong3']\r\n    // var prob1 = (`${math.format(fract1)}+${math.format(fract2)}`)\r\n    // var prob1 = <View>{styledFract1}<Text>+</Text>{styledFract2}</View>\r\n    var prob1 = horizontalFractions(styledFract1, styledFract2, <Text>+</Text>)\r\n    var prob2 = (`${math.format(fract2)}+${math.format(fract1)}`)\r\n    var randProb = [prob1.toString(), prob2.toString()][randWhole(0,1)]\r\n    \r\n    var problem = {text: prob1,\r\n        answerChoices: ['','','','', answer],\r\n        correctAnswer: answer}\r\n    return problem\r\n}\r\nexport const subFract = () => {\r\n    var numberList = fractionNumbers()\r\n    var whole = randWhole(1,4)\r\n    var [num1, denom1, num2, denom2] = [numberList[0], numberList[1], numberList[2], numberList[3]]\r\n    console.log(num1)\r\n    // console.log(num)\r\n    var fract1 = math.fraction(`${num1}/${denom1}`)\r\n    var fract2 = math.fraction(`${num2}/${denom2}`)\r\n    // var answer = math.format(math.subtract(fract1, fract2))\r\n    // var answer = math.format(math.subtract(fract1, fract2))\r\n    var styledFract1 = Table([[num1],[denom1]], cell_style_fraction, tstyles)\r\n    var styledFract2 = Table([[num2],[denom2]], cell_style_fraction, tstyles)\r\n    if (math.compare(fract1, fract2) === 1) {\r\n        var prob1 = horizontalFractions(styledFract1, styledFract2, <Text>-</Text>)\r\n        var answer = math.format(math.subtract(fract1, fract2))\r\n\r\n    } else {\r\n        prob1 = horizontalFractions(styledFract2, styledFract1, <Text>-</Text>)\r\n        answer = math.format(math.subtract(fract2, fract1))\r\n\r\n    }\r\n    console.log(fract1)\r\n    console.log(math.fraction('1/2'))\r\n\r\n    var mixedNumber1 = Table([['hi', num1],[whole, denom1]], cell_style_mixednumber, tstyles)\r\n\r\n    var AC = [answer, 'this is wrong', 'this is wrong2', 'this is wrong3']\r\n    // var prob1 = (`${math.format(fract1)}+${math.format(fract2)}`)\r\n    // var prob1 = <View>{styledFract1}<Text>+</Text>{styledFract2}</View>\r\n    var prob1 = horizontalFractions(styledFract1, styledFract2, <Text>-</Text>)\r\n    var prob2 = (`${math.format(fract2)}+${math.format(fract1)}`)\r\n    var randProb = [prob1.toString(), prob2.toString()][randWhole(0,1)]\r\n    \r\n    var problem = {text: prob1,\r\n        answerChoices: ['','','','', answer],\r\n        correctAnswer: answer}\r\n    return problem\r\n}\r\n\r\nconst divFractNumbers = (userSelection) => {\r\n    // if (options.specify === 'fractbyfract') {\r\n\r\n    // } else if (options.specify === 'mixedbymixed'){\r\n\r\n    // } else {\r\n\r\n    // }\r\n    var whole = randWhole(2, 10)\r\n    var num1 = 1\r\n    var denom1 = randWhole(2,10)\r\n\r\n    return [whole, num1, denom1]\r\n}\r\nexport const divideFract = () => {\r\n    var numberList = divFractNumbers()\r\n    var [whole, num1, denom1] = [numberList[0], numberList[1], numberList[2]]\r\n    console.log(num1)\r\n    var fract1 = math.fraction(`${num1}/${denom1}`)\r\n    // console.log(fract1)\r\n    // console.log(math.fraction('1/2'))\r\n    var wholeNumber = <View><Text>{whole}</Text></View>\r\n    var styledFract1 = Table([[num1],[denom1]], cell_style_fraction, tstyles)\r\n\r\n    // var prob1 = (`${math.format(fract1)}+${math.format(fract2)}`)\r\n    // var prob1 = <View>{styledFract1}<Text>+</Text>{styledFract2}</View>\r\n    var prob1 = horizontalFractions(wholeNumber, styledFract1, <Text>÷</Text>)\r\n    var prob2 = horizontalFractions(styledFract1, wholeNumber, <Text>÷</Text>)\r\n\r\n    // var prob2 = (`${math.format(fract2)}+${math.format(fract1)}`)\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    if (randProb === prob1) {\r\n        var answer = math.format(math.number(math.divide(whole, fract1)))\r\n    } else {\r\n        answer = math.format(math.divide(fract1, whole))\r\n    }\r\n    var AC = [answer, 'this is wrong', 'this is wrong2', 'this is wrong3']\r\n\r\n    var problem = {text: randProb,\r\n        answerChoices: ['','','','', answer],\r\n        correctAnswer: answer}\r\n    return problem\r\n}\r\nexport const multFract = () => {\r\n    var numberList = divFractNumbers()\r\n    var [whole, num1, denom1] = [numberList[0], numberList[1], numberList[2]]\r\n    console.log(num1)\r\n    var fract1 = math.fraction(`${num1}/${denom1}`)\r\n    // console.log(fract1)\r\n    // console.log(math.fraction('1/2'))\r\n    var wholeNumber = <View><Text>{whole}</Text></View>\r\n    var styledFract1 = Table([[num1],[denom1]], cell_style_fraction, tstyles)\r\n\r\n    // var prob1 = (`${math.format(fract1)}+${math.format(fract2)}`)\r\n    // var prob1 = <View>{styledFract1}<Text>+</Text>{styledFract2}</View>\r\n    var prob1 = horizontalFractions(wholeNumber, styledFract1, <Text>×</Text>)\r\n    var prob2 = horizontalFractions(styledFract1, wholeNumber, <Text>×</Text>)\r\n\r\n    // var prob2 = (`${math.format(fract2)}+${math.format(fract1)}`)\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var answer = math.format(math.multiply(fract1, whole))\r\n\r\n    // if (randProb === prob1) {\r\n    //     var answer = math.format(math.number(math.multiply(whole, fract1)))\r\n    // } else {\r\n    //     answer = math.format(math.multiply(fract1, whole))\r\n    // }\r\n    var AC = [answer, 'this is wrong', 'this is wrong2', 'this is wrong3']\r\n\r\n    var problem = {text: randProb,\r\n        answerChoices: ['','','','', answer],\r\n        correctAnswer: answer}\r\n    return problem\r\n}","C:\\projects\\worksheet-creator\\src\\app-files\\multiply.js",["222","223","224","225","226","227"],"import * as g from \"./general\";\r\nimport {randWhole, shuffleArray, answerChoicesKey, wrongOptions, cap} from './general'\r\n\r\nconst multNumbers = (options) =>{\r\n    if (options.specify === '1') { //4 by 1\r\n        var [numberS, numberM, numberL] = [randWhole(2, 9), randWhole(12, 67), randWhole(1000, 9999)];\r\n\r\n    }else if (options.specify === \"2\") { // 2 by 2\r\n    [numberS, numberM, numberL] = [randWhole(12, 49), randWhole(12, 67), randWhole(50, 99)];\r\n\r\n    } else if (options.specify ===\"3\") { // 3 by 2\r\n    [numberS, numberM, numberL] = [randWhole(20, 99), randWhole(20, 90), randWhole(102, 999)];\r\n    } else{\r\n        [numberS, numberM, numberL] = [randWhole(20, 99), randWhole(20, 90), randWhole(102, 999)];\r\n\r\n        // var randQ = [[randWhole(2,9), randWhole(1000,9999)] //error cannot read property (random number) of undefined\r\n        //             [randWhole(20,99), randWhole(102,999)]\r\n        //             [randWhole(12,49), randWhole(50,99)]]\r\n        // var randArr = shuffleArray(randQ)\r\n        // // [numberS, numberM, numberL] = [randArr[0][0],randWhole(12,90), randArr[0][1]]\r\n\r\n    }\r\n    return [numberS, numberM, numberL]\r\n}\r\n\r\nexport const multWhole = (options) => { //basic product/sum/difference\r\n    var numberList = multNumbers(options)\r\n    var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    if (options.level === '1') {\r\n        var prob1 = (`What is the product of ${numberS} and ${numberL}?`)\r\n        var prob2 = (`What is the product of ${numberL} and ${numberS}?`)\r\n        var prob3 = (`A number is ${numberL} times as large as ${numberS}. What is the number?`)\r\n        var prob4 = (`A number is ${numberS} times as large as ${numberL}. What is the number?`)\r\n        var randProb = [prob1, prob2, prob3, prob4][randWhole(0,3)]\r\n        var answer = numberS*numberL\r\n\r\n    } else if (options.level === '2') {\r\n        prob1 = (`What is the sum of ${numberM} and the product of ${numberL} and ${numberS}?`)\r\n        prob2 = (`What is the sum of ${numberM} and the product of ${numberS} and ${numberL}?`)\r\n        prob3 = (`What is the difference when ${numberM} is subtracted from the product of ${numberS} and ${numberL}?`)\r\n        prob4 = (`What is the difference when ${numberM} is subtracted from the product of ${numberL} and ${numberS}?`)\r\n        randProb = [prob1, prob2, prob3, prob4][randWhole(0,3)]\r\n        if (randProb === (prob1 || prob2)){ //maybe better to make problems into objects with answer \r\n            answer = numberM+numberL*numberS\r\n        } else {\r\n            answer = numberL*numberS-numberM\r\n        }\r\n    } else {\r\n        var numberL2 = randWhole(111,99) //not going to change based on specify\r\n        var numberS2 = randWhole(12,99)\r\n        prob1 = (`What is the difference between the product of ${numberL} and ${numberS} and the product of ${numberS2} and ${numberL2}?`)\r\n        prob2 = (`What is the sum of the product of ${numberL} and ${numberS} and the product of ${numberS2} and ${numberL2}?`)\r\n        prob3 = (`A number is ${numberS} times as much as the sum of ${numberM} and ${numberS2}and ${numberS}. What is the number?`)\r\n        randProb = [prob1, prob2, prob3][randWhole(0,2)]\r\n\r\n        if (randProb === prob1){\r\n            answer = numberL*numberS - numberS2*numberL2\r\n        } else if (randProb === prob2){\r\n            answer = numberL*numberS + numberS2*numberL2\r\n        } else {\r\n            answer = numberS*(numberM+numberS2+numberS)\r\n        }\r\n    }\r\n    \r\n    var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n\r\n\r\n\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem     \r\n\r\n}\r\n\r\n\r\nexport const multWhole2 = (options) => { //mass\r\n    var [group, item, mass] = [shuffleArray(g.groupList), shuffleArray(g.itemList)]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    var numberList = multNumbers(options)\r\n    var [numberS, numberM, numberL, numberL2] = [numberList[0], numberList[1], numberList[2], randWhole(12, 55)]\r\n\r\n\r\n    if (options.level === '1') {\r\n        var prob1 = `${cap(e)} ${group[0]} of ${item[0]} has a mass of ${numberS} grams. What is the mass of `+\r\n        `${numberL} ${group[0]}s of ${item[0]} in grams?`\r\n        var prob2 = `There are ${numberL} ${group[0]}s of ${item[0]}. If ${e} ${group[0]} of ${item[0]} `+\r\n        `has a mass of ${numberS} grams, what is the mass of all these ${item[0]}s?`\r\n    } else {\r\n        var prob1 = `${cap(e)} ${group[0]} of ${item[0]} has a mass of ${numberS} grams. ${cap(e)} ${group[0]} of `+\r\n        `${item[1]} has a mass of ${numberM} grams. What is the mass of ${numberL} ${group[0]}s of ${item[0]} in grams?`\r\n        var prob2 = `There are ${numberL} ${group[0]}s of ${item[0]} and there are ${numberM} ${group[0]}s of `+\r\n        `${item[1]}. What is the mass of all the ${group[0]}s of ${item[0]} if ${e} has a mass of ${numberS} grams? `\r\n    }\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var answer = numberS*numberL\r\n    var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], 'grams')\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem   \r\n}\r\n\r\nexport const multWhole3 = (options) => { //simple buying items\r\n    var [expItem, girl] = [shuffleArray(g.itemList2060), shuffleArray(g.girlList)]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    var numberList = multNumbers(options)\r\n    var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n    var prob1 = `${cap(e)} ${expItem[0]} costs $${numberS}. How much would it cost to buy ${numberL} ${expItem[0]}s?`\r\n    var prob2 = `${girl[0]} buys ${numberL} ${expItem[0]}s which cost $${numberS} each. How much would it cost her to buy \r\n                ${numberL} ${expItem[0]}s?`\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var answer =numberS*numberL\r\n    var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem   \r\n}\r\nexport const multWholeby1 = (options) => { //by1 digit only Disaster\r\n    var [food, boy, girl, disaster] = [shuffleArray(g.disasterFoodList)[0], shuffleArray(g.boyList)[0], shuffleArray(g.girlList)[0],shuffleArray(g.disasterList)[0]]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    var numberList = multNumbers(options)\r\n    var [numberS, numberM, numberL] = [randWhole(2,7), numberList[1], numberList[2]]\r\n    var prob1 = (`${boy} is preparing for a ${disaster}. He wants to buy a lot of his favorite food so that he does not `+\r\n    `run out. ${cap(e)} box of ${food} costs $${numberS}. How much would it cost him to buy `+\r\n    `${numberL} boxes?`)\r\n    var prob2 = (`${girl} is getting ready in case of a ${disaster}. She wants stock up on ${food} so she purchases `+\r\n    `${numberL} boxes. ${cap(e)} box of ${food} costs $${numberS}. How much would it cost her to buy `+\r\n    `all the boxes?`)\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var answer =numberS*numberL\r\n    var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem   \r\n}\r\n// export const multWhole5 = (options) => {\r\n//     var numberList = multNumbers(options)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole6 = (options) => {\r\n//     var numberList = multNumbers(options)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole7 = (options) => {\r\n//     var numberList = multNumbers(options)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole8 = (options) => {\r\n//     var numberList = multNumbers(options)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole9 = (options) => {\r\n//     var numberList = multNumbers(options)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole10 = (options) => {\r\n//     var numberList = multNumbers(options)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole11 = (options) => {\r\n//     var numberList = multNumbers(options)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n\r\n\r\n\r\n  \r\n\r\n    // problem = (`${randGirl} 's ${randPetBig} weighs ${numberL} pounds. ${randBoy}'s ${randPetBig} weighs ${NumberS}`\r\n    // ` times as much as ${randGirl}'s ${randPetBig}. What does ${randBoy}'s ${randPetBig} weigh in pounds?`) //2 by 2 only\r\n\r\n\r\n\r\n    // problem = (`${randBoy} buys ${numberL} large bags of ${randCandy} for Halloween. It costs `\r\n    // `${numberS}$ for each bag of ${randCandy}. How much would it cost him to buy all the bags?`)\r\n\r\n    // problem = (`${randSchool} ordered ${numberL} cases of ${randSubject} textbooks. ${cap(e)} case holds ${numberS}`\r\n    // ` textbooks. How many textbooks did the school buy?`)\r\n\r\n    // problem = (`A ${randSize} bag of ${randFood}'s contains ${numberL} calories. How many calories are in ` \r\n    // `${numberS} ${randSize} bags of ${randFood}s?`)\r\n\r\n\r\n\r\n\r\n    export const randMultWhole = (options) => {\r\n        var probArray = [multWhole, multWhole2, multWhole3]\r\n        if (options.specify === '3by1' || '4by1') {\r\n            probArray.push(multWholeby1)\r\n        } //else if (options.specify === '2by2') {\r\n\r\n        // } else {//3by2\r\n\r\n        // }\r\n        var randProb = shuffleArray(probArray)[0]\r\n        return randProb(options)\r\n    }","C:\\projects\\worksheet-creator\\src\\components\\display-user-selection.js",[],"C:\\projects\\worksheet-creator\\src\\components\\user-inputs.js",["228","229","230","231"],"import { defaultProps, PropTypes, React } from \"react\";\r\nimport Input from \"./input\";\r\nimport \"../App.css\";\r\nimport ConceptCustomization from \"./concept-customization\";\r\nimport DisplayUserSelection from './display-user-selection'\r\n\r\nconst UserInput = (props) => {\r\n  return (\r\n    <div className=\"main-customize-container\">\r\n      <div className=\"concept-dropdown-container\">\r\n          <p className=\"customize-title\">Math Concepts</p>\r\n        <div>\r\n          <div className=\"concept-topic\">\r\n            Whole Number Operations\r\n            {/* <div className=\"dropdown-content\">\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"buttonGroup\">\r\n        <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Adding Whole Numbers\")}\r\n              >\r\n                Adding Whole Numbers\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Subtracting Whole Numbers\")}\r\n              >\r\n                Subtracting Whole Numbers\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Multiplying Whole Numbers\")}\r\n              >\r\n                Multiplying Whole Numbers\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Dividing Whole Numbers\")}\r\n              >\r\n                Dividing Whole Numbers\r\n              </button>\r\n        </div>\r\n        <div>\r\n          <div className=\"concept-topic\">\r\n            Decimal Operations\r\n            <div className=\"dropdown-content\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className= \"buttonGroup\">\r\n        <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Dividing Decimals Algorithm\")}\r\n              >\r\n                Adding Decimals\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Subtracting Decimals Algorithm\")}\r\n              >\r\n                Subtracting Decimals\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Dividing Decimals Algorithm\")}\r\n              >\r\n                Dividing Decimals\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Multiplying Decimals Algorithm\")}\r\n              >\r\n                Multiplying Decimals\r\n              </button>\r\n        </div>\r\n        <div>\r\n          <div className=\"concept-topic\">\r\n            Fraction Operations\r\n\r\n          </div>\r\n          \r\n        </div>\r\n        <div className=\"buttonGroup\">\r\n        <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Adding Fractions\")}\r\n              >\r\n                Adding Fractions\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Subtracting Fractions\")}\r\n              >\r\n                Subtracting Fractions\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Dividing Fractions\")}\r\n              >\r\n                Dividing Fractions\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"dropdown\"\r\n                onClick={() => props.handleConcept(\"concept\", \"Multiplying Fractions\")}\r\n              >\r\n                Multiplying Fractions\r\n              </button>\r\n        </div>\r\n        <div>\r\n          <div\r\n            // className=\"conceptList\"\r\n            onClick={() => props.handleConcept(\"concept\", \"Order of Operations\")}\r\n            className=\"dropdown\"\r\n          >\r\n            Order of Operations\r\n            <div className=\"concept-topic\">\r\n              {/* <button type = \"button\" className='conceptList' \r\n                    onClick = {() => props.handleConcept('concept', 'order-ops-whole')}>Order of Operations</button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div\r\n            type=\"button\"\r\n            className=\"conceptList\"\r\n            onClick={() => props.handleConcept(\"concept\", \"Input Output Tables\")}\r\n            className=\"dropdown\"\r\n          >\r\n            {\" \"}\r\n            Tables\r\n            <div className=\"concept-topic\">\r\n              {/* <button type = \"button\" className='conceptList' \r\n                    onClick = {() => props.handleConcept('concept', 'table')}>Input Output Tables</button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"dropdown\">\r\n            {\" \"}\r\n            Decimal Basics\r\n            <div className=\"concept-topic\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"customize-qcontainer\">\r\n        {props.inputState.length < 2 ? (\r\n          <div>\r\n            <h1>\r\n              Select a concept to the left and then you will be able to\r\n              customize it to fit the needs of your students.\r\n            </h1>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <p className=\"customize-title\">Customize your questions:</p>\r\n            <ConceptCustomization\r\n              inputState={props.inputState}\r\n              handleInput={props.handleInput}\r\n            ></ConceptCustomization>\r\n          </div>\r\n        )}\r\n        <div className=\"quantity-addQ\">\r\n          <div>\r\n            <Input\r\n              label=\"Quantity:\"\r\n              name=\"quantity\"\r\n              type=\"number\"\r\n              value={props.inputState.quantity}\r\n              // onChange={props.handleInputQuantity}\r\n              onChange={props.handleInput}\r\n              placeholder=\"\"\r\n              required\r\n              className=\"input\"\r\n              min=\"1\"\r\n              max=\"50\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"submit\"></label>\r\n            <button type=\"button\" className= \"addQ-button\" id=\"submit\" onClick={props.handleAddConcept}>\r\n              + Questions\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"input-final-container\">\r\n\r\n\r\n\r\n\r\n            <p className=\"customize-title\">Finishing Touches</p>\r\n      <div className=\"final-customization container\">\r\n          <label htmlFor=\"level\">Document Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"docTitle\"\r\n            value={props.inputState.docTitle}\r\n            value={props.inputState.docTitle}\r\n            // onChange={props.handleInputTitle}\r\n            onChange={props.handleInput}\r\n            name=\"docTitle\"\r\n          />\r\n\r\n          <Input\r\n            label=\"Mix up questions:\"\r\n            name=\"order\"\r\n            type=\"checkbox\"\r\n            value={props.inputState.order}\r\n            // onChange={props.handleOrder}\r\n            onChange={props.handleInput}\r\n            className=\"input\"\r\n          />\r\n          <Input\r\n            label=\"Columns:\"\r\n            name=\"docStyle\"\r\n            type=\"checkbox\"\r\n            value={props.inputState.docStyle}\r\n            // onChange={props.handleDocStyle}\r\n            onChange={props.handleInput}\r\n            className=\"input\"\r\n          />\r\n          \r\n      <div>\r\n        {props.userSelection.length>0 ?\r\n        <div> \r\n          <DisplayUserSelection \r\n            displayQuestionList = {props.displayQuestionList} \r\n            handleSelect = {props.handleSelect} \r\n            handleDeleteConcept = {props.handleDeleteConcept} \r\n            userSelection = {props.userSelection} \r\n            handlePDF = {props.handlePDF}\r\n          /> </div>: <div><p>hi</p></div> }\r\n      </div>\r\n        <button type=\"button\" onClick={props.handleDisplayQuestionList}>\r\n          Create Worksheet\r\n        </button> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInput;\r\n","C:\\projects\\worksheet-creator\\src\\components\\input.js",["232","233","234"],"import {defaultProps, PropTypes, React, Fragment} from 'react'\r\nconst Input = ({\r\n  name,\r\n  type,\r\n  placeholder,\r\n  onChange,\r\n  className,\r\n  value,\r\n  error,\r\n  children,\r\n  label,\r\n  min,\r\n  max,\r\n  ...props\r\n}) => {\r\n  \r\n  return (\r\n    <div>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        value={value}\r\n        className={className}\r\n        style={error && {border: 'solid 1px red'}}\r\n        min= {min}\r\n        max={max}\r\n      />\r\n      { error && <p>{ error }</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nInput.defaultProps = {\r\n  type: \"text\",\r\n  className: \"\"\r\n}\r\n\r\n// Input.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   type: PropTypes.string,\r\n//   type: PropTypes.oneOf(['text', 'number', 'password', 'checkbox']),\r\n//   className: PropTypes.string,\r\n//   value: PropTypes.any,\r\n//   onChange: PropTypes.func.isRequired\r\n// }\r\n\r\n\r\nexport default Input","C:\\projects\\worksheet-creator\\src\\app-files\\divide.js",["235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"import { to } from \"mathjs\";\r\nimport * as g from \"./general\";\r\nimport {randWhole, shuffleArray, answerChoicesKey, wrongOptions, cap} from './general'\r\nvar e = ['one', 'a', 'each'][randWhole(0,2)]\r\n\r\n\r\nconst divNumbers = (options) => {\r\n    if (options.specify === '1') { //4 by 1\r\n        var numArray = [[randWhole(50, 99), randWhole(2, 9)],\r\n        [randWhole(25, 50), randWhole(5, 9)],\r\n        [randWhole(101, 166), randWhole(2, 6)],\r\n        [randWhole(166, 249), randWhole(2, 4)]]\r\n        var num = shuffleArray(numArray)\r\n        var answer = num[0][0]\r\n        var numberS = num[0][1]\r\n        var numberL = answer*numberS\r\n\r\n\r\n    }else { // 2 by 2\r\n        var numArray = [\r\n            [randWhole(15, 24), randWhole(11, 20)],\r\n            [randWhole(15, 28), randWhole(21, 35)],\r\n            [randWhole(13, 25), randWhole(36, 50)],\r\n            [randWhole(15, 25), randWhole(15, 28)]\r\n        ]\r\n        var num = shuffleArray(numArray)\r\n        var answer = num[0][0]\r\n        var numberS = num[0][1]\r\n        var numberL = answer*numberS\r\n    } \r\n    return [answer, numberS, numberL]\r\n}\r\nconst divideWhole = (options) => {\r\n    \r\n\r\n\r\n\r\n\r\n}\r\nexport const div1dig = (options) => { // 1 digit divisor only\r\n    var numberList = divNumbers(options)\r\n    var girl = shuffleArray(g.girlList)[0]\r\n    var store = shuffleArray(g.storeList)[0]\r\n    var item = shuffleArray(g.packageItemList)[0]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n\r\n\r\n    var [answer, numberS, numberL] = [numberList[0], randWhole(2,6), numberList[2]]\r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = `${girl} is going to ${store} to buy some ${item} for a party. It costs $${numberS} for ${e} `+\r\n    `package of ${item}. After the cashier rang up her items, she had to give the cashier a total `+\r\n    `of $${numberL}. How many packages of ${item} did she buy?`\r\n    var prob2 = `${girl} wants to buy some ${item} at ${store} to prepare for a large family gathering.`+\r\n    ` She ended up purchasing ${numberS} packages of ${item} which cost `+\r\n    `$${numberL} altogether. How much does ${e} package of ${item} cost?`\r\n    \r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    if (randProb === prob2) {\r\n        AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    }\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\nexport const div2dig= (options) => { //playing sports 2 digit only\r\n    var numberList = divNumbers(options)\r\n    var boy = shuffleArray(g.boyList)[0]\r\n    var sport = shuffleArray(g.sportList)[0]\r\n    var [answer, numberS, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = `${boy} plays ${sport} for a total of ${numberL} minutes last year. He played ${sport} `+\r\n    `for ${numberS} minutes each day. How many days did ${boy} play ${sport} last year? `\r\n    var prob2 = `${boy} plays ${sport} for a total of ${numberL} minutes last year. He played ${sport} `+\r\n    `for ${numberS} days last year for an equal amount of time each day. How many minutes did ${boy} play ${sport} each day last year? `\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\nexport const divWhole = (options) => { //simple purchase items\r\n    var numberList = divNumbers(options)\r\n    var item = shuffleArray(g.itemList1020)[0]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    if (options.specify === '2by1') { //4 by 1\r\n        var [answer, numberS] = [randWhole(2,9), randWhole(5,8)];\r\n       var numberL= answer*numberS\r\n   }else if (options.specify === '3by1'){\r\n       var [answer, numberS] = [randWhole(23,40), randWhole(6,9)];\r\n       var numberL = answer*numberS\r\n   } else if (options.specify === '4by1'){\r\n        var [answer, numberS] = [randWhole(167,250), randWhole(6,9)];\r\n        var numberL = answer*numberS\r\n    } else{\r\n        var [answer, numberS] = [randWhole(23,89), randWhole(20,40)];\r\n        var numberL = answer*numberS\r\n        var item = shuffleArray(g.itemList2060)[0]\r\n    } \r\n    var [answer, numberS, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) //wont be great wrong options for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var prob1 = `It costs $${numberL} to buy ${numberS} ${item}s. How much would it cost to buy one `+\r\n    `${item}?`\r\n    var prob2 = `How much would it cost to buy ${e} ${item} if it costs $${numberL} to buy ${numberS} ${item}s?`\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\nexport const div1dig2 = (options) => { //teacher buying items\r\n    var teacher = shuffleArray(g.teacherList)[0]\r\n    var theme = shuffleArray(g.themeList)[0]\r\n    var item = shuffleArray(['pencil','marker','pen','journal','notebook','decoration'])[0]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    if (options.specify === '2by1') { \r\n         var [answer, numberS] = [randWhole(2,9), randWhole(5,8)];\r\n        var numberL= answer*numberS\r\n    }else { //3by1\r\n        var [answer, numberS] = [randWhole(15,15), randWhole(6,9)];\r\n        var numberL = answer*numberS\r\n    } \r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS)\r\n    var prob1 = `${teacher} bought ${numberS} ${theme} ${item}s for a total of $${numberL} `+\r\n    `. If each ${item} costs the same amount, how much did ${teacher} spend on each ${theme} ${item}? `\r\n    var prob2 = `${teacher} has a total of $${numberL} to spend on ${item}s. She wants to buy ${theme} `+\r\n        ` ${item}s for her classroom. If ${e} package of ${theme} ${item}s costs $${numberS}, how many packagess can she buy?`\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    if (randProb === prob1) {\r\n        AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    } \r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\n// export const randDivideWhole = () => {\r\n//     var randProb = shuffleArray([\r\n    \r\n//     ])[0]\r\n// }\r\n\r\n\r\n    // var prob1 = `${girl} has ${numberL} ${theme} themed ${schoolItem}. She wants to split them equally `+\r\n    //             ` between her friends. If she has ${numberS} friends, how many ${schoolItem} can each friend get?`\r\n    // var prob2 = `${boy} has ${numberL} ${theme} themed ${schoolItem}. If he gives each friend ${numberS} `+\r\n    //             `${schoolItem}, how many friends can he give them to?`\r\n\r\n    // var prob1 = `${girl} has ${numberL} ${noun} saved up. She decides that she has way too many ${noun} and she `+\r\n    //             `$wants to give them all away to her friends. She wants to give each friend the same amount of ${noun}. `+\r\n    //             `${girl} has ${numberS} friends that she would like to give the ${noun} to. How many ${noun} would each friend get?`\r\n    // var prob2 = `${boy} has too many ${noun} saved up. He decides to split them equally between each of his ${numberS} friends. `+\r\n    //             `How many ${noun} will each friend get?`\r\n\r\n\r\n\r\n    // var prob1 = `${boy} has ${numberL} ${noun}. He wants to split them equally into ${group}s. If ${boy} puts ${numberS} `+\r\n    //             `${noun} into each ${group}, how many ${group}s can ${boy} fill?`\r\n    // var prob2 = `${girl} wants to split their ${numberL} ${noun} into equal ${group}s. If she makes ${numberS} `+\r\n    //             `${group}s, how many ${noun}s fit in ${e} ${group}?`\r\n\r\n\r\n    // var prob1 = `${boy} has ${numberL} ${candy}. He would like to share these ${candy} equally with ${numberS} friends. How `+\r\n    //             `many ${candy} will each friend get?`\r\n    // var prob2 = `${girl} has ${numberL} ${candy}. She wants to give each friend ${numberS} ${candy}. How many friends will `+\r\n    //             `she be able to give ${candy} to?`\r\n\r\n    // var prob1 = `A ${food} company can fit ${numberS} packages of ${food} in ${e} box. How many boxes are needed to fill an `+\r\n    //             `order for ${numberL} packages of ${food}?`\r\n    // var prob2 = `A ${food} company needs to put ${numberL} packages of ${food} into boxes to fill an order. They can fit ${numberS} `+\r\n    //             `packages of ${food} in ${e} box. How many boxes will they need to fill the order?`\r\n\r\n    // var dogNameList = ['Zoey','Bowser','Spot','Snickerdoodle','Sir Fluffyboy', 'Chuggington', 'Bella', 'Max','Daisy','Bitsy','Archie','Barkley','Baxter','Chewy','Izzy','Murphy','Pippin','Waffles','Wiggleton','Ziggy']\r\n    // var prob1 = `${girl} walks her dog ${dogName} ${numberS} minutes each day they go for a walk. If they walk for a total of `+\r\n    //             `${numberL} minutes last month, how many days did she take ${dogName} for a walk?`\r\n    // var prob2 = `${boy} walks his dog ${dogName} for a total of ${numberL} minutes last month. Each time he takes ${dogName} `+\r\n    //             `on a walk for ${numberS} minutes. How many days did he take ${dogName} for a walk last month? `\r\n    // var prob3 = `${girl} took her dog ${dogName} on a walk ${numberS} times last month. They walked for a total of ${numberL} `+\r\n    //             `minutes. If each walk lasted the same amount of time, how long was each walk? `\r\n    \r\n    // var prob1 = `${dogName} the dog eats ${numberS} ounces of dog food each week. ${dogName}'s pet parent has stocked up with `+\r\n    //             `${numberL} ounces of dog food. How many weeks will the food last?`\r\n    // var prob2 = `${boy} bought a large bag of dog food so now he has ${numberL} ounces. He gives his dog ${dogName} ${numberS} `+\r\n    //             `ounces of food each week. How many weeks will the food last until he runs out?`\r\n\r\n\r\n    export const randDivWhole = (options) => {\r\n        var probArray = [divWhole]\r\n        if (options.specify === ('3by1' || '4by1')) {\r\n            probArray.push(div1dig, div1dig2)\r\n        } else  { //4 by 2\r\n            probArray.push(div2dig)\r\n        } //else {//3by2\r\n\r\n        // }\r\n        var randProb = shuffleArray(probArray)[0]\r\n        return randProb(options)\r\n    }","C:\\projects\\worksheet-creator\\src\\components\\concept-customization.js",["260","261"],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":2,"column":3,"nodeType":"268","messageId":"269","endLine":2,"endColumn":12},{"ruleId":"266","severity":1,"message":"270","line":8,"column":8,"nodeType":"268","messageId":"269","endLine":8,"endColumn":19},{"ruleId":"266","severity":1,"message":"271","line":9,"column":8,"nodeType":"268","messageId":"269","endLine":9,"endColumn":13},{"ruleId":"266","severity":1,"message":"272","line":215,"column":1,"nodeType":"268","messageId":"269","endLine":215,"endColumn":10},{"ruleId":"266","severity":1,"message":"273","line":243,"column":15,"nodeType":"268","messageId":"269","endLine":243,"endColumn":22},{"ruleId":"266","severity":1,"message":"274","line":269,"column":9,"nodeType":"268","messageId":"269","endLine":269,"endColumn":13},{"ruleId":"266","severity":1,"message":"273","line":278,"column":15,"nodeType":"268","messageId":"269","endLine":278,"endColumn":22},{"ruleId":"266","severity":1,"message":"273","line":307,"column":19,"nodeType":"268","messageId":"269","endLine":307,"endColumn":26},{"ruleId":"266","severity":1,"message":"273","line":335,"column":19,"nodeType":"268","messageId":"269","endLine":335,"endColumn":26},{"ruleId":"266","severity":1,"message":"273","line":363,"column":19,"nodeType":"268","messageId":"269","endLine":363,"endColumn":26},{"ruleId":"266","severity":1,"message":"275","line":366,"column":9,"nodeType":"268","messageId":"269","endLine":366,"endColumn":13},{"ruleId":"266","severity":1,"message":"276","line":3,"column":3,"nodeType":"268","messageId":"269","endLine":3,"endColumn":7},{"ruleId":"266","severity":1,"message":"277","line":6,"column":3,"nodeType":"268","messageId":"269","endLine":6,"endColumn":8},{"ruleId":"266","severity":1,"message":"278","line":7,"column":3,"nodeType":"268","messageId":"269","endLine":7,"endColumn":11},{"ruleId":"266","severity":1,"message":"279","line":9,"column":3,"nodeType":"268","messageId":"269","endLine":9,"endColumn":7},{"ruleId":"266","severity":1,"message":"280","line":12,"column":3,"nodeType":"268","messageId":"269","endLine":12,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":68,"column":3,"nodeType":"283","messageId":"284","endLine":68,"endColumn":9},{"ruleId":"266","severity":1,"message":"285","line":115,"column":9,"nodeType":"268","messageId":"269","endLine":115,"endColumn":16},{"ruleId":"286","severity":1,"message":"287","line":137,"column":12,"nodeType":"268","messageId":"288","endLine":137,"endColumn":13},{"ruleId":"286","severity":1,"message":"289","line":137,"column":15,"nodeType":"268","messageId":"288","endLine":137,"endColumn":19},{"ruleId":"286","severity":1,"message":"287","line":139,"column":12,"nodeType":"268","messageId":"288","endLine":139,"endColumn":13},{"ruleId":"286","severity":1,"message":"289","line":139,"column":15,"nodeType":"268","messageId":"288","endLine":139,"endColumn":19},{"ruleId":"290","severity":1,"message":"291","line":148,"column":9,"nodeType":"268","messageId":"292","endLine":148,"endColumn":22},{"ruleId":"290","severity":1,"message":"291","line":150,"column":7,"nodeType":"268","messageId":"292","endLine":150,"endColumn":20},{"ruleId":"290","severity":1,"message":"291","line":152,"column":7,"nodeType":"268","messageId":"292","endLine":152,"endColumn":20},{"ruleId":"290","severity":1,"message":"291","line":154,"column":7,"nodeType":"268","messageId":"292","endLine":154,"endColumn":20},{"ruleId":"286","severity":1,"message":"293","line":157,"column":11,"nodeType":"268","messageId":"288","endLine":157,"endColumn":12},{"ruleId":"286","severity":1,"message":"294","line":158,"column":11,"nodeType":"268","messageId":"288","endLine":158,"endColumn":12},{"ruleId":"286","severity":1,"message":"295","line":159,"column":11,"nodeType":"268","messageId":"288","endLine":159,"endColumn":12},{"ruleId":"286","severity":1,"message":"296","line":160,"column":11,"nodeType":"268","messageId":"288","endLine":160,"endColumn":12},{"ruleId":"286","severity":1,"message":"297","line":161,"column":11,"nodeType":"268","messageId":"288","endLine":161,"endColumn":12},{"ruleId":"266","severity":1,"message":"298","line":161,"column":11,"nodeType":"268","messageId":"269","endLine":161,"endColumn":12},{"ruleId":"290","severity":1,"message":"291","line":163,"column":9,"nodeType":"268","messageId":"292","endLine":163,"endColumn":22},{"ruleId":"290","severity":1,"message":"291","line":165,"column":7,"nodeType":"268","messageId":"292","endLine":165,"endColumn":20},{"ruleId":"290","severity":1,"message":"291","line":167,"column":7,"nodeType":"268","messageId":"292","endLine":167,"endColumn":20},{"ruleId":"290","severity":1,"message":"291","line":169,"column":7,"nodeType":"268","messageId":"292","endLine":169,"endColumn":20},{"ruleId":"286","severity":1,"message":"293","line":177,"column":11,"nodeType":"268","messageId":"288","endLine":177,"endColumn":12},{"ruleId":"286","severity":1,"message":"294","line":178,"column":11,"nodeType":"268","messageId":"288","endLine":178,"endColumn":12},{"ruleId":"286","severity":1,"message":"295","line":179,"column":11,"nodeType":"268","messageId":"288","endLine":179,"endColumn":12},{"ruleId":"286","severity":1,"message":"296","line":180,"column":11,"nodeType":"268","messageId":"288","endLine":180,"endColumn":12},{"ruleId":"266","severity":1,"message":"299","line":161,"column":9,"nodeType":"268","messageId":"269","endLine":161,"endColumn":17},{"ruleId":"266","severity":1,"message":"299","line":216,"column":9,"nodeType":"268","messageId":"269","endLine":216,"endColumn":17},{"ruleId":"286","severity":1,"message":"300","line":263,"column":9,"nodeType":"268","messageId":"288","endLine":263,"endColumn":17},{"ruleId":"266","severity":1,"message":"301","line":9,"column":9,"nodeType":"268","messageId":"269","endLine":9,"endColumn":18},{"ruleId":"266","severity":1,"message":"277","line":14,"column":3,"nodeType":"268","messageId":"269","endLine":14,"endColumn":8},{"ruleId":"266","severity":1,"message":"280","line":21,"column":3,"nodeType":"268","messageId":"269","endLine":21,"endColumn":18},{"ruleId":"266","severity":1,"message":"302","line":76,"column":8,"nodeType":"268","messageId":"269","endLine":76,"endColumn":9},{"ruleId":"266","severity":1,"message":"303","line":76,"column":12,"nodeType":"268","messageId":"269","endLine":76,"endColumn":13},{"ruleId":"304","severity":1,"message":"305","line":76,"column":17,"nodeType":"306","messageId":"307","endLine":76,"endColumn":22},{"ruleId":"266","severity":1,"message":"308","line":138,"column":7,"nodeType":"268","messageId":"269","endLine":138,"endColumn":31},{"ruleId":"309","severity":1,"message":"310","line":269,"column":3,"nodeType":"311","messageId":"312","endLine":271,"endColumn":4},{"ruleId":"266","severity":1,"message":"276","line":3,"column":5,"nodeType":"268","messageId":"269","endLine":3,"endColumn":9},{"ruleId":"266","severity":1,"message":"277","line":6,"column":5,"nodeType":"268","messageId":"269","endLine":6,"endColumn":10},{"ruleId":"266","severity":1,"message":"278","line":7,"column":5,"nodeType":"268","messageId":"269","endLine":7,"endColumn":13},{"ruleId":"266","severity":1,"message":"279","line":9,"column":5,"nodeType":"268","messageId":"269","endLine":9,"endColumn":9},{"ruleId":"266","severity":1,"message":"280","line":13,"column":5,"nodeType":"268","messageId":"269","endLine":13,"endColumn":20},{"ruleId":"290","severity":1,"message":"313","line":95,"column":9,"nodeType":"268","messageId":"292","endLine":95,"endColumn":21},{"ruleId":"290","severity":1,"message":"313","line":99,"column":27,"nodeType":"268","messageId":"292","endLine":99,"endColumn":39},{"ruleId":"286","severity":1,"message":"314","line":425,"column":13,"nodeType":"268","messageId":"288","endLine":425,"endColumn":14},{"ruleId":"266","severity":1,"message":"277","line":5,"column":5,"nodeType":"268","messageId":"269","endLine":5,"endColumn":10},{"ruleId":"266","severity":1,"message":"315","line":14,"column":7,"nodeType":"268","messageId":"269","endLine":14,"endColumn":13},{"ruleId":"316","severity":1,"message":"317","line":189,"column":13,"nodeType":"318","messageId":"319","endLine":189,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":190,"column":22,"nodeType":"318","messageId":"319","endLine":190,"endColumn":26},{"ruleId":"316","severity":1,"message":"317","line":192,"column":37,"nodeType":"318","messageId":"319","endLine":192,"endColumn":41},{"ruleId":"316","severity":1,"message":"317","line":194,"column":33,"nodeType":"318","messageId":"319","endLine":194,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":196,"column":37,"nodeType":"318","messageId":"319","endLine":196,"endColumn":41},{"ruleId":"316","severity":1,"message":"317","line":197,"column":37,"nodeType":"318","messageId":"319","endLine":197,"endColumn":41},{"ruleId":"316","severity":1,"message":"317","line":198,"column":33,"nodeType":"318","messageId":"319","endLine":198,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":200,"column":33,"nodeType":"318","messageId":"319","endLine":200,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":201,"column":33,"nodeType":"318","messageId":"319","endLine":201,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":241,"column":29,"nodeType":"318","messageId":"319","endLine":241,"endColumn":33},{"ruleId":"316","severity":1,"message":"317","line":242,"column":29,"nodeType":"318","messageId":"319","endLine":242,"endColumn":33},{"ruleId":"316","severity":1,"message":"317","line":243,"column":29,"nodeType":"318","messageId":"319","endLine":243,"endColumn":33},{"ruleId":"316","severity":1,"message":"317","line":248,"column":33,"nodeType":"318","messageId":"319","endLine":248,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":249,"column":33,"nodeType":"318","messageId":"319","endLine":249,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":250,"column":33,"nodeType":"318","messageId":"319","endLine":250,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":251,"column":33,"nodeType":"318","messageId":"319","endLine":251,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":256,"column":23,"nodeType":"318","messageId":"319","endLine":256,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":257,"column":23,"nodeType":"318","messageId":"319","endLine":257,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":258,"column":23,"nodeType":"318","messageId":"319","endLine":258,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":259,"column":23,"nodeType":"318","messageId":"319","endLine":259,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":265,"column":23,"nodeType":"318","messageId":"319","endLine":265,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":266,"column":23,"nodeType":"318","messageId":"319","endLine":266,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":267,"column":23,"nodeType":"318","messageId":"319","endLine":267,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":268,"column":23,"nodeType":"318","messageId":"319","endLine":268,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":274,"column":23,"nodeType":"318","messageId":"319","endLine":274,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":275,"column":23,"nodeType":"318","messageId":"319","endLine":275,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":276,"column":23,"nodeType":"318","messageId":"319","endLine":276,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":277,"column":23,"nodeType":"318","messageId":"319","endLine":277,"endColumn":27},{"ruleId":"286","severity":1,"message":"320","line":283,"column":7,"nodeType":"268","messageId":"288","endLine":283,"endColumn":11},{"ruleId":"316","severity":1,"message":"317","line":319,"column":21,"nodeType":"318","messageId":"319","endLine":319,"endColumn":25},{"ruleId":"316","severity":1,"message":"317","line":320,"column":21,"nodeType":"318","messageId":"319","endLine":320,"endColumn":25},{"ruleId":"316","severity":1,"message":"317","line":321,"column":21,"nodeType":"318","messageId":"319","endLine":321,"endColumn":25},{"ruleId":"316","severity":1,"message":"317","line":322,"column":21,"nodeType":"318","messageId":"319","endLine":322,"endColumn":25},{"ruleId":"316","severity":1,"message":"317","line":328,"column":18,"nodeType":"318","messageId":"319","endLine":328,"endColumn":22},{"ruleId":"316","severity":1,"message":"317","line":328,"column":53,"nodeType":"318","messageId":"319","endLine":328,"endColumn":57},{"ruleId":"316","severity":1,"message":"317","line":328,"column":88,"nodeType":"318","messageId":"319","endLine":328,"endColumn":92},{"ruleId":"316","severity":1,"message":"317","line":328,"column":123,"nodeType":"318","messageId":"319","endLine":328,"endColumn":127},{"ruleId":"316","severity":1,"message":"317","line":333,"column":37,"nodeType":"318","messageId":"319","endLine":333,"endColumn":41},{"ruleId":"316","severity":1,"message":"317","line":335,"column":33,"nodeType":"318","messageId":"319","endLine":335,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":338,"column":37,"nodeType":"318","messageId":"319","endLine":338,"endColumn":41},{"ruleId":"316","severity":1,"message":"317","line":339,"column":33,"nodeType":"318","messageId":"319","endLine":339,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":340,"column":33,"nodeType":"318","messageId":"319","endLine":340,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":341,"column":33,"nodeType":"318","messageId":"319","endLine":341,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":342,"column":33,"nodeType":"318","messageId":"319","endLine":342,"endColumn":37},{"ruleId":"316","severity":1,"message":"317","line":374,"column":23,"nodeType":"318","messageId":"319","endLine":374,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":375,"column":23,"nodeType":"318","messageId":"319","endLine":375,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":376,"column":23,"nodeType":"318","messageId":"319","endLine":376,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":377,"column":23,"nodeType":"318","messageId":"319","endLine":377,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":382,"column":23,"nodeType":"318","messageId":"319","endLine":382,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":383,"column":23,"nodeType":"318","messageId":"319","endLine":383,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":383,"column":37,"nodeType":"318","messageId":"319","endLine":383,"endColumn":41},{"ruleId":"316","severity":1,"message":"317","line":384,"column":23,"nodeType":"318","messageId":"319","endLine":384,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":384,"column":37,"nodeType":"318","messageId":"319","endLine":384,"endColumn":41},{"ruleId":"316","severity":1,"message":"317","line":385,"column":23,"nodeType":"318","messageId":"319","endLine":385,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":385,"column":37,"nodeType":"318","messageId":"319","endLine":385,"endColumn":41},{"ruleId":"316","severity":1,"message":"317","line":391,"column":8,"nodeType":"318","messageId":"319","endLine":391,"endColumn":12},{"ruleId":"316","severity":1,"message":"317","line":391,"column":40,"nodeType":"318","messageId":"319","endLine":391,"endColumn":44},{"ruleId":"316","severity":1,"message":"317","line":392,"column":8,"nodeType":"318","messageId":"319","endLine":392,"endColumn":12},{"ruleId":"316","severity":1,"message":"317","line":392,"column":40,"nodeType":"318","messageId":"319","endLine":392,"endColumn":44},{"ruleId":"316","severity":1,"message":"317","line":392,"column":54,"nodeType":"318","messageId":"319","endLine":392,"endColumn":58},{"ruleId":"316","severity":1,"message":"317","line":393,"column":8,"nodeType":"318","messageId":"319","endLine":393,"endColumn":12},{"ruleId":"316","severity":1,"message":"317","line":393,"column":40,"nodeType":"318","messageId":"319","endLine":393,"endColumn":44},{"ruleId":"316","severity":1,"message":"317","line":393,"column":54,"nodeType":"318","messageId":"319","endLine":393,"endColumn":58},{"ruleId":"316","severity":1,"message":"317","line":394,"column":8,"nodeType":"318","messageId":"319","endLine":394,"endColumn":12},{"ruleId":"316","severity":1,"message":"317","line":394,"column":40,"nodeType":"318","messageId":"319","endLine":394,"endColumn":44},{"ruleId":"316","severity":1,"message":"317","line":394,"column":54,"nodeType":"318","messageId":"319","endLine":394,"endColumn":58},{"ruleId":"316","severity":1,"message":"317","line":407,"column":23,"nodeType":"318","messageId":"319","endLine":407,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":408,"column":23,"nodeType":"318","messageId":"319","endLine":408,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":409,"column":23,"nodeType":"318","messageId":"319","endLine":409,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":410,"column":23,"nodeType":"318","messageId":"319","endLine":410,"endColumn":27},{"ruleId":"286","severity":1,"message":"320","line":414,"column":7,"nodeType":"268","messageId":"288","endLine":414,"endColumn":11},{"ruleId":"266","severity":1,"message":"321","line":1,"column":9,"nodeType":"268","messageId":"269","endLine":1,"endColumn":17},{"ruleId":"266","severity":1,"message":"322","line":2,"column":20,"nodeType":"268","messageId":"269","endLine":2,"endColumn":23},{"ruleId":"266","severity":1,"message":"323","line":4,"column":16,"nodeType":"268","messageId":"269","endLine":4,"endColumn":30},{"ruleId":"266","severity":1,"message":"324","line":56,"column":7,"nodeType":"268","messageId":"269","endLine":56,"endColumn":24},{"ruleId":"286","severity":1,"message":"325","line":158,"column":9,"nodeType":"268","messageId":"288","endLine":158,"endColumn":15},{"ruleId":"266","severity":1,"message":"326","line":164,"column":9,"nodeType":"268","messageId":"269","endLine":164,"endColumn":21},{"ruleId":"266","severity":1,"message":"327","line":166,"column":9,"nodeType":"268","messageId":"269","endLine":166,"endColumn":11},{"ruleId":"266","severity":1,"message":"328","line":171,"column":9,"nodeType":"268","messageId":"269","endLine":171,"endColumn":17},{"ruleId":"266","severity":1,"message":"326","line":202,"column":9,"nodeType":"268","messageId":"269","endLine":202,"endColumn":21},{"ruleId":"266","severity":1,"message":"327","line":204,"column":9,"nodeType":"268","messageId":"269","endLine":204,"endColumn":11},{"ruleId":"286","severity":1,"message":"329","line":207,"column":9,"nodeType":"268","messageId":"288","endLine":207,"endColumn":14},{"ruleId":"266","severity":1,"message":"328","line":209,"column":9,"nodeType":"268","messageId":"269","endLine":209,"endColumn":17},{"ruleId":"266","severity":1,"message":"327","line":253,"column":9,"nodeType":"268","messageId":"269","endLine":253,"endColumn":11},{"ruleId":"266","severity":1,"message":"327","line":284,"column":9,"nodeType":"268","messageId":"269","endLine":284,"endColumn":11},{"ruleId":"266","severity":1,"message":"330","line":83,"column":23,"nodeType":"268","messageId":"269","endLine":83,"endColumn":27},{"ruleId":"266","severity":1,"message":"331","line":86,"column":37,"nodeType":"268","messageId":"269","endLine":86,"endColumn":45},{"ruleId":"286","severity":1,"message":"329","line":95,"column":13,"nodeType":"268","messageId":"288","endLine":95,"endColumn":18},{"ruleId":"286","severity":1,"message":"332","line":97,"column":13,"nodeType":"268","messageId":"288","endLine":97,"endColumn":18},{"ruleId":"266","severity":1,"message":"273","line":117,"column":19,"nodeType":"268","messageId":"269","endLine":117,"endColumn":26},{"ruleId":"266","severity":1,"message":"273","line":139,"column":19,"nodeType":"268","messageId":"269","endLine":139,"endColumn":26},{"ruleId":"266","severity":1,"message":"333","line":1,"column":10,"nodeType":"268","messageId":"269","endLine":1,"endColumn":22},{"ruleId":"266","severity":1,"message":"334","line":1,"column":24,"nodeType":"268","messageId":"269","endLine":1,"endColumn":33},{"ruleId":"335","severity":1,"message":"336","line":141,"column":13,"nodeType":"337","endLine":141,"endColumn":33},{"ruleId":"335","severity":1,"message":"336","line":216,"column":13,"nodeType":"337","endLine":216,"endColumn":46},{"ruleId":"266","severity":1,"message":"333","line":1,"column":9,"nodeType":"268","messageId":"269","endLine":1,"endColumn":21},{"ruleId":"266","severity":1,"message":"334","line":1,"column":23,"nodeType":"268","messageId":"269","endLine":1,"endColumn":32},{"ruleId":"266","severity":1,"message":"338","line":1,"column":41,"nodeType":"268","messageId":"269","endLine":1,"endColumn":49},{"ruleId":"266","severity":1,"message":"339","line":1,"column":10,"nodeType":"268","messageId":"269","endLine":1,"endColumn":12},{"ruleId":"266","severity":1,"message":"322","line":3,"column":66,"nodeType":"268","messageId":"269","endLine":3,"endColumn":69},{"ruleId":"266","severity":1,"message":"340","line":4,"column":5,"nodeType":"268","messageId":"269","endLine":4,"endColumn":6},{"ruleId":"286","severity":1,"message":"341","line":20,"column":13,"nodeType":"268","messageId":"288","endLine":20,"endColumn":21},{"ruleId":"286","severity":1,"message":"342","line":26,"column":13,"nodeType":"268","messageId":"288","endLine":26,"endColumn":16},{"ruleId":"286","severity":1,"message":"325","line":27,"column":13,"nodeType":"268","messageId":"288","endLine":27,"endColumn":19},{"ruleId":"286","severity":1,"message":"343","line":28,"column":13,"nodeType":"268","messageId":"288","endLine":28,"endColumn":20},{"ruleId":"286","severity":1,"message":"344","line":29,"column":13,"nodeType":"268","messageId":"288","endLine":29,"endColumn":20},{"ruleId":"266","severity":1,"message":"345","line":33,"column":7,"nodeType":"268","messageId":"269","endLine":33,"endColumn":18},{"ruleId":"286","severity":1,"message":"325","line":96,"column":13,"nodeType":"268","messageId":"288","endLine":96,"endColumn":19},{"ruleId":"286","severity":1,"message":"343","line":96,"column":21,"nodeType":"268","messageId":"288","endLine":96,"endColumn":28},{"ruleId":"286","severity":1,"message":"344","line":97,"column":12,"nodeType":"268","messageId":"288","endLine":97,"endColumn":19},{"ruleId":"286","severity":1,"message":"325","line":99,"column":14,"nodeType":"268","messageId":"288","endLine":99,"endColumn":20},{"ruleId":"286","severity":1,"message":"343","line":99,"column":22,"nodeType":"268","messageId":"288","endLine":99,"endColumn":29},{"ruleId":"286","severity":1,"message":"344","line":100,"column":13,"nodeType":"268","messageId":"288","endLine":100,"endColumn":20},{"ruleId":"286","severity":1,"message":"325","line":102,"column":14,"nodeType":"268","messageId":"288","endLine":102,"endColumn":20},{"ruleId":"286","severity":1,"message":"343","line":102,"column":22,"nodeType":"268","messageId":"288","endLine":102,"endColumn":29},{"ruleId":"286","severity":1,"message":"344","line":103,"column":13,"nodeType":"268","messageId":"288","endLine":103,"endColumn":20},{"ruleId":"286","severity":1,"message":"346","line":104,"column":13,"nodeType":"268","messageId":"288","endLine":104,"endColumn":17},{"ruleId":"286","severity":1,"message":"325","line":106,"column":10,"nodeType":"268","messageId":"288","endLine":106,"endColumn":16},{"ruleId":"286","severity":1,"message":"343","line":106,"column":18,"nodeType":"268","messageId":"288","endLine":106,"endColumn":25},{"ruleId":"286","severity":1,"message":"344","line":106,"column":27,"nodeType":"268","messageId":"288","endLine":106,"endColumn":34},{"ruleId":"286","severity":1,"message":"325","line":129,"column":14,"nodeType":"268","messageId":"288","endLine":129,"endColumn":20},{"ruleId":"286","severity":1,"message":"343","line":129,"column":22,"nodeType":"268","messageId":"288","endLine":129,"endColumn":29},{"ruleId":"286","severity":1,"message":"344","line":130,"column":13,"nodeType":"268","messageId":"288","endLine":130,"endColumn":20},{"ruleId":"266","severity":1,"message":"333","line":1,"column":9,"nodeType":"268","messageId":"269","endLine":1,"endColumn":21},{"ruleId":"266","severity":1,"message":"334","line":1,"column":23,"nodeType":"268","messageId":"269","endLine":1,"endColumn":32},"no-native-reassign",["347"],"no-negated-in-lhs",["348"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'html2canvas' is defined but never used.","'jsPDF' is defined but never used.","'tableSnap' is assigned a value but never used.","'numberM' is assigned a value but never used.","'name' is assigned a value but never used.","'year' is assigned a value but never used.","'Page' is defined but never used.","'Image' is defined but never used.","'Document' is defined but never used.","'Font' is defined but never used.","'PDFDownloadLink' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'tstyles' is assigned a value but never used.","no-redeclare","'$' is already defined.","redeclared","'unit' is already defined.","no-use-before-define","'correctAnswer' was used before it was defined.","usedBeforeDefined","'A' is already defined.","'B' is already defined.","'C' is already defined.","'D' is already defined.","'E' is already defined.","'E' is assigned a value but never used.","'dividend' is assigned a value but never used.","'numberM2' is already defined.","'randWhole' is defined but never used.","'n' is assigned a value but never used.","'x' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","'createQAListTableAnswers' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'randDecimal2' was used before it was defined.","'w' is already defined.","'styles' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'text' is already defined.","'Fraction' is defined but never used.","'cap' is defined but never used.","'sanitize_block' is defined but never used.","'verticalFractions' is assigned a value but never used.","'answer' is already defined.","'mixedNumber1' is assigned a value but never used.","'AC' is assigned a value but never used.","'randProb' is assigned a value but never used.","'prob1' is already defined.","'mass' is assigned a value but never used.","'numberL2' is assigned a value but never used.","'prob2' is already defined.","'defaultProps' is defined but never used.","'PropTypes' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Fragment' is defined but never used.","'to' is defined but never used.","'e' is assigned a value but never used.","'numArray' is already defined.","'num' is already defined.","'numberS' is already defined.","'numberL' is already defined.","'divideWhole' is assigned a value but never used.","'item' is already defined.","no-global-assign","no-unsafe-negation"]