[{"C:\\projects\\worksheet-creator\\src\\index.js":"1","C:\\projects\\worksheet-creator\\src\\reportWebVitals.js":"2","C:\\projects\\worksheet-creator\\src\\App.js":"3","C:\\projects\\worksheet-creator\\src\\general\\pages\\home.js":"4","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\DisplayUserSelection.js":"5","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\ConceptCustomization.js":"6","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\DisplayAssignment.js":"7","C:\\projects\\worksheet-creator\\src\\shared\\context\\auth-context.js":"8","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\ConceptSelection.js":"9","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\FinalSelections.js":"10","C:\\projects\\worksheet-creator\\src\\user\\pages\\Authenticate.js":"11","C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\MainNavigation.js":"12","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\input.js":"13","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\ConceptGeneral.js":"14","C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\NavLinks.js":"15","C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\SideDrawer.js":"16","C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\MainHeader.js":"17","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\dec-alg.js":"18","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub-fract.js":"19","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\multiply-dec.js":"20","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub-dec.js":"21","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub.js":"22","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\divide-dec.js":"23","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\general.js":"24","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\multiply.js":"25","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\area-perimeter.js":"26","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\tables.js":"27","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\divide.js":"28","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Card.js":"29","C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\Input.js":"30","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Backdrop.js":"31","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\LoadingSpinner.js":"32","C:\\projects\\worksheet-creator\\src\\shared\\hooks\\form-hook.js":"33","C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\ImageUpload.js":"34","C:\\projects\\worksheet-creator\\src\\shared\\hooks\\http-hook.js":"35","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\ErrorModal.js":"36","C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\Button.js":"37","C:\\projects\\worksheet-creator\\src\\shared\\util\\validators.js":"38","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\Table.js":"39","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\vertical-align.js":"40","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Modal.js":"41","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\order-of-ops.js":"42","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\UserWorksheets.js":"43","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetList.js":"44","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetItem.js":"45","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Map.js":"46","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetData.js":"47","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Avatar.js":"48","C:\\projects\\worksheet-creator\\src\\general\\pages\\Teachers.js":"49","C:\\projects\\worksheet-creator\\src\\general\\pages\\Parents.js":"50","C:\\projects\\worksheet-creator\\src\\general\\pages\\Schools.js":"51","C:\\projects\\worksheet-creator\\src\\general\\pages\\Home.js":"52","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\fract-shared.js":"53","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\divide-fract.js":"54","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\multiply-fract.js":"55","C:\\projects\\worksheet-creator\\src\\worksheet\\functions\\createWorksheet.js":"56","C:\\projects\\worksheet-creator\\src\\worksheet\\functions\\conceptCheck.js":"57"},{"size":589,"mtime":1614919476796,"results":"58","hashOfConfig":"59"},{"size":362,"mtime":499162500000,"results":"60","hashOfConfig":"59"},{"size":12538,"mtime":1615946181885,"results":"61","hashOfConfig":"59"},{"size":2859,"mtime":1615838929345,"results":"62","hashOfConfig":"59"},{"size":1526,"mtime":1615778345920,"results":"63","hashOfConfig":"59"},{"size":13853,"mtime":1615929465976,"results":"64","hashOfConfig":"59"},{"size":1742,"mtime":1615903741853,"results":"65","hashOfConfig":"59"},{"size":203,"mtime":1615740983111,"results":"66","hashOfConfig":"59"},{"size":2570,"mtime":1615769744430,"results":"67","hashOfConfig":"59"},{"size":3496,"mtime":1615940487203,"results":"68","hashOfConfig":"59"},{"size":4808,"mtime":1615768129801,"results":"69","hashOfConfig":"59"},{"size":1380,"mtime":1615825851964,"results":"70","hashOfConfig":"59"},{"size":973,"mtime":1614919476781,"results":"71","hashOfConfig":"59"},{"size":1763,"mtime":1615772272375,"results":"72","hashOfConfig":"59"},{"size":2676,"mtime":1615917061521,"results":"73","hashOfConfig":"59"},{"size":609,"mtime":1614912226692,"results":"74","hashOfConfig":"59"},{"size":287,"mtime":1614912226631,"results":"75","hashOfConfig":"59"},{"size":2255,"mtime":1614919476781,"results":"76","hashOfConfig":"59"},{"size":4673,"mtime":1615933815134,"results":"77","hashOfConfig":"59"},{"size":14894,"mtime":1615925542493,"results":"78","hashOfConfig":"59"},{"size":7217,"mtime":1615925542493,"results":"79","hashOfConfig":"59"},{"size":28110,"mtime":1615936841324,"results":"80","hashOfConfig":"59"},{"size":17705,"mtime":1615925542493,"results":"81","hashOfConfig":"59"},{"size":10847,"mtime":1615907036834,"results":"82","hashOfConfig":"59"},{"size":14527,"mtime":1615925542493,"results":"83","hashOfConfig":"59"},{"size":4814,"mtime":1615848191927,"results":"84","hashOfConfig":"59"},{"size":19947,"mtime":1615918129878,"results":"85","hashOfConfig":"59"},{"size":12308,"mtime":1615925542493,"results":"86","hashOfConfig":"59"},{"size":217,"mtime":1614912226736,"results":"87","hashOfConfig":"59"},{"size":2100,"mtime":1614912226615,"results":"88","hashOfConfig":"59"},{"size":289,"mtime":1614912226722,"results":"89","hashOfConfig":"59"},{"size":286,"mtime":1614912226759,"results":"90","hashOfConfig":"59"},{"size":1545,"mtime":1614912226797,"results":"91","hashOfConfig":"59"},{"size":1794,"mtime":1614912226597,"results":"92","hashOfConfig":"59"},{"size":1390,"mtime":1614912226798,"results":"93","hashOfConfig":"59"},{"size":407,"mtime":1614912226744,"results":"94","hashOfConfig":"59"},{"size":1017,"mtime":1614912226577,"results":"95","hashOfConfig":"59"},{"size":1710,"mtime":1614912226799,"results":"96","hashOfConfig":"59"},{"size":1169,"mtime":1615937681719,"results":"97","hashOfConfig":"59"},{"size":4586,"mtime":1615936841324,"results":"98","hashOfConfig":"59"},{"size":1330,"mtime":1614912226788,"results":"99","hashOfConfig":"59"},{"size":19492,"mtime":1615645956534,"results":"100","hashOfConfig":"59"},{"size":1996,"mtime":1615821188226,"results":"101","hashOfConfig":"59"},{"size":1341,"mtime":1615737639471,"results":"102","hashOfConfig":"59"},{"size":2969,"mtime":1615820758819,"results":"103","hashOfConfig":"59"},{"size":981,"mtime":1614912226773,"results":"104","hashOfConfig":"59"},{"size":4470,"mtime":1615836570286,"results":"105","hashOfConfig":"59"},{"size":332,"mtime":1614912226707,"results":"106","hashOfConfig":"59"},{"size":3256,"mtime":1615843190090,"results":"107","hashOfConfig":"59"},{"size":3093,"mtime":1615843190090,"results":"108","hashOfConfig":"59"},{"size":3368,"mtime":1615843190090,"results":"109","hashOfConfig":"59"},{"size":2859,"mtime":1615838929345,"results":"110","hashOfConfig":"59"},{"size":4743,"mtime":1615935436555,"results":"111","hashOfConfig":"59"},{"size":2025,"mtime":1615933815103,"results":"112","hashOfConfig":"59"},{"size":1724,"mtime":1615935633225,"results":"113","hashOfConfig":"59"},{"size":8417,"mtime":1615946879556,"results":"114","hashOfConfig":"59"},{"size":2106,"mtime":1615946181885,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"ahlkum",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"118"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"118"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"118"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\worksheet-creator\\src\\index.js",[],["243","244"],"C:\\projects\\worksheet-creator\\src\\reportWebVitals.js",[],"C:\\projects\\worksheet-creator\\src\\App.js",["245","246","247","248","249","250","251","252","253","254","255","256"],"C:\\projects\\worksheet-creator\\src\\general\\pages\\home.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\components\\DisplayUserSelection.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\ConceptCustomization.js",["257"],"C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\DisplayAssignment.js",["258","259","260","261","262","263"]," import {Link} from \"react-router-dom\";\r\nimport { React, useEffect, useRef, useContext } from \"react\";\r\nimport {AuthContext} from '../../shared/context/auth-context'\r\nimport {useHttpClient} from '../../shared/hooks/http-hook'\r\nimport './DisplayAssignment.css'\r\nimport './CustomizeGeneral.css'\r\n\r\n\r\n\r\nconst DisplayAssignment = (props) => {\r\n    const auth = useContext(AuthContext);\r\n    const initialRender = useRef(true);\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    // useEffect(()=> {\r\n    //     if (initialRender.current) {\r\n    //         initialRender.current = false;\r\n    //     } else {\r\n    //         props.handlePDFViewerTrigger('copy')\r\n    //         console.log(props.createdWorksheetState)\r\n    //     }\r\n\r\n    // }, [props.createdWorksheetState])\r\n    // useEffect(()=> {\r\n    //     if (initialRender.current) {\r\n    //         initialRender.current = false;\r\n    //     } else {\r\n    //         props.handlePDFViewerTrigger('new')\r\n\r\n    //     }\r\n    // }, [props.userSelection])\r\n    return (\r\n        <div className=\"main-container display-assignment-container\"> \r\n            \r\n            <Link className=\"general-button-link\" to=\"/concept-selection\">\r\n                 <button className='general-button'\r\n                    onClick= {props.handleClearSelections}>\r\n                        Make another assignment\r\n                </button>\r\n\r\n            </Link>\r\n            <Link className=\"general-button-link\" to= '/display-assignment'>\r\n                  <button className='general-button' onClick={props.handlePDFViewerTrigger}>Make another version of this assignment</button>\r\n            </Link>\r\n\r\n\r\n            \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DisplayAssignment","C:\\projects\\worksheet-creator\\src\\shared\\context\\auth-context.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\ConceptSelection.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\FinalSelections.js",["264","265","266","267","268","269"],"import { Link } from \"react-router-dom\";\r\nimport { React } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport BackArrow from '../../app-files/images/previous-button.svg'\r\n\r\nimport Input from \"../components/input.js\";\r\nimport DisplayUserSelection from \"../components/DisplayUserSelection\";\r\nimport \"./FinalSelections.css\";\r\nimport \"./CustomizeGeneral.css\";\r\n\r\nconst FinalSelections = (props) => {\r\n  return (\r\n    <div className=\"main-container final-selection-container \">\r\n      <div className=\"concept-back-arrow\">\r\n        <Link to=\"/concept-selection\">\r\n          <button onClick={props.handleClearInput}>\r\n            <img className=\"back-arrow\" src={BackArrow} alt=\"back\"></img>\r\n          </button>\r\n        </Link>\r\n        <h1>General Customization</h1>\r\n      </div>\r\n      <div className=\"selection-container\">\r\n        <TextField\r\n          variant=\"filled\"\r\n          id=\"filled-basic\"\r\n          label={<span className=\"\">Document Title</span>}\r\n          name=\"docTitle\"\r\n          type=\"text\"\r\n          value={props.generalSelection.docTitle}\r\n          onChange={props.handleInput}\r\n          placeholder=\"\"\r\n          required\r\n          className=\"doc-title-input\"\r\n          min=\"1\"\r\n          max=\"50\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              name=\"order\"\r\n              value={props.generalSelection.order}\r\n              onChange={props.handleInput}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          className=\"checkbox-space\"\r\n          label={<span className=\"checkbox\"> Mix Up Concepts</span>}\r\n        />{\" \"}\r\n        <br />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              name=\"docStyle\"\r\n              value={props.generalSelection.docStyle}\r\n              onChange={props.handleInput}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label={\r\n            <span className=\"checkbox\"> Columns (Fit more on a page)</span>\r\n          }\r\n        />{\" \"}\r\n        <br />\r\n      </div>\r\n      <div>\r\n        <Link to=\"/display-assignment\" className=\"general-button-link\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"general-button\"\r\n            onClick={props.handlePDFViewerTrigger}\r\n          >\r\n            Create your assignment\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalSelections;\r\n\r\n\r\n  /* <label className=\"final-title\" htmlFor=\"level\">\r\n        Document Title:\r\n      </label> */\r\n\r\n  /* <input\r\n        type=\"text\"\r\n        className=\"doc-title-input\"\r\n        id=\"docTitle\"\r\n        value={props.generalSelection.docTitle}\r\n        // onChange={props.handleInputTitle}\r\n        onChange={props.handleInput}\r\n        name=\"docTitle\"\r\n      /> */\r\n\r\n  /* <Input\r\n        label=\"Mix up questions:\"\r\n        name=\"order\"\r\n        type=\"checkbox\"\r\n        value={props.generalSelection.order}\r\n        // onChange={props.handleOrder}\r\n        onChange={props.handleInput}\r\n        className=\"input final-title\"\r\n      /> */\r\n\r\n  /* <Input\r\n        label=\"Columns:\"\r\n        name=\"docStyle\"\r\n        type=\"checkbox\"\r\n        value={props.generalSelection.docStyle}\r\n        // onChange={props.handleDocStyle}\r\n        onChange={props.handleInput}\r\n        className=\"input final-title\"\r\n      /> */\r\n\r\n","C:\\projects\\worksheet-creator\\src\\user\\pages\\Authenticate.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\MainNavigation.js",["270"],"C:\\projects\\worksheet-creator\\src\\worksheet\\components\\input.js",["271","272","273"],"import { React} from 'react'\r\nconst Input = ({\r\n  name,\r\n  type,\r\n  placeholder,\r\n  onChange,\r\n  className,\r\n  value,\r\n  error,\r\n  children,\r\n  label,\r\n  min,\r\n  max,\r\n  ...props\r\n}) => {\r\n  \r\n  return (\r\n    <div>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        value={value}\r\n        className={className}\r\n        style={error && {border: 'solid 1px red'}}\r\n        min= {min}\r\n        max={max}\r\n      />\r\n      { error && <p>{ error }</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nInput.defaultProps = {\r\n  type: \"text\",\r\n  className: \"\"\r\n}\r\n// Input.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   type: PropTypes.string,\r\n//   type: PropTypes.oneOf(['text', 'number', 'password', 'checkbox']),\r\n//   className: PropTypes.string,\r\n//   value: PropTypes.any,\r\n//   onChange: PropTypes.func.isRequired\r\n// }\r\nexport default Input","C:\\projects\\worksheet-creator\\src\\worksheet\\components\\ConceptGeneral.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\NavLinks.js",["274","275","276","277","278","279","280","281"],"C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\SideDrawer.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\Navigation\\MainHeader.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\dec-alg.js",["282","283"],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub-fract.js",["284","285","286","287","288","289"],"import {randWhole, shuffleArray} from './general.js'\r\nimport {cell_style_fraction, tstyles, horizontalFractions, verticalFractions } from './fract-shared'\r\nimport './problems.css';\r\nimport Table from './Table.js'\r\nimport {Text,View,StyleSheet,} from \"@react-pdf/renderer\";\r\n  const { create, all } = require('mathjs')\r\nconst config = {\r\n// Default type of number\r\n// Available options: 'number' (default), 'BigNumber', or 'Fraction'\r\n    number: 'Fraction'\r\n}\r\nconst math = create(all, config)\r\n\r\nexport const fractionNumbers = (userSelection) => {\r\n    var numerator1 = randWhole(1,8)\r\n    var denominator1 = randWhole(numerator1+1,10)\r\n    var numden2 = []\r\n    if (userSelection['Common Denominators']) {\r\n      var numerator2 = randWhole(1, denominator1-1)\r\n      numden2.push([numerator2,denominator1])\r\n    }\r\n    if (userSelection['Uncommon Denominators']) {\r\n      if (denominator1 > 5) {\r\n          var denominator2 = denominator1-randWhole(1,4)\r\n      } else if (denominator1 === 5) {\r\n          denominator2 = denominator1-randWhole(1,3)\r\n      } else {\r\n        denominator2 = denominator1+randWhole(1, 5)\r\n      }\r\n      numerator2 = randWhole(1, denominator2-1)\r\n      numden2.push([numerator2,denominator2])\r\n    }\r\n    [numerator2, denominator2] = shuffleArray(numden2)[0]\r\n\r\n  return [numerator1, denominator1, numerator2, denominator2]      \r\n}\r\n\r\nexport const addFract = (userSelection) => {\r\n    var numberList = fractionNumbers(userSelection)\r\n    var whole = randWhole(1,4)\r\n    var [num1, denom1, num2, denom2] = [numberList[0], numberList[1], numberList[2], numberList[3]]\r\n    var fract1 = math.fraction(`${num1}/${denom1}`)\r\n    var fract2 = math.fraction(`${num2}/${denom2}`)\r\n    var answer = math.format(math.add(fract1, fract2))\r\n\r\n    var styledFract1 = Table([[num1],[denom1]], cell_style_fraction, tstyles)\r\n    var styledFract2 = Table([[num2],[denom2]], cell_style_fraction, tstyles)\r\n    // var mixedNumber1 = Table([['hi', num1],[whole, denom1]], cell_style_mixednumber, tstyles)\r\n\r\n    // var AC = [answer, 'this is wrong', 'this is wrong2', 'this is wrong3']\r\n    // var prob1 = (`${math.format(fract1)}+${math.format(fract2)}`)\r\n    // var prob1 = <View>{styledFract1}<Text>+</Text>{styledFract2}</View>\r\n    if (userSelection.probStyle==='Vertical') {\r\n        var prob1 = verticalFractions(styledFract1, styledFract2, <Text>+</Text>)\r\n    } else {\r\n        var prob1 = horizontalFractions(styledFract1, styledFract2, <Text>+</Text>)\r\n\r\n    }\r\n    // var prob2 = (`${math.format(fract2)}+${math.format(fract1)}`)\r\n    // var randProb = [prob1.toString(), prob2.toString()][randWhole(0,1)]\r\n    \r\n    var problem = {text: prob1,\r\n        answerChoices: ['','','','', answer],\r\n        correctAnswer: answer}\r\n    return problem\r\n}\r\nexport const subFract = (userSelection) => {\r\n    var numberList = fractionNumbers(userSelection)\r\n    var whole = randWhole(1,4)\r\n    var [num1, denom1, num2, denom2] = [numberList[0], numberList[1], numberList[2], numberList[3]]\r\n    var fract1 = math.fraction(`${num1}/${denom1}`)\r\n    var fract2 = math.fraction(`${num2}/${denom2}`)\r\n    // var answer = math.format(math.subtract(fract1, fract2))\r\n    // var answer = math.format(math.subtract(fract1, fract2))\r\n    var styledFract1 = Table([[num1],[denom1]], cell_style_fraction, tstyles)\r\n    var styledFract2 = Table([[num2],[denom2]], cell_style_fraction, tstyles)\r\n    if (math.compare(fract1, fract2) === 1) {\r\n        var answer = math.format(math.subtract(fract1, fract2))\r\n        if (userSelection.probStyle==='Vertical') {\r\n            var prob1 = verticalFractions(styledFract1, styledFract2, <Text>-</Text>)\r\n        } else {\r\n            prob1 = horizontalFractions(styledFract1, styledFract2, <Text>-</Text>)\r\n        }\r\n\r\n    } else {\r\n        answer = math.format(math.subtract(fract2, fract1))\r\n        if (userSelection.probStyle==='Vertical') {\r\n            prob1 = verticalFractions(styledFract2, styledFract1, <Text>-</Text>)\r\n        } else {\r\n            prob1 = horizontalFractions(styledFract2, styledFract1, <Text>-</Text>)\r\n        }\r\n\r\n    }\r\n\r\n    var prob1 = horizontalFractions(styledFract1, styledFract2, <Text>-</Text>)\r\n   \r\n    var problem = {text: prob1,\r\n        answerChoices: ['','','','', answer],\r\n        correctAnswer: answer}\r\n    return problem\r\n}\r\n\r\nexport const randAddFract = (userSelection) => {\r\n    var probArray = [addFract]\r\n    \r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(userSelection)\r\n}\r\n\r\nexport const randSubFract = (userSelection) => {\r\n    var probArray = [subFract]\r\n    \r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(userSelection)\r\n}\r\n","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\multiply-dec.js",["290","291","292","293","294","295","296","297","298","299","300","301"],"import {randWhole, decPV, randDec, shuffleArray, wrongOptions, answerChoicesKey} from './general'\r\nimport * as g from './general'\r\nimport {verticalAlign} from './vertical-align'\r\nimport {StyleSheet} from \"@react-pdf/renderer\";\r\n//   const styles = StyleSheet.create({\r\n//     top: {\r\n//       marginBottom:10,\r\n//       fontSize: 12,\r\n\r\n//       // fontFamily: 'arial'\r\n//     },\r\n//     probContainer: {\r\n//         display:'flex',\r\n//         flexDirection:'column',\r\n//         justifyContent: 'flexEnd',\r\n//         backgroundColor: 'blue',\r\n//       },\r\n//     bottom: {\r\n//         marginBottom:10,\r\n//         fontSize: 12,\r\n//         backgroundColor: 'yellow',\r\n//         // fontFamily: 'arial'\r\n//       },\r\n\r\n//   });\r\n\r\nconst multNumbers = (userSelection) =>{\r\n    var numArray = []\r\n    if (userSelection['Decimal x Whole Number']) {\r\n        numArray.push(\r\n            [randWhole(2, 9), randDec(0.1, 0.9, 1)],\r\n            [randWhole(2, 9), randDec(0.1, 0.9, 2)],\r\n            [randWhole(2, 9), randDec(1, 9, 1)],\r\n            [randWhole(2, 9), randDec(1, 9, 2)],\r\n            [randWhole(2, 9), randDec(10,99, 1)],\r\n        )\r\n    } if (userSelection['3 by 1 digit']) {\r\n        var randDecimal = [randDec(10, 99, 1), randDec(2,9,2), randDec(0.2, 0.999, 3)][randWhole(0,2)]\r\n        numArray.push(\r\n            [randWhole(2, 9), randDecimal],\r\n            [randDec(0.2, 0.9, 1), randDecimal],\r\n            [randDec(0.2, 0.9, 1), randDecimal],\r\n            [randDec(0.2, 0.9, 1), randWhole(100,999) ],\r\n            [randDec(0.02, 0.09, 2), randDecimal],\r\n            [randDec(0.02, 0.09, 2), randWhole(100,999) ],\r\n        )\r\n    } if (userSelection['4 by 1 digit']) {\r\n        randDecimal = [randDec(100, 999, 1), randDec(20,99,2), randDec(2, 9, 3), randDec(0.2, 0.9999, 4)][randWhole(0,3)]\r\n        numArray.push(\r\n            [randWhole(2, 9), randDecimal],\r\n            [randDec(0.2,0.9, 1), randWhole(1000,9999)],\r\n            [randDec(0.2,0.9,1), randDecimal],\r\n            [randDec(0.02,0.09,2), randDecimal],\r\n            [randDec(0.02,0.09,2), randWhole(1000,9999)],\r\n        )\r\n    } if (userSelection['2 by 2 digit']) {\r\n        randDecimal = [randDec(1, 9, 1), randDec(0.2,0.99,2)][randWhole(0,1)]\r\n        var randDecimal2 = [randDec(1, 9, 1), randDec(0.2,0.99,2)][randWhole(0,1)]\r\n\r\n        numArray.push(\r\n            [randWhole(11, 99), randDecimal],\r\n            [randWhole(11, 99), randDecimal],\r\n            [randDecimal, randDecimal2],\r\n            [randDecimal, randDecimal2],\r\n            [randDec(1, 9, 1), randDec(0.2,0.99,2)],\r\n            [randDec(1, 9, 1), randDec(0.2,0.99,2)],\r\n\r\n        )\r\n    } if (userSelection['3 by 2 digit']) {\r\n        var randDecimal3 = [randDec(10, 99, 1), randDec(2,9,2), randDec(0.2, 0.999, 3)][randWhole(0,2)]\r\n        var randDecimal2 = [randDec(1, 9, 1), randDec(0.2,0.99,2)][randWhole(0,1)]\r\n        numArray.push(\r\n            [randWhole(11, 99), randDecimal3],\r\n            [randDecimal2, randWhole(100,999)],\r\n            [randDecimal2, randDecimal3],\r\n            [randDecimal2, randDecimal3],\r\n            [randDecimal2, randDecimal3],\r\n\r\n        )\r\n    }\r\n    var num = shuffleArray(numArray)[0]\r\n    // var [num1pv, num2pv] = [decPV(num[0]), decPV(num[1])] \r\n    return [num[0], randWhole(9,100), num[1]]\r\n}\r\n\r\nexport const multDecAlg = (userSelection) => {\r\n    var numList = multNumbers(userSelection)\r\n    var [numberS, numberL] = [numList[0], numList[2]]\r\n    var multPV = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(multPV))\r\n    if (userSelection['Horizontal']) {\r\n        var prob = `${numberL} × ${numberS} = `\r\n    } if (userSelection['Vertical']) {\r\n        prob = verticalAlign(numberL, '×', numberS) \r\n    }\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, multPV)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    // var order = (numberS, numberL)\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\nexport const multDecBasic = (userSelection) => {\r\n    var numList = multNumbers(userSelection)\r\n    var [numberS, numberL] = [numList[0], numList[2]]\r\n    var multPV = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(multPV))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, multPV)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(`What is the product of ${numberL} and ${numberS}?`)\r\n    probArray.push(`What is the product of ${numberS} and ${numberL}?`)\r\n    probArray.push(`What is ${numberS} times as much as ${numberL}?`)\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\nexport const multDec = (userSelection) => {\r\n    var girl = shuffleArray(g.girlList)[0]\r\n    var boy = shuffleArray(g.boyList)[0]\r\n    \r\n    var pet = shuffleArray(g.bigPetList)[0]\r\n\r\n    if (userSelection['4 by 1 digit']) {\r\n        var [numberS, numberL] = [randDec(0.2, 0.9, 1), randDec(10,50, 2)]\r\n    } else if (userSelection['3 by 1 digit']) {\r\n        [numberS, numberL] = [randDec(0.2, 0.9, 1), randDec(10,50, 1)]\r\n    } else if (userSelection['2 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(2, 5, 1), randDec(1,3, 1)]\r\n        pet = shuffleArray(g.smallPetList)[0]\r\n    } else if (userSelection['3 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(2, 4, 1), randDec(1, 5, 2)]\r\n        pet = shuffleArray(g.smallPetList)[0]\r\n    }\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(`${girl}'s ${pet} weighs ${numberL} pounds. ${boy}'s ${pet} weighs ${numberS} `+   \r\n    ` times as much as ${girl}'s ${pet}. What does ${boy}'s ${pet} weigh in pounds?`)\r\n    // probArray.push(``)\r\n    // probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n\r\n\r\nexport const multDec2 = (userSelection) => {\r\n    var woman = shuffleArray(g.womanList)[0]\r\n    var pet = shuffleArray(g.smallPetList)[0]\r\n    if (userSelection['4 by 1 digit']) {\r\n        var [numberS, numberL] = [randWhole(2,9), randDec(10,50,2)]\r\n        var time = {s:'month', p:'months'}\r\n    } else if (userSelection['3 by 1 digit']){\r\n        [numberS, numberL] = [randWhole(2, 9), randDec(1, 5,2)]\r\n        time = {s:'week', p:'weeks'}\r\n    } else if (userSelection['2 by 2 digit']){\r\n        [numberS, numberL] = [randWhole(12, 99), randDec(0.20, 0.75,2)]\r\n        time = {s:'day', p:'days'}\r\n    } else if (userSelection['3 by 2 digit']){\r\n        [numberS, numberL] = [randWhole(100, 999), randDec(0.20, 0.75,2)]\r\n        time = {s:'day', p:'days'}\r\n    }\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var probArray = []\r\n    probArray.push(`It costs ${woman} $${numberL} to buy food for her ${pet}s each ${time.s}. How much `+\r\n    `does it cost her for ${numberS} ${time.p} of ${pet} food?`)\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n\r\nexport const multDec3 = (userSelection) => {\r\n    var tour = shuffleArray(g.tourList)[0]\r\n    if (userSelection['4 by 1 digit']) {\r\n        var [numberS, numberL] = [randWhole(2,6), randDec(15,50,2)]\r\n        \r\n    } if (userSelection['3 by 1 digit']) {\r\n        [numberS, numberL] = [randWhole(2,6), randDec(7,9,2)]\r\n            \r\n    } if (userSelection['2 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(2,6,1), randWhole(12,50)]\r\n                \r\n    } if (userSelection['3 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(2,4,1), randWhole(100,200)] \r\n        }\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var probArray = []\r\n    probArray.push(`The ${tour} tour costs $${numberL} for each hour. How much does it cost `+\r\n    `for a ${numberS} hour tour?`)\r\n    // probArray.push(``)\r\n    // probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n                   \r\n\r\n\r\n\r\n\r\nexport const multDec4 = (userSelection) => {\r\n    var disaster = shuffleArray(g.disasterList)[0]\r\n    var boy = shuffleArray(g.boyList)[0]\r\n    if (userSelection['4 by 1 digit']) {\r\n        var [numberS, numberL] = [randDec(10, 15, 2), randWhole(5, 9), ]\r\n        var food = shuffleArray(['chicken','pecans','peanut butter','popscicles','chocolate','pasta'])[0]\r\n    \r\n    } if (userSelection['3 by 1 digit']) {\r\n        [numberS, numberL] = [randDec(1,5,2),randWhole(5,9)]\r\n        food = shuffleArray(g.disasterFoodList)[0]\r\n            \r\n    } if (userSelection['2 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(0.2,0.99,2), randWhole(12,99)]\r\n        food = shuffleArray(['ramen','beans','bananas','popscicles','chocolate','pasta'])[0]\r\n    } if (userSelection['3 by 2 digit']) {\r\n        [numberS, numberL] = [randDec(0.2,0.99,2), randWhole(100, 400)] \r\n        food = shuffleArray(['ramen','beans','bananas','popscicles','chocolate','pasta'])[0]\r\n\r\n        }\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var probArray = []\r\n    probArray.push(`${boy} is preparing for a ${disaster}. He wants to buy a lot of ${food} so that he does `+\r\n    `not run out. Each package of ${food} costs $${numberS}. How much would it cost him to buy `+\r\n    `${numberL} packages of ${food}?`)\r\n    // probArray.push(``)\r\n    // probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n                   \r\n\r\n\r\nexport const multDec5 = (userSelection) => {\r\n    if (userSelection['']) {\r\n        \r\n    }\r\n    var [numberS, numberL] = []\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n\r\n                //    '{randGirl} worked {Decimal} hours this week at her job working as a {randJob}. She earns $'\r\n                //    f'{Decimal2} per hour. How much money did she earn this week?\r\n\r\n\r\nexport const multDec6 = (userSelection) => {\r\n\r\n    if (userSelection['']) {\r\n        \r\n    }\r\n    var [numberS, numberL] = []\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n\r\n            //        f'One ounce of {randCan}  has {Decimal} grams of protein. How many grams of protein are in {Decimal2}'\r\n            //    f'ounce can of {randCan}?')\r\nexport const multDec7 = (userSelection) => {\r\n\r\n    if (userSelection['']) {\r\n        \r\n    }\r\n    var [numberS, numberL] = []\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var probArray = []\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\n// (f'{randBoy} needs to buy {Number1} {randItemsExp}s. Each {randItemsExp} costs ${Decimal}. How much'\r\n//                    f' would {randBoy} spend to buy {Number1} {randItemsExp}?\r\nexport const multDec8 = (userSelection) => {\r\n\r\n    if (userSelection['']) {\r\n        \r\n    }\r\n    var [numberS, numberL] = []\r\n    var pv = decPV(numberS)+decPV(numberL)\r\n\r\n    var answer = Number((numberL*numberS).toFixed(pv))\r\n\r\n\r\n    var wrong= wrongOptions(answer, 'decimal', numberL, numberS, pv)    \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2],)\r\n    var probArray = []\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n    probArray.push(``)\r\n\r\n\r\n    var randProb = shuffleArray(probArray)[0]    \r\n    var problem = {text: randProb,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n            //    It costs ${whole} for a flight to {randCountry[0]}. A flight to {randCountry[1]} costs {Decimal} times'\r\n            //    f'as much as the flight to {randCountry[0]}. How much does the flight to {randCountry[1]} cost?'\r\n\r\n\r\n\r\nexport const randMultDec = (userSelection) => {\r\n    var probArray = []\r\n    if (userSelection['Algorithm']){\r\n        probArray.push(multDecAlg, multDecAlg, multDecAlg, multDecAlg, multDecAlg)\r\n    } if (userSelection['Application']){\r\n        probArray.push(multDecBasic, multDec, multDec2, multDec3, multDec4)\r\n    }\r\n\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(userSelection)\r\n}\r\n","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub-dec.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\add-sub.js",["302","303","304","305"],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\divide-dec.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\general.js",["306","307","308"],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\multiply.js",["309","310","311","312","313","314"],"import * as g from \"./general\";\r\nimport {randWhole, shuffleArray, answerChoicesKey, wrongOptions, cap} from './general'\r\nimport {verticalAlign} from './vertical-align'\r\nconst multNumbers = (userSelection) =>{\r\n    var numArray = []\r\n    if (userSelection['1 by 1 digit']) {\r\n        numArray.push([randWhole(2, 9), randWhole(2, 20), randWhole(2, 9)])\r\n\r\n    } if (userSelection['2 by 1 digit']) {\r\n        \r\n        numArray.push([randWhole(2, 9), randWhole(12, 67), randWhole(10, 99)])\r\n\r\n    } if (userSelection['3 by 1 digit']) {\r\n        numArray.push([randWhole(2, 9), randWhole(12, 67), randWhole(100, 999)])\r\n\r\n    } if (userSelection['4 by 1 digit']) { \r\n        numArray.push([randWhole(2, 9), randWhole(12, 67), randWhole(1000, 9999)])\r\n\r\n    } if (userSelection[\"2 by 2 digit\"]) { \r\n        numArray.push([randWhole(12, 49), randWhole(12, 67), randWhole(50, 99)])\r\n\r\n    } if (userSelection[\"3 by 2 digit\"]) { \r\n        numArray.push([randWhole(20, 99), randWhole(20, 90), randWhole(102, 999)])\r\n    }\r\n    var numList = shuffleArray(numArray)[0]\r\n    return numList\r\n}\r\nexport const multAlg = (userSelection) => {\r\n    var numList = multNumbers(userSelection)\r\n    var [numberS, numberL] = [numList[0], numList[2]]\r\n    var answer = numberL*numberS\r\n    var wrong= wrongOptions(answer, 'multiply', numberL, numberS) \r\n    wrong.push()\r\n    wrong = shuffleArray(wrong)\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    if (userSelection['Vertical']) {\r\n        var prob = verticalAlign(numberL.toLocaleString(), '×', numberS.toLocaleString()) \r\n    } else {\r\n        prob = `${numberL.toLocaleString()} × ${numberS.toLocaleString()} = `\r\n    }\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\n\r\nexport const multWhole = (userSelection) => { //basic product/sum/difference\r\n    // var numberList = multNumbers(userSelection)\r\n    // var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    var [numberS, numberM, numberL] = multNumbers(userSelection)\r\n\r\n    if (userSelection.level === '1') {\r\n        var prob1 = (`What is the product of ${numberS} and ${numberL}?`)\r\n        var prob2 = (`What is the product of ${numberL} and ${numberS}?`)\r\n        var prob3 = (`A number is ${numberL} times as large as ${numberS}. What is the number?`)\r\n        var prob4 = (`A number is ${numberS} times as large as ${numberL}. What is the number?`)\r\n        var randProb = [prob1, prob2, prob3, prob4][randWhole(0,3)]\r\n        var answer = numberS*numberL\r\n\r\n    } else if (userSelection.level === '2') {\r\n        prob1 = (`What is the sum of ${numberM} and the product of ${numberL} and ${numberS}?`)\r\n        prob2 = (`What is the sum of ${numberM} and the product of ${numberS} and ${numberL}?`)\r\n        prob3 = (`What is the difference when ${numberM} is subtracted from the product of ${numberS} and ${numberL}?`)\r\n        prob4 = (`What is the difference when ${numberM} is subtracted from the product of ${numberL} and ${numberS}?`)\r\n        randProb = [prob1, prob2, prob3, prob4][randWhole(0,3)]\r\n        if (randProb === (prob1 || prob2)){ \r\n        } else {\r\n            answer = numberL*numberS-numberM\r\n        }\r\n    } else {\r\n        var numberL2 = randWhole(111,99) //not going to change based on specify\r\n        var numberS2 = randWhole(12,99)\r\n        prob1 = (`What is the difference between the product of ${numberL} and ${numberS} and the product of ${numberS2} and ${numberL2}?`)\r\n        prob2 = (`What is the sum of the product of ${numberL} and ${numberS} and the product of ${numberS2} and ${numberL2}?`)\r\n        prob3 = (`A number is ${numberS} times as much as the sum of ${numberM} and ${numberS2}and ${numberS}. What is the number?`)\r\n        randProb = [prob1, prob2, prob3][randWhole(0,2)]\r\n\r\n        if (randProb === prob1){\r\n            answer = numberL*numberS - numberS2*numberL2\r\n        } else if (randProb === prob2){\r\n            answer = numberL*numberS + numberS2*numberL2\r\n        } else {\r\n            answer = numberS*(numberM+numberS2+numberS)\r\n        }\r\n    }\r\n    \r\n    let wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    let AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    let problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n\r\n    return problem     \r\n\r\n}\r\n\r\n\r\nexport const multWhole2 = (userSelection) => { //mass\r\n    var [group, item] = [shuffleArray(g.groupList), shuffleArray(g.itemList)]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    // var numberList = multNumbers(userSelection)\r\n    var [numberS, numberM, numberL] = multNumbers(userSelection)\r\n\r\n    if (userSelection.level === '1') {\r\n        var prob1 = `${cap(e)} ${group[0]} of ${item[0]} has a mass of ${numberS} grams. What is the mass of `+\r\n        `${numberL} ${group[0]}s of ${item[0]} in grams?`\r\n        var prob2 = `There are ${numberL} ${group[0]}s of ${item[0]}. If ${e} ${group[0]} of ${item[0]} `+\r\n        `has a mass of ${numberS} grams, what is the mass of all these ${item[0]}s?`\r\n    } else {\r\n        prob1 = `${cap(e)} ${group[0]} of ${item[0]} has a mass of ${numberS} grams. ${cap(e)} ${group[0]} of `+\r\n        `${item[1]} has a mass of ${numberM} grams. What is the mass of ${numberL} ${group[0]}s of ${item[0]} in grams?`\r\n        prob2 = `There are ${numberL} ${group[0]}s of ${item[0]} and there are ${numberM} ${group[0]}s of `+\r\n        `${item[1]}. What is the mass of all the ${group[0]}s of ${item[0]} if ${e} has a mass of ${numberS} grams? `\r\n    }\r\n    let randProb = [prob1, prob2][randWhole(0,1)]\r\n    let answer = numberS*numberL\r\n    let wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    let AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], 'grams')\r\n    let problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem   \r\n}\r\n\r\nexport const multWhole3 = (userSelection) => { //simple buying items\r\n    var [expItem, girl] = [shuffleArray(g.itemList20_60), shuffleArray(g.girlList)]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    // var numberList = multNumbers(userSelection)\r\n    var [numberS, , numberL] = multNumbers(userSelection)\r\n    \r\n    var prob1 = `${cap(e)} ${expItem[0]} costs $${numberS}. How much would it cost to buy ${numberL} ${expItem[0]}s?`\r\n    var prob2 = `${girl[0]} buys ${numberL} ${expItem[0]}s which cost $${numberS} each. How much would it cost her to buy \r\n                ${numberL} ${expItem[0]}s?`\r\n    let randProb = [prob1, prob2][randWhole(0,1)]\r\n    let answer =numberS*numberL\r\n    let wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    let AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    let problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem   \r\n}\r\nexport const multWholeby1 = (userSelection) => { //by1 digit only Disaster\r\n    var [food, boy, girl, disaster] = [shuffleArray(g.disasterFoodList)[0], shuffleArray(g.boyList)[0], shuffleArray(g.girlList)[0],shuffleArray(g.disasterList)[0]]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    var numberList = multNumbers(userSelection)\r\n    var [numberS, , numberL] = [randWhole(2,7), numberList[1], numberList[2]]\r\n    var prob1 = (`${boy} is preparing for a ${disaster}. He wants to buy a lot of his favorite food so that he does not `+\r\n    `run out. ${cap(e)} box of ${food} costs $${numberS}. How much would it cost him to buy `+\r\n    `${numberL} boxes?`)\r\n    var prob2 = (`${girl} is getting ready in case of a ${disaster}. She wants stock up on ${food} so she purchases `+\r\n    `${numberL} boxes. ${cap(e)} box of ${food} costs $${numberS}. How much would it cost her to buy `+\r\n    `all the boxes?`)\r\n    let randProb = [prob1, prob2][randWhole(0,1)]\r\n    let answer =numberS*numberL\r\n    let wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    let AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    let problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n\r\n    // console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem   \r\n}\r\n// export const multWhole5 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole6 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole7 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole8 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole9 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole10 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n// export const multWhole11 = (userSelection) => {\r\n//     var numberList = multNumbers(userSelection)\r\n//     var [numberS, numberM, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    \r\n//     var wrong= wrongOptions(answer, 'multiply', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n//     var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n//     var problem = {text: randProb,\r\n//         answerChoices: AC,\r\n//         correctAnswer: answer\r\n//     }\r\n\r\n//     // console.log(problem)\r\n//     // return <div><p>{problem} </p></div>\r\n//     return problem   \r\n// }\r\n\r\n\r\n\r\n  \r\n\r\n    // problem = (`${randGirl} 's ${randPetBig} weighs ${numberL} pounds. ${randBoy}'s ${randPetBig} weighs ${NumberS}`\r\n    // ` times as much as ${randGirl}'s ${randPetBig}. What does ${randBoy}'s ${randPetBig} weigh in pounds?`) //2 by 2 only\r\n\r\n\r\n\r\n    // problem = (`${randBoy} buys ${numberL} large bags of ${randCandy} for Halloween. It costs `\r\n    // `${numberS}$ for each bag of ${randCandy}. How much would it cost him to buy all the bags?`)\r\n\r\n    // problem = (`${randSchool} ordered ${numberL} cases of ${randSubject} textbooks. ${cap(e)} case holds ${numberS}`\r\n    // ` textbooks. How many textbooks did the school buy?`)\r\n\r\n    // problem = (`A ${randSize} bag of ${randFood}'s contains ${numberL} calories. How many calories are in ` \r\n    // `${numberS} ${randSize} bags of ${randFood}s?`)\r\n\r\n\r\n\r\n\r\n    export const randMultWhole = (userSelection) => {\r\n        let probArray = []\r\n        if (userSelection['Application']) {\r\n            probArray.push(multWhole, multWhole2, multWhole3)\r\n            if (userSelection['4 by 1 digit']|| userSelection['3 by 1 digit'] || userSelection['2 by 1 digit'] || userSelection['1 by 1 digit']) {\r\n                probArray.push(multWholeby1)\r\n            }\r\n        } if (userSelection['Algorithm']) {\r\n            probArray.push(multAlg)\r\n        }\r\n        let randProb = shuffleArray(probArray)[0]\r\n        return randProb(userSelection)\r\n    }","C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\area-perimeter.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\tables.js",["315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339"],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\divide.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],"import * as g from \"./general\";\r\nimport {randWhole, shuffleArray, answerChoicesKey, wrongOptions, cap} from './general'\r\nimport {verticalDivide} from './vertical-align'\r\n// var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n\r\n\r\nconst divNumbers = (userSelection) => {\r\n    var numArray = []\r\n    if (userSelection['2 by 1 digit']) {\r\n        numArray.push([randWhole(5, 10), randWhole(2, 9)],)\r\n    } if (userSelection['3 by 1 digit']) {\r\n        numArray.push(\r\n            [randWhole(50, 99), randWhole(2, 9)],\r\n            [randWhole(25, 50), randWhole(5, 9)],\r\n            [randWhole(101, 166), randWhole(2, 6)],\r\n            [randWhole(166, 249), randWhole(2, 4)],\r\n        )\r\n    } if (userSelection['4 by 1 digit']) {\r\n        numArray.push(\r\n            [randWhole(500, 999), randWhole(2, 9)],\r\n            [randWhole(250, 500), randWhole(4, 9)],\r\n            [randWhole(1000, 1660), randWhole(2, 6)],\r\n            [randWhole(1660, 2490), randWhole(2, 4)],\r\n        )\r\n    } if (userSelection['3 by 2 digit']) { \r\n        numArray.push(\r\n            [randWhole(7, 41), randWhole(15, 24)],\r\n            [randWhole(3, 19), randWhole(35, 50)],\r\n            [randWhole(15, 28), randWhole(21, 35)],\r\n            [randWhole(3, 12), randWhole(50, 80)],\r\n        )\r\n    } if (userSelection['4 by 2 digit']) {\r\n        numArray.push(\r\n            [randWhole(67, 416), randWhole(15, 24)],\r\n            [randWhole(28, 199), randWhole(35, 50)],\r\n            [randWhole(48, 285), randWhole(21, 35)],\r\n            [randWhole(20, 124), randWhole(50, 80)],\r\n        )\r\n    }\r\n    console.log(numArray)\r\n    var num = shuffleArray(numArray)\r\n    \r\n    var answer = num[0][0]\r\n\r\n    var numberS = num[0][1]\r\n    var numberL = answer*numberS\r\n    return [answer, numberS, numberL]\r\n}\r\nexport const divAlg = (userSelection) => {\r\n    var numList = divNumbers(userSelection)\r\n    var [answer, numberS, numberL] = [numList[0], numList[1], numList[2]]\r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) \r\n    console.log(answer)\r\n    console.log(numberS)\r\n    console.log(typeof numberS)\r\n    console.log(numberL)\r\n    wrong.push()\r\n    wrong = shuffleArray(wrong)\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    if (userSelection['Vertical']){\r\n        var prob = verticalDivide(numberL.toLocaleString(), numberS.toLocaleString())\r\n    } else {\r\n        prob = `${numberL.toLocaleString()} ÷ ${numberS.toLocaleString()} = `\r\n    }\r\n    var problem = {text: prob,\r\n                answerChoices: AC,\r\n                correctAnswer:answer,\r\n                }\r\n    return problem\r\n}\r\nexport const div1dig = (userSelection) => { // 1 digit divisor only\r\n    var numberList = divNumbers(userSelection)\r\n    var girl = shuffleArray(g.girlList)[0]\r\n    var store = shuffleArray(g.storeList)[0]\r\n    var item = shuffleArray(g.itemPkgList)[0]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n\r\n\r\n    var [answer, numberS, numberL] = [numberList[0], randWhole(2,6), numberList[2]]\r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = `${girl} is going to ${store} to buy some ${item} for a party. It costs $${numberS} for ${e} `+\r\n    `package of ${item}. After the cashier rang up her items, she had to give the cashier a total `+\r\n    `of $${numberL}. How many packages of ${item} did she buy?`\r\n    var prob2 = `${girl} wants to buy some ${item} at ${store} to prepare for a large family gathering.`+\r\n    ` She ended up purchasing ${numberS} packages of ${item} which cost `+\r\n    `$${numberL} altogether. How much does ${e} package of ${item} cost?`\r\n    \r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    if (randProb === prob2) {\r\n        AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    }\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\nexport const div2dig= (userSelection) => { //playing sports 2 digit only\r\n    var numberList = divNumbers(userSelection)\r\n    var boy = shuffleArray(g.boyList)[0]\r\n    var sport = shuffleArray(g.sportList)[0]\r\n    var [answer, numberS, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    var prob1 = `${boy} plays ${sport} for a total of ${numberL} minutes last year. He played ${sport} `+\r\n    `for ${numberS} minutes each day. How many days did ${boy} play ${sport} last year? `\r\n    var prob2 = `${boy} plays ${sport} for a total of ${numberL} minutes last year. He played ${sport} `+\r\n    `for ${numberS} days last year for an equal amount of time each day. How many minutes did ${boy} play ${sport} each day last year? `\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\nexport const divWhole = (userSelection) => { //simple purchase items\r\n    var numberList = divNumbers(userSelection)\r\n    var [answer, numberS, numberL] = [numberList[0], numberList[1], numberList[2]]\r\n    var item = shuffleArray(g.itemList10_20)[0]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    if (userSelection.specify === '2by1') { //4 by 1\r\n        [answer, numberS] = [randWhole(2,9), randWhole(5,8)];\r\n        numberL= answer*numberS\r\n   }else if (userSelection.specify === '3by1'){\r\n       [answer, numberS] = [randWhole(23,40), randWhole(6,9)];\r\n       numberL = answer*numberS\r\n   } else if (userSelection.specify === '4by1'){\r\n        [answer, numberS] = [randWhole(167,250), randWhole(6,9)];\r\n        numberL = answer*numberS\r\n    } else{\r\n        [answer, numberS] = [randWhole(23,89), randWhole(20,40)];\r\n        numberL = answer*numberS\r\n        item = shuffleArray(g.itemList20_60)[0]\r\n    } \r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS) //wont be great wrong userSelection for the level 3 Quetions   \r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    var prob1 = `It costs $${numberL} to buy ${numberS} ${item}s. How much would it cost to buy one `+\r\n    `${item}?`\r\n    var prob2 = `How much would it cost to buy ${e} ${item} if it costs $${numberL} to buy ${numberS} ${item}s?`\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\nexport const div1dig2 = (userSelection) => { //teacher buying items\r\n    var woman = shuffleArray(g.womanList)[0]\r\n    var theme = shuffleArray(g.themeList)[0]\r\n    var item = shuffleArray(['pencil','marker','pen','journal','notebook','decoration'])[0]\r\n    var e = ['one', 'a', 'each'][randWhole(0,2)]\r\n    if (userSelection.specify === '2by1') { \r\n        var [answer, numberS] = [randWhole(2,9), randWhole(5,8)];\r\n        var numberL= answer*numberS\r\n    }else { //3by1\r\n        [answer, numberS] = [randWhole(15,15), randWhole(6,9)];\r\n        numberL = answer*numberS\r\n    } \r\n    var wrong= wrongOptions(answer, 'divide', numberL, numberS)\r\n    var prob1 = `${woman} bought ${numberS} ${theme} ${item}s for a total of $${numberL} `+\r\n    `. If each ${item} costs the same amount, how much did ${woman} spend on each ${theme} ${item}? `\r\n    var prob2 = `${woman} has a total of $${numberL} to spend on ${item}s. She wants to buy ${theme} `+\r\n        ` ${item}s for her classroom. If ${e} package of ${theme} ${item}s costs $${numberS}, how many packagess can she buy?`\r\n    var randProb = [prob1, prob2][randWhole(0,1)]\r\n    var AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2])\r\n    if (randProb === prob1) {\r\n        AC = answerChoicesKey(answer, wrong[0], wrong[1], wrong[2], '$')\r\n    } \r\n    var problem = {text: randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: answer\r\n    }\r\n    return problem\r\n}\r\n\r\n// export const randDivideWhole = () => {\r\n//     var randProb = shuffleArray([\r\n    \r\n//     ])[0]\r\n// }\r\n\r\n\r\n    // var prob1 = `${girl} has ${numberL} ${theme} themed ${schoolItem}. She wants to split them equally `+\r\n    //             ` between her friends. If she has ${numberS} friends, how many ${schoolItem} can each friend get?`\r\n    // var prob2 = `${boy} has ${numberL} ${theme} themed ${schoolItem}. If he gives each friend ${numberS} `+\r\n    //             `${schoolItem}, how many friends can he give them to?`\r\n\r\n    // var prob1 = `${girl} has ${numberL} ${noun} saved up. She decides that she has way too many ${noun} and she `+\r\n    //             `$wants to give them all away to her friends. She wants to give each friend the same amount of ${noun}. `+\r\n    //             `${girl} has ${numberS} friends that she would like to give the ${noun} to. How many ${noun} would each friend get?`\r\n    // var prob2 = `${boy} has too many ${noun} saved up. He decides to split them equally between each of his ${numberS} friends. `+\r\n    //             `How many ${noun} will each friend get?`\r\n\r\n\r\n\r\n    // var prob1 = `${boy} has ${numberL} ${noun}. He wants to split them equally into ${group}s. If ${boy} puts ${numberS} `+\r\n    //             `${noun} into each ${group}, how many ${group}s can ${boy} fill?`\r\n    // var prob2 = `${girl} wants to split their ${numberL} ${noun} into equal ${group}s. If she makes ${numberS} `+\r\n    //             `${group}s, how many ${noun}s fit in ${e} ${group}?`\r\n\r\n\r\n    // var prob1 = `${boy} has ${numberL} ${candy}. He would like to share these ${candy} equally with ${numberS} friends. How `+\r\n    //             `many ${candy} will each friend get?`\r\n    // var prob2 = `${girl} has ${numberL} ${candy}. She wants to give each friend ${numberS} ${candy}. How many friends will `+\r\n    //             `she be able to give ${candy} to?`\r\n\r\n    // var prob1 = `A ${food} company can fit ${numberS} packages of ${food} in ${e} box. How many boxes are needed to fill an `+\r\n    //             `order for ${numberL} packages of ${food}?`\r\n    // var prob2 = `A ${food} company needs to put ${numberL} packages of ${food} into boxes to fill an order. They can fit ${numberS} `+\r\n    //             `packages of ${food} in ${e} box. How many boxes will they need to fill the order?`\r\n\r\n    // var dogNameList = ['Zoey','Bowser','Spot','Snickerdoodle','Sir Fluffyboy', 'Chuggington', 'Bella', 'Max','Daisy','Bitsy','Archie','Barkley','Baxter','Chewy','Izzy','Murphy','Pippin','Waffles','Wiggleton','Ziggy']\r\n    // var prob1 = `${girl} walks her dog ${dogName} ${numberS} minutes each day they go for a walk. If they walk for a total of `+\r\n    //             `${numberL} minutes last month, how many days did she take ${dogName} for a walk?`\r\n    // var prob2 = `${boy} walks his dog ${dogName} for a total of ${numberL} minutes last month. Each time he takes ${dogName} `+\r\n    //             `on a walk for ${numberS} minutes. How many days did he take ${dogName} for a walk last month? `\r\n    // var prob3 = `${girl} took her dog ${dogName} on a walk ${numberS} times last month. They walked for a total of ${numberL} `+\r\n    //             `minutes. If each walk lasted the same amount of time, how long was each walk? `\r\n    \r\n    // var prob1 = `${dogName} the dog eats ${numberS} ounces of dog food each week. ${dogName}'s pet parent has stocked up with `+\r\n    //             `${numberL} ounces of dog food. How many weeks will the food last?`\r\n    // var prob2 = `${boy} bought a large bag of dog food so now he has ${numberL} ounces. He gives his dog ${dogName} ${numberS} `+\r\n    //             `ounces of food each week. How many weeks will the food last until he runs out?`\r\n\r\n\r\n    export const randDivWhole = (userSelection) => {\r\n        var probArray = []\r\n\r\n        if (userSelection['Algorithm']){\r\n            probArray.push(divAlg)\r\n        } if (userSelection['Application']) {\r\n            probArray.push(divWhole)\r\n            if (userSelection['3 by 1 digit'] || userSelection['4 by 1 digit']) {\r\n                probArray.push(div1dig, div1dig2)\r\n            } else  { //4 by 2\r\n                probArray.push(div2dig)\r\n            } \r\n        }\r\n        var randProb = shuffleArray(probArray)[0]\r\n        return randProb(userSelection)\r\n    }","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Card.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\Input.js",["359"],"import React, { useReducer, useEffect } from \"react\";\r\n//useReducer manage more complex state, write logic that runs when you change state rather than just change value. good when have interconnected state.\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n      case 'TOUCH':\r\n        return {\r\n          ...state,\r\n          isTouched: true\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const {id, onInput} = props;\r\n  const {value, isValid} = inputState;\r\n\r\n  useEffect(()=> {\r\n    props.onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput])\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH',\r\n    })\r\n  }\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur= {touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur= {touchHandler}\r\n\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Backdrop.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\LoadingSpinner.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\hooks\\form-hook.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\ImageUpload.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\hooks\\http-hook.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\ErrorModal.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\FormElements\\Button.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\util\\validators.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\Table.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\vertical-align.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Modal.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\order-of-ops.js",["360","361","362","363","364","365","366","367","368","369","370","371"],"import {randWhole, shuffleArray, answerChoicesKey, randDec, roundDec\r\n    } from './general.js'\r\n\r\nvar simpleQArray = shuffleArray(['What is the value of the expression? \\n',\r\n                  'An expression is shown below, what value is equivalent to the expression?\\n',\r\n                  'Which value is equivalent to the expression below? \\n'])\r\n\r\nconst orderOpsNumbers = (userSelection) => {\r\n    var numArray = []\r\n    if (userSelection['Whole numbers'] || (!('Whole numbers' in userSelection) && !('Decimals' in userSelection) && !('Integers' in userSelection))){\r\n        if (userSelection.level === '2') {\r\n            numArray.push([randWhole(2,9), randWhole(2,9),randWhole(10,20),\r\n                randWhole(10,20),randWhole(21,30),randWhole(21,30)])\r\n\r\n        } else if (userSelection.level === '3') {\r\n            numArray.push([randWhole(20,50), randWhole(20,50), randWhole(30,70), \r\n                randWhole(30,70), randWhole(51,70), randWhole(51,70)])\r\n        } else {\r\n            numArray.push([randWhole(2,5), randWhole(2,5), randWhole(2,9), \r\n                randWhole(2,9),randWhole(6,9),randWhole(6,9)])\r\n        }\r\n\r\n    } if (userSelection['Decimals']) {\r\n        var smallDec = [randDec(1,4,1), randDec(1,4,2), randDec(0.01,0.99,2), \r\n                        randDec(0.01,0.9,1), randDec(0.01,0.1,2) ]\r\n        var largeDec = [randDec(10, 20,1), randDec(10,20,2)]\r\n        if (userSelection.level === '2') {\r\n            numArray.push([smallDec[randWhole(0, smallDec.length-1)], \r\n            smallDec[randWhole(0, smallDec.length-1)], \r\n            randWhole(7,12),randWhole(7,12),randWhole(7,12),randWhole(7,12)])\r\n\r\n        } else if (userSelection.level === '3') {\r\n            numArray.push([largeDec[randWhole(0, largeDec.length-1)], \r\n            largeDec[randWhole(0, largeDec.length-1)],\r\n            randWhole(10,19), randWhole(10,19),randWhole(21,30),randWhole(21,30)])\r\n        } else {\r\n            numArray.push([smallDec[randWhole(0, smallDec.length-1)], \r\n            smallDec[randWhole(0, smallDec.length-1)], \r\n            randWhole(2,9),randWhole(2,9),randWhole(5,9),randWhole(5,9)])\r\n        }\r\n\r\n    } if (userSelection['Integers']){\r\n        if (userSelection.level === '2') {\r\n            numArray.push([randWhole(-12,-2), randWhole(-12,-2), randWhole(-12, 12), randWhole(-9,12), randWhole(5,15),randWhole(5,15)])\r\n \r\n        } else if (userSelection.level === '3') {\r\n            numArray.push([randWhole(-15,-2), randWhole(-15,-2), randWhole(-15, 15), randWhole(-15,15), randWhole(5,20),randWhole(5,20)])\r\n\r\n        } else {\r\n            numArray.push([randWhole(-9,-2), randWhole(-9,-2), randWhole(-9, 9), randWhole(-9,9), randWhole(2,10),randWhole(2,10)])\r\n        }\r\n    } \r\n  \r\n    var numList = shuffleArray(numArray)[0]\r\n\r\nreturn numList\r\n}                  \r\nexport const orderOps = (userSelection) => { //oooA\r\n    var randQuest = simpleQArray[randWhole(simpleQArray.length, 0)]\r\n    var numList = orderOpsNumbers(userSelection) \r\n    var [numberL, numberL2, numberS] = [numList[4], numList[5], numList[2]]\r\n    var [numberM, numberS2, numberM2] = [numList[0], numList[1], numList[3]]\r\n    var dividend = numberL2*numberS\r\n\r\n    var probArray = []\r\n    if (userSelection['3 steps']) {\r\n        var OoOA = `${numberL} + (${dividend} ÷ ${numberS} - ${numberS2})` //10 + (40÷8 - 2)\r\n        var OoOB = `(${dividend} ÷ ${numberS} - ${numberS2}) + ${numberL} ` //(40÷8 - 9) +10\r\n        var OoOC = `${numberL} + ${dividend} ÷ ${numberS} - ${numberS2}` //10 + 40÷8 - 2\r\n        var answer = numberL+(dividend/numberS-numberS2)\r\n        var wrong = [Math.floor(((numberL+dividend)/numberS)-numberS2), answer-1,\r\n                     answer+2, answer+1]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection['4 steps']) {\r\n        OoOA = `${numberL} + (${dividend} ÷ ${numberS} - ${numberS2}) × ${numberM2}` //10 + (40÷8 - 9) × 10\r\n        OoOB = `${numberL} + ${numberM2}(${dividend} ÷ ${numberS} - ${numberS2}) `   //10 + 10(40÷8 - 9)\r\n        OoOC = `${numberM2}(${dividend} ÷ ${numberS} - ${numberS2}) + ${numberL} `  //10(40÷8 - 9)+10\r\n        answer = numberL+(dividend/numberS-numberS2)*numberM2\r\n        wrong = [Math.abs(numberL+dividend/numberS-numberS2*numberM2), answer-1,answer+1,       \r\n                (Math.floor((numberL+dividend)/numberS)-numberS2)*numberM2, answer+5,\r\n                   ]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection['5 steps'])  { //no selection/5\r\n        OoOA = `${numberM2} + (${dividend} ÷ ${numberS} - ${numberS2}) × ${numberL} - ${numberM}` //10 + (40÷8-9) x 10 - 2 \r\n        OoOB = `${numberM2} + ${numberL}(${dividend} ÷ ${numberS} - ${numberS2}) - ${numberM}` //10 + 10(40÷8-9) - 2 \r\n        OoOC = `${numberL}(${dividend} ÷ ${numberS} - ${numberS2}) - ${numberM} + ${numberM2}` //10(40÷8-9) - 2 + 10\r\n        answer = numberM2+((dividend/numberS-numberS2)*numberL)-numberM\r\n        wrong = [Math.abs((numberL+dividend)/numberS-numberS2*numberL-numberM), answer+1, answer-1,       \r\n            (Math.floor(((numberM2+numberL)*dividend)/numberS)-numberS2-numberM),\r\n            (((numberM2+dividend)/numberS)-numberS2)*numberL-numberM,\r\n            Math.abs((numberM2+dividend/numberS-numberS2)*numberL-numberM+1)]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n    }\r\n    var randProbObj = shuffleArray(probArray)[0]\r\n    wrong=shuffleArray(randProbObj.wrong)\r\n    var randProb = shuffleArray(randProbObj.prob)[0]\r\n    var AC = answerChoicesKey(randProbObj.answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text: randQuest + randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: randProbObj.answer}\r\n    return problem\r\n}\r\n\r\nexport const orderOps2 = (userSelection) => { //oooB\r\n    var randQuest = simpleQArray[randWhole(simpleQArray.length, 0)]\r\n    var numList = orderOpsNumbers(userSelection) \r\n    var [numberL, numberL2, numberM] = [numList[4], numList[5], numList[2]]\r\n    var [numberS, numberS2, numberM2] = [numList[0], numList[1], numList[3]]\r\n    var dividend = roundDec(numberM2*numberS2, 2)\r\n    var probArray = []\r\n\r\n    if (userSelection[\"3 steps\"]) { \r\n        var OoOA = `${numberM} × (${numberL}-${dividend} ÷ ${numberM2})` // 8 x (9- 40/5)\r\n        var OoOB = `(${numberL} - ${dividend} ÷ ${numberM2}) × ${numberM}` //(9-40/5)x8\r\n        var OoOC = `${numberM}(${numberL}-${dividend} ÷ ${numberM2})` //8(9-40/5)\r\n        var answer = numberM*(numberL-(dividend/numberM2))\r\n        var wrong = [numberM*numberL-dividend/numberM2, \r\n                    Math.abs(Math.floor(numberM*((numberL-dividend)/numberM2))), answer-1, answer+1,\r\n        Math.floor(((numberM*numberL+1)-dividend)/numberM2)]\r\n        if (userSelection.specify === 'Decimals') {\r\n            wrong.push(Math.abs(numberM*((numberL-dividend)/numberM2), ((numberM*numberL+1)-dividend)/numberM2))\r\n        }\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection[\"4 steps\"]) { \r\n        OoOA = `${numberM}(${numberL}-${dividend} ÷ ${numberM2}) + ${numberL2}` //8(9 - 40/5) + 9\r\n        OoOB = `(${numberL} - ${dividend} ÷ ${numberM2}) × ${numberM} + ${numberL2}` // (9-40/5)x8 +9\r\n        OoOC = `${numberL2} +  ${numberM}(${numberL}-${dividend} ÷ ${numberM2})` //9+ 8(9-40/5)\r\n        answer = numberM*(numberL-(dividend/numberM2))+numberL2\r\n        wrong = [numberM*numberL-dividend/numberM2+numberL2, answer-1,\r\n                (numberL2+numberM)*numberL-(dividend/numberM2),\r\n                Math.floor((((numberM*numberL)-dividend)/numberM2)+numberL2)]\r\n                probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection[\"5 steps\"]) { \r\n        OoOA = `${numberM} (${numberS} × ${numberL} - ${dividend} ÷ ${numberM2}) + ${numberL2}` //8 (5 x 9 - 40/5) + 9\r\n        OoOB = `${numberM} (${numberL} × ${numberS} - ${dividend} ÷ ${numberM2}) + ${numberL2}` //8 (9 x 5- 40/5) +9\r\n        OoOC = `${numberL2} + ${numberM} (${numberS} × ${numberL} - ${dividend} ÷ ${numberM2})` //9 + 8( 5 x 9 - 40/5)\r\n\r\n        answer = numberM*(numberS*numberL-(dividend/numberM2))+numberL2\r\n        wrong = [numberM*numberS*numberL-numberS2*numberM2/numberM2+numberL2, \r\n                numberM*numberS*(numberL-(numberS2*numberM2/numberM2)+numberL2),\r\n                Math.floor((((numberM*numberS*numberL)-numberS2)*numberM2))+numberL2,\r\n                answer-1]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n    }        \r\n    var randProbObj = shuffleArray(probArray)[0]\r\n    wrong=shuffleArray(randProbObj.wrong)\r\n    var randProb = shuffleArray(randProbObj.prob)[0]\r\n    var AC = answerChoicesKey(randProbObj.answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text: randQuest + randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: randProbObj.answer}\r\n    return problem\r\n}\r\n\r\nexport const orderOps3 = (userSelection) => { //oooC\r\n    \r\n    var randQuest = simpleQArray[randWhole(simpleQArray.length, 0)]\r\n    var numList = orderOpsNumbers(userSelection) \r\n    var [numberL, numberL2, numberM] = [numList[4], numList[5], numList[2]]\r\n    var [numberS, numberS2, numberM2] = [numList[0], numList[1], numList[3]]\r\n    var probArray = []\r\n\r\n    if (userSelection[\"3 steps\"]) { \r\n        var OoOA = `(${numberL} - ${numberS2}) + (${numberL2} + ${numberM2})` //(9-2)+(8+5)\r\n        var OoOB = `(${numberL2} + ${numberM2}) + (${numberL} - ${numberS2})` //(8+5)+(9-2)\r\n        var OoOC = `${numberM2} + ${numberL2} + (${numberL} - ${numberS2})` //5+8+(9-2)\r\n        var answer = (numberL-numberS2)+(numberL2+numberM2)\r\n        var wrong = [numberL-numberS2+numberL2-numberM2, \r\n            answer+3, answer-1,\r\n            (numberL+numberS2)+numberL2+numberM2\r\n        ]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n\r\n      } if (userSelection[\"4 steps\"]) {  \r\n        OoOA = `(${numberL} - ${numberS2}) + ${numberM}(${numberL2} + ${numberM2})` // (9-4) + 5(8+2)\r\n        OoOB = `${numberM}(${numberL2} + ${numberM2}) + (${numberL} - ${numberS2})` //5(8+2) + (9-4) \r\n        OoOC = `(${numberM2} + ${numberL2}) × ${numberM} + (${numberL} - ${numberS2})` //(8+2)x5 + (9-4)\r\n        answer = (numberL-numberS2)+numberM*(numberL2+numberM2)\r\n        wrong = [numberL-numberS2+numberM*numberL2+numberM2, answer+1,answer-1,\r\n            (numberL-numberS2+numberM)*(numberL2+numberM2),\r\n            ((numberL-numberS2+numberM)*numberL2)+numberM2\r\n        ]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection[\"5 steps\"]) { \r\n        OoOA = `${numberS}(${numberL} - ${numberS2}) + ${numberM}(${numberL2} + ${numberM2})` //2(9-4) + 5(8+2)\r\n        OoOB = `${numberM}(${numberL2} + ${numberM2}) + ${numberS}(${numberL} - ${numberS2}) ` //5(8+2) + 2(9-4)\r\n        OoOC = `${numberM}(${numberL2} + ${numberM2}) + (${numberL} - ${numberS2}) × ${numberS} ` //5(8+2) + (9-4) x 2\r\n        answer = numberS*(numberL-numberS2)+numberM*(numberL2+numberM2)\r\n        wrong = [numberS*numberL-numberS2+numberM*numberL2+numberM2, \r\n            (Math.floor(((numberL+numberS)*numberL2)/numberS)-numberS2)*numberM2,\r\n            (((numberS*numberL-numberS2)+numberM)*numberL2)+numberM2, answer-1\r\n        ]\r\n        if (userSelection.specify==='Integers'){\r\n            wrong.push(answer*-1, \r\n                numberS*(numberL-numberS2*-1)+numberM*(numberL2+numberM2),\r\n                numberS*-1*(numberL-numberS2*-1)+numberM*(numberL2+numberM2),\r\n                )\r\n        } else if (userSelection.specify==='Decimals') {\r\n            wrong.push(answer/10, answer*10, answer+0.1, answer+0.01,\r\n                numberS*(numberL-numberS2/10)+numberM*(numberL2+numberM2),\r\n                )\r\n        }\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n\r\n    }        \r\n    var randProbObj = shuffleArray(probArray)[0]\r\n    wrong=shuffleArray(randProbObj.wrong)\r\n    var randProb = shuffleArray(randProbObj.prob)[0]\r\n    var AC = answerChoicesKey(randProbObj.answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text: randQuest + randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: randProbObj.answer}\r\n    return problem\r\n}\r\n\r\nexport const orderOps4 = (userSelection) => { //oooD\r\n    var randQuest = simpleQArray[randWhole(simpleQArray.length, 0)]\r\n    var numList = orderOpsNumbers(userSelection) \r\n    var [numberL, numberL2, numberM] = [numList[4], numList[5], numList[2]]\r\n    var [numberS, numberS2, numberM2] = [numList[0], numList[1], numList[3]]\r\n    var dividend = numberM2*numberS2\r\n    var probArray = []\r\n\r\n    if (userSelection[\"3 steps\"]) { \r\n        var OoOA = `[${numberL2} + (${numberL} - ${numberS})] × ${numberM2}` //[40+(30-10)]x20\r\n        var OoOB = `${numberM2}[${numberL2} + (${numberL} - ${numberS})]` // 20[40+(30-10)]\r\n        var OoOC = `${numberM2}(${numberL} - ${numberS} + ${numberL2})` // 20[30-10+40]\r\n        var answer = (numberL2+(numberL-numberS))*numberM2\r\n        var wrong = [(numberL2+(numberL-numberS))*(numberM2+1), \r\n                    Math.abs(numberL2*numberL-numberS*numberM2), \r\n                    numberL2*numberM2+Math.abs(numberL-numberS),   \r\n                    (numberL2+numberL-numberS+1)*numberM2, answer+1,answer-1]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } if (userSelection[\"4 steps\"]) { \r\n        OoOA = `[${numberL2} + (${numberS2} × ${numberL} - ${numberS})] × ${numberM2}` // [100+(8x40-10)]x40\r\n        OoOB = `${numberM2}[${numberL2} + (${numberS2} × ${numberL} - ${numberS})]` // 40[100+(8x40-10)]\r\n        OoOC = `${numberM2}[(${numberS2} × ${numberL} - ${numberS}) + ${numberL2}]` //40[(8x40-10)+100]\r\n        answer = (numberL2+(numberS2*numberL-numberS))*numberM2\r\n        wrong = [(numberL2+(numberS2*numberL-numberS))*eval(numberM2+1), \r\n                (numberL2+numberS2)*numberL-numberS,\r\n                 numberL2+Math.abs(numberS2*numberL-numberS*numberM2),   \r\n                 (((numberL2+numberS2)*numberL)-numberS)*numberM2, answer+1,answer-1]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n        \r\n      } if (userSelection[\"5 steps\"]) { //\r\n        OoOA = `${numberM2}[${numberL2} + (${numberM} + ${numberS2} × ${numberL} - ${numberS})]` // 40[100+(30+8x40-10)]\r\n        OoOB = `${numberM2}[${numberL2} + (${numberS2} × ${numberL} - ${numberS} + ${numberM})]` // 40[100+(8x40-10+30)]\r\n        OoOC = `[${numberL2} + (${numberM} + ${numberS2} × ${numberL} - ${numberS})] × ${numberM2} ` // [100+(30+8x40-10)] x 40\r\n        answer = (numberL2+(numberM+numberS2*numberL-numberS))*numberM2\r\n        wrong = [(numberL2+(numberM+numberS2*numberL-numberS))*numberM2+1, \r\n                (Math.floor(numberL2+numberM+numberS2)*numberL-numberS),\r\n                 Math.floor(numberL2+numberM+Math.abs(numberS2*numberL-numberS*numberM2)),   \r\n                 Math.floor((((numberL2+numberS2+numberM)*numberL)-numberS)*numberM2),\r\n                answer-1, answer+1] \r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n        \r\n    }        \r\n    var randProbObj = shuffleArray(probArray)[0]\r\n    wrong=shuffleArray(randProbObj.wrong)\r\n    var randProb = shuffleArray(randProbObj.prob)[0]\r\n    var AC = answerChoicesKey(randProbObj.answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text: randQuest + randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: randProbObj.answer}\r\n    return problem\r\n}\r\n\r\nexport const orderOps5 = (userSelection) => { //oooE\r\n    console.log(userSelection)\r\n    var randQuest = simpleQArray[randWhole(simpleQArray.length, 0)]\r\n    var numList = orderOpsNumbers(userSelection) \r\n    var [numberL, numberL2, numberM] = [numList[4], numList[5], numList[2]]\r\n    var [numberS, numberS2, numberM2] = [numList[0], numList[1], numList[3]]\r\n    numberM2 = eval(numberM2+'+'+numberS2)\r\n    var probArray = []\r\n\r\n    if (userSelection[\"3 steps\"]) { \r\n        var OoOA = `${numberL2}[${numberL} + (${numberM2} - ${numberS2})]` //5[9+(7-2)]\r\n        var OoOB = `${numberL2}[(${numberM2} - ${numberS2}) + ${numberL}]` //5[(7-2)+9]\r\n        var OoOC = `[${numberL} + (${numberM2} - ${numberS2})] × ${numberL2}` //[9+(7-2)]x5\r\n        var answer = numberL2*(numberL+(numberM2-numberS2))\r\n        var wrong = [numberL2+(numberL+(numberM2+numberM2+numberM2-numberS2)), \r\n                    answer+1, answer-1,\r\n                    numberL2*numberL + numberM2, \r\n                    (numberL2*numberL)*numberM2-numberS2]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n\r\n      } else if (userSelection['4 steps']) { \r\n        OoOA = `${numberL2}[${numberL} + ${numberM}(${numberM2} - ${numberS2})]` // 5[9+6(7-2)]\r\n        OoOB = `${numberL2}[${numberM}(${numberM2} - ${numberS2}) + ${numberL}]` // 5[6(7-2)+9]\r\n        OoOC = `${numberL2} × [${numberL} + ${numberM}(${numberM2} - ${numberS2})]` //5x[9+6(7-2)]\r\n        answer = numberL2*(numberL+numberM*(numberM2-numberS2))\r\n        wrong = [numberL2+(numberL+numberM+(numberM2-numberS2)), answer+1,answer-1,\r\n                numberL2*(numberL+numberM)*(numberM2-numberS2),\r\n                numberL2*numberL + (numberM*numberM2-numberS2), \r\n                ((numberL2*numberL+numberM)*numberM2)-numberS2]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n        \r\n      } if (userSelection['5 steps']){ \r\n        OoOA = `${numberL2}[${numberL} + ${numberM}(${numberM2} × ${numberS} - ${numberS2})]` // 5[9+6(7x3-2)]\r\n        OoOB = `${numberL2}[${numberM}(${numberM2} × ${numberS} - ${numberS2}) + ${numberL}]` //5[6(7x3-2)+9]\r\n        OoOC = `[${numberM}(${numberL} + ${numberS} × ${numberM2} - ${numberS2})] × ${numberL}` //[9+6(3x7-2)]x5\r\n        answer = numberL2*(numberL+numberM*(numberM2*numberS-numberS2))\r\n        wrong = [numberL2+(numberL+numberM+(numberM2*numberS-numberS2)), answer+1,answer-1,\r\n                numberL2*(numberL+numberM)*(numberM2*numberS-numberS2),\r\n                numberL2*numberL + (numberM*numberM2*numberS-numberS2), \r\n                ((numberL2*numberL+numberM)*numberM2*numberS)-numberS2]\r\n        probArray.push({prob:[OoOA, OoOB, OoOC], answer: answer, wrong: wrong})\r\n        \r\n    }        \r\n    var randProbObj = shuffleArray(probArray)[0]\r\n    wrong=shuffleArray(randProbObj.wrong)\r\n    var randProb = shuffleArray(randProbObj.prob)[0]\r\n    var AC = answerChoicesKey(randProbObj.answer, wrong[0], wrong[1], wrong[2])\r\n\r\n    var problem = {text: randQuest + randProb,\r\n        answerChoices: AC,\r\n        correctAnswer: randProbObj.answer}\r\n    return problem\r\n}\r\n\r\nexport const randOrderOps = (userSelection) => {\r\n    var probArray = [orderOps, orderOps2, orderOps3, orderOps4, orderOps5]\r\n    if (userSelection.specify === '3by1' || '4by1') {\r\n        probArray.push()\r\n    } //else if (userSelection.specify === '2by2') {\r\n\r\n    // } else {//3by2\r\n\r\n    // }\r\n    var randProb = shuffleArray(probArray)[0]\r\n    return randProb(userSelection)\r\n}\r\n//ideas: \r\n//make order of op problems the answer choices and have them select the one that is or is not the same as a given answer. \r\n\r\n// give two problems asking if the given problems have the same answer. (make it 50/50)\r\n\r\n//make it show student solving and they identify what step was messed up.\r\n\r\n","C:\\projects\\worksheet-creator\\src\\worksheet\\pages\\UserWorksheets.js",["372"],"C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetList.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetItem.js",[],"C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Map.js",["373"],"import React, { useRef, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Map.css\";\r\n//useEffect allows you to input function that can execute when certain inputs change\r\n//useRef can create referenes which can be used to get a reference/pointer to a real dom node. with REST, create variables which survive re-render\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  const {center, zoom} = props; //pulls elements out of props so you dont have to do props. Allows you to use the props inside hte useEffect without it changing anytime any props change.\r\n\r\n  useEffect(()=>{\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n\r\n  }, [center, zoom]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n",["374","375"],"C:\\projects\\worksheet-creator\\src\\worksheet\\components\\WorksheetData.js",["376","377","378"],"C:\\projects\\worksheet-creator\\src\\shared\\components\\UIElements\\Avatar.js",[],"C:\\projects\\worksheet-creator\\src\\general\\pages\\Teachers.js",["379"],"import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Dice from \"../../app-files/images/dice.png\";\r\nimport Students from \"../../app-files/images/students.png\";\r\nimport Teacher from \"../../app-files/images/teacher.png\";\r\nimport Education from \"../../app-files/images/education.svg\";\r\nimport Clock from \"../../app-files/images/clock.png\";\r\nimport \"./home.css\";\r\n\r\nconst Teachers = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <div className=\"header-center\">\r\n          <div>\r\n            <h1>\r\n              Instantly create custom assignments for your students!\r\n            </h1>\r\n            <p>\r\n              Let infinite math do all the work so you can save hundreds of hours of planning time.\r\n            </p>\r\n            <div className=\"signup\">\r\n              <Link className=\"create-assign-button\" to=\"/auth\">\r\n                Sign up now!\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div>\r\n          <img  src={Education} alt=\"education\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"info-card-container\">\r\n        <div className=\"info-card\">\r\n          <h3>Differentiate</h3>\r\n          <img className=\"info-card-icons\" src={Students} alt=\"students\"></img>\r\n\r\n          <p>\r\n            Customize your assignments to meet the needs of every student in\r\n            your room. You can quickly create many versions of your assignments\r\n            tailored to your students individual needs.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Multiple Versions</h3>\r\n          <img className=\"info-card-icons\" src={Clock} alt=\"clock\"></img>\r\n\r\n          <p>\r\n            Make multiple versions of assignments to: <br />\r\n            <ul>\r\n              <li>Prevent copying during assessments</li>\r\n              <li>Create a review prior to an assessment</li>\r\n              <li>Create re-teach material for struggling students</li>\r\n              <li>Create multiple re-tests for students who failed</li>\r\n            </ul>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"info-card-container\">\r\n        <div className=\"info-card\">\r\n          <h3>Spiral</h3>\r\n          <img className=\"info-card-icons\" src={Dice} alt=\"dice\"></img>\r\n\r\n          <p>\r\n            Easily create assignments that spiral back to older concepts so that\r\n            students do not forget. With Infinite Math you can mix and match any\r\n            concepts to create a truly unique assignment.\r\n          </p>\r\n        </div>\r\n        <div className=\"info-card\">\r\n          <h3>Infinite</h3>\r\n          <img className=\"info-card-icons\" src={Dice} alt=\"dice\"></img>\r\n\r\n          <p>\r\n            Since our program randomly generates the problems you can create an\r\n            endless amount of activities for your students. <br />\r\n            <ul>\r\n              <li>Homework</li>\r\n              <li>Warm-ups</li>\r\n              <li>Assessments</li>\r\n              <li>Re-Assessments</li>\r\n              <li>Differentiated Classwork</li>\r\n              <li>Small group work</li>\r\n            </ul>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teachers;\r\n","C:\\projects\\worksheet-creator\\src\\general\\pages\\Parents.js",[],"C:\\projects\\worksheet-creator\\src\\general\\pages\\Schools.js",[],"C:\\projects\\worksheet-creator\\src\\general\\pages\\Home.js",[],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\fract-shared.js",["380"],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\divide-fract.js",["381","382"],"C:\\projects\\worksheet-creator\\src\\worksheet\\problems\\multiply-fract.js",["383","384"],"C:\\projects\\worksheet-creator\\src\\worksheet\\functions\\createWorksheet.js",["385","386","387","388"],"C:\\projects\\worksheet-creator\\src\\worksheet\\functions\\conceptCheck.js",[],{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","replacedBy":"392"},{"ruleId":"393","severity":1,"message":"394","line":1,"column":38,"nodeType":"395","messageId":"396","endLine":1,"endColumn":44},{"ruleId":"393","severity":1,"message":"397","line":5,"column":22,"nodeType":"395","messageId":"396","endLine":5,"endColumn":28},{"ruleId":"393","severity":1,"message":"398","line":5,"column":37,"nodeType":"395","messageId":"396","endLine":5,"endColumn":41},{"ruleId":"393","severity":1,"message":"399","line":18,"column":8,"nodeType":"395","messageId":"396","endLine":18,"endColumn":23},{"ruleId":"393","severity":1,"message":"400","line":24,"column":3,"nodeType":"395","messageId":"396","endLine":24,"endColumn":8},{"ruleId":"393","severity":1,"message":"401","line":28,"column":3,"nodeType":"395","messageId":"396","endLine":28,"endColumn":18},{"ruleId":"393","severity":1,"message":"402","line":96,"column":21,"nodeType":"395","messageId":"396","endLine":96,"endColumn":33},{"ruleId":"393","severity":1,"message":"403","line":97,"column":11,"nodeType":"395","messageId":"396","endLine":97,"endColumn":20},{"ruleId":"393","severity":1,"message":"404","line":97,"column":22,"nodeType":"395","messageId":"396","endLine":97,"endColumn":27},{"ruleId":"393","severity":1,"message":"405","line":97,"column":42,"nodeType":"395","messageId":"396","endLine":97,"endColumn":52},{"ruleId":"406","severity":1,"message":"407","line":115,"column":6,"nodeType":"408","endLine":115,"endColumn":8,"suggestions":"409"},{"ruleId":"406","severity":1,"message":"407","line":123,"column":6,"nodeType":"408","endLine":123,"endColumn":8,"suggestions":"410"},{"ruleId":"393","severity":1,"message":"411","line":4,"column":8,"nodeType":"395","messageId":"396","endLine":4,"endColumn":21},{"ruleId":"393","severity":1,"message":"412","line":2,"column":17,"nodeType":"395","messageId":"396","endLine":2,"endColumn":26},{"ruleId":"393","severity":1,"message":"413","line":11,"column":11,"nodeType":"395","messageId":"396","endLine":11,"endColumn":15},{"ruleId":"393","severity":1,"message":"403","line":14,"column":12,"nodeType":"395","messageId":"396","endLine":14,"endColumn":21},{"ruleId":"393","severity":1,"message":"404","line":14,"column":23,"nodeType":"395","messageId":"396","endLine":14,"endColumn":28},{"ruleId":"393","severity":1,"message":"414","line":14,"column":30,"nodeType":"395","messageId":"396","endLine":14,"endColumn":41},{"ruleId":"393","severity":1,"message":"405","line":14,"column":43,"nodeType":"395","messageId":"396","endLine":14,"endColumn":53},{"ruleId":"393","severity":1,"message":"415","line":8,"column":8,"nodeType":"395","messageId":"396","endLine":8,"endColumn":13},{"ruleId":"393","severity":1,"message":"416","line":9,"column":8,"nodeType":"395","messageId":"396","endLine":9,"endColumn":28},{"ruleId":"417","severity":1,"message":"418","line":84,"column":1,"nodeType":"419","messageId":"420","endLine":88,"endColumn":2},{"ruleId":"417","severity":1,"message":"418","line":89,"column":1,"nodeType":"419","messageId":"420","endLine":99,"endColumn":2},{"ruleId":"417","severity":1,"message":"418","line":100,"column":1,"nodeType":"419","messageId":"420","endLine":110,"endColumn":2},{"ruleId":"417","severity":1,"message":"418","line":112,"column":1,"nodeType":"419","messageId":"420","endLine":122,"endColumn":2},{"ruleId":"393","severity":1,"message":"398","line":2,"column":10,"nodeType":"395","messageId":"396","endLine":2,"endColumn":14},{"ruleId":"393","severity":1,"message":"421","line":1,"column":9,"nodeType":"395","messageId":"396","endLine":1,"endColumn":21},{"ruleId":"393","severity":1,"message":"422","line":1,"column":23,"nodeType":"395","messageId":"396","endLine":1,"endColumn":32},{"ruleId":"393","severity":1,"message":"423","line":1,"column":41,"nodeType":"395","messageId":"396","endLine":1,"endColumn":49},{"ruleId":"393","severity":1,"message":"412","line":1,"column":39,"nodeType":"395","messageId":"396","endLine":1,"endColumn":48},{"ruleId":"393","severity":1,"message":"424","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":14},{"ruleId":"393","severity":1,"message":"425","line":10,"column":10,"nodeType":"395","messageId":"396","endLine":10,"endColumn":20},{"ruleId":"393","severity":1,"message":"426","line":10,"column":22,"nodeType":"395","messageId":"396","endLine":10,"endColumn":35},{"ruleId":"393","severity":1,"message":"403","line":11,"column":11,"nodeType":"395","messageId":"396","endLine":11,"endColumn":20},{"ruleId":"393","severity":1,"message":"404","line":11,"column":22,"nodeType":"395","messageId":"396","endLine":11,"endColumn":27},{"ruleId":"393","severity":1,"message":"414","line":11,"column":29,"nodeType":"395","messageId":"396","endLine":11,"endColumn":40},{"ruleId":"393","severity":1,"message":"405","line":11,"column":42,"nodeType":"395","messageId":"396","endLine":11,"endColumn":52},{"ruleId":"393","severity":1,"message":"427","line":1,"column":29,"nodeType":"395","messageId":"396","endLine":1,"endColumn":37},{"ruleId":"393","severity":1,"message":"428","line":7,"column":9,"nodeType":"395","messageId":"396","endLine":7,"endColumn":15},{"ruleId":"393","severity":1,"message":"429","line":5,"column":14,"nodeType":"395","messageId":"396","endLine":5,"endColumn":18},{"ruleId":"393","severity":1,"message":"430","line":5,"column":19,"nodeType":"395","messageId":"396","endLine":5,"endColumn":29},{"ruleId":"393","severity":1,"message":"431","line":40,"column":9,"nodeType":"395","messageId":"396","endLine":40,"endColumn":14},{"ruleId":"432","severity":1,"message":"433","line":56,"column":13,"nodeType":"395","messageId":"434","endLine":56,"endColumn":18},{"ruleId":"393","severity":1,"message":"431","line":69,"column":9,"nodeType":"395","messageId":"396","endLine":69,"endColumn":14},{"ruleId":"432","severity":1,"message":"433","line":95,"column":9,"nodeType":"395","messageId":"434","endLine":95,"endColumn":14},{"ruleId":"393","severity":1,"message":"429","line":4,"column":21,"nodeType":"395","messageId":"396","endLine":4,"endColumn":25},{"ruleId":"393","severity":1,"message":"435","line":4,"column":27,"nodeType":"395","messageId":"396","endLine":4,"endColumn":31},{"ruleId":"393","severity":1,"message":"428","line":5,"column":9,"nodeType":"395","messageId":"396","endLine":5,"endColumn":15},{"ruleId":"436","severity":1,"message":"437","line":58,"column":9,"nodeType":"395","messageId":"438","endLine":58,"endColumn":21},{"ruleId":"436","severity":1,"message":"437","line":63,"column":27,"nodeType":"395","messageId":"438","endLine":63,"endColumn":39},{"ruleId":"436","severity":1,"message":"437","line":64,"column":27,"nodeType":"395","messageId":"438","endLine":64,"endColumn":39},{"ruleId":"432","severity":1,"message":"439","line":139,"column":14,"nodeType":"395","messageId":"434","endLine":139,"endColumn":21},{"ruleId":"432","severity":1,"message":"440","line":139,"column":23,"nodeType":"395","messageId":"434","endLine":139,"endColumn":30},{"ruleId":"432","severity":1,"message":"439","line":141,"column":14,"nodeType":"395","messageId":"434","endLine":141,"endColumn":21},{"ruleId":"432","severity":1,"message":"440","line":141,"column":23,"nodeType":"395","messageId":"434","endLine":141,"endColumn":30},{"ruleId":"432","severity":1,"message":"439","line":144,"column":14,"nodeType":"395","messageId":"434","endLine":144,"endColumn":21},{"ruleId":"432","severity":1,"message":"440","line":144,"column":23,"nodeType":"395","messageId":"434","endLine":144,"endColumn":30},{"ruleId":"393","severity":1,"message":"441","line":348,"column":19,"nodeType":"395","messageId":"396","endLine":348,"endColumn":26},{"ruleId":"393","severity":1,"message":"441","line":374,"column":19,"nodeType":"395","messageId":"396","endLine":374,"endColumn":26},{"ruleId":"393","severity":1,"message":"442","line":464,"column":9,"nodeType":"395","messageId":"396","endLine":464,"endColumn":13},{"ruleId":"393","severity":1,"message":"443","line":465,"column":9,"nodeType":"395","messageId":"396","endLine":465,"endColumn":14},{"ruleId":"393","severity":1,"message":"430","line":2,"column":20,"nodeType":"395","messageId":"396","endLine":2,"endColumn":30},{"ruleId":"444","severity":1,"message":"445","line":102,"column":18,"nodeType":"446","messageId":"447","endLine":102,"endColumn":22},{"ruleId":"393","severity":1,"message":"448","line":228,"column":7,"nodeType":"395","messageId":"396","endLine":228,"endColumn":8},{"ruleId":"393","severity":1,"message":"449","line":101,"column":23,"nodeType":"395","messageId":"396","endLine":101,"endColumn":27},{"ruleId":"393","severity":1,"message":"450","line":105,"column":9,"nodeType":"395","messageId":"396","endLine":105,"endColumn":17},{"ruleId":"432","severity":1,"message":"433","line":114,"column":13,"nodeType":"395","messageId":"434","endLine":114,"endColumn":18},{"ruleId":"432","severity":1,"message":"451","line":116,"column":13,"nodeType":"395","messageId":"434","endLine":116,"endColumn":18},{"ruleId":"393","severity":1,"message":"441","line":136,"column":19,"nodeType":"395","messageId":"396","endLine":136,"endColumn":26},{"ruleId":"393","severity":1,"message":"441","line":158,"column":19,"nodeType":"395","messageId":"396","endLine":158,"endColumn":26},{"ruleId":"452","severity":1,"message":"453","line":148,"column":38,"nodeType":"454","messageId":"455","endLine":148,"endColumn":40},{"ruleId":"452","severity":1,"message":"453","line":148,"column":111,"nodeType":"454","messageId":"455","endLine":148,"endColumn":113},{"ruleId":"393","severity":1,"message":"456","line":231,"column":20,"nodeType":"395","messageId":"396","endLine":231,"endColumn":30},{"ruleId":"436","severity":1,"message":"457","line":248,"column":27,"nodeType":"395","messageId":"438","endLine":248,"endColumn":31},{"ruleId":"436","severity":1,"message":"457","line":256,"column":27,"nodeType":"395","messageId":"438","endLine":256,"endColumn":31},{"ruleId":"436","severity":1,"message":"457","line":264,"column":27,"nodeType":"395","messageId":"438","endLine":264,"endColumn":31},{"ruleId":"436","severity":1,"message":"457","line":272,"column":27,"nodeType":"395","messageId":"438","endLine":272,"endColumn":31},{"ruleId":"436","severity":1,"message":"457","line":281,"column":27,"nodeType":"395","messageId":"438","endLine":281,"endColumn":31},{"ruleId":"436","severity":1,"message":"457","line":290,"column":27,"nodeType":"395","messageId":"438","endLine":290,"endColumn":31},{"ruleId":"393","severity":1,"message":"458","line":310,"column":44,"nodeType":"395","messageId":"396","endLine":310,"endColumn":52},{"ruleId":"393","severity":1,"message":"456","line":364,"column":20,"nodeType":"395","messageId":"396","endLine":364,"endColumn":30},{"ruleId":"393","severity":1,"message":"459","line":367,"column":7,"nodeType":"395","messageId":"396","endLine":367,"endColumn":15},{"ruleId":"393","severity":1,"message":"460","line":368,"column":7,"nodeType":"395","messageId":"396","endLine":368,"endColumn":16},{"ruleId":"436","severity":1,"message":"457","line":384,"column":27,"nodeType":"395","messageId":"438","endLine":384,"endColumn":31},{"ruleId":"436","severity":1,"message":"457","line":392,"column":27,"nodeType":"395","messageId":"438","endLine":392,"endColumn":31},{"ruleId":"393","severity":1,"message":"461","line":393,"column":7,"nodeType":"395","messageId":"396","endLine":393,"endColumn":17},{"ruleId":"436","severity":1,"message":"457","line":401,"column":27,"nodeType":"395","messageId":"438","endLine":401,"endColumn":31},{"ruleId":"436","severity":1,"message":"457","line":409,"column":27,"nodeType":"395","messageId":"438","endLine":409,"endColumn":31},{"ruleId":"436","severity":1,"message":"457","line":417,"column":27,"nodeType":"395","messageId":"438","endLine":417,"endColumn":31},{"ruleId":"393","severity":1,"message":"458","line":436,"column":49,"nodeType":"395","messageId":"396","endLine":436,"endColumn":57},{"ruleId":"393","severity":1,"message":"459","line":439,"column":7,"nodeType":"395","messageId":"396","endLine":439,"endColumn":15},{"ruleId":"393","severity":1,"message":"456","line":482,"column":27,"nodeType":"395","messageId":"396","endLine":482,"endColumn":37},{"ruleId":"393","severity":1,"message":"460","line":487,"column":7,"nodeType":"395","messageId":"396","endLine":487,"endColumn":16},{"ruleId":"393","severity":1,"message":"462","line":488,"column":7,"nodeType":"395","messageId":"396","endLine":488,"endColumn":16},{"ruleId":"432","severity":1,"message":"463","line":543,"column":7,"nodeType":"395","messageId":"434","endLine":543,"endColumn":11},{"ruleId":"393","severity":1,"message":"464","line":1,"column":10,"nodeType":"395","messageId":"396","endLine":1,"endColumn":12},{"ruleId":"393","severity":1,"message":"465","line":3,"column":66,"nodeType":"395","messageId":"396","endLine":3,"endColumn":69},{"ruleId":"393","severity":1,"message":"466","line":5,"column":5,"nodeType":"395","messageId":"396","endLine":5,"endColumn":6},{"ruleId":"432","severity":1,"message":"467","line":128,"column":13,"nodeType":"395","messageId":"434","endLine":128,"endColumn":19},{"ruleId":"432","severity":1,"message":"439","line":128,"column":21,"nodeType":"395","messageId":"434","endLine":128,"endColumn":28},{"ruleId":"432","severity":1,"message":"440","line":129,"column":12,"nodeType":"395","messageId":"434","endLine":129,"endColumn":19},{"ruleId":"432","severity":1,"message":"467","line":131,"column":14,"nodeType":"395","messageId":"434","endLine":131,"endColumn":20},{"ruleId":"432","severity":1,"message":"439","line":131,"column":22,"nodeType":"395","messageId":"434","endLine":131,"endColumn":29},{"ruleId":"432","severity":1,"message":"440","line":132,"column":13,"nodeType":"395","messageId":"434","endLine":132,"endColumn":20},{"ruleId":"432","severity":1,"message":"467","line":134,"column":14,"nodeType":"395","messageId":"434","endLine":134,"endColumn":20},{"ruleId":"432","severity":1,"message":"439","line":134,"column":22,"nodeType":"395","messageId":"434","endLine":134,"endColumn":29},{"ruleId":"432","severity":1,"message":"440","line":135,"column":13,"nodeType":"395","messageId":"434","endLine":135,"endColumn":20},{"ruleId":"432","severity":1,"message":"468","line":136,"column":13,"nodeType":"395","messageId":"434","endLine":136,"endColumn":17},{"ruleId":"432","severity":1,"message":"467","line":138,"column":10,"nodeType":"395","messageId":"434","endLine":138,"endColumn":16},{"ruleId":"432","severity":1,"message":"439","line":138,"column":18,"nodeType":"395","messageId":"434","endLine":138,"endColumn":25},{"ruleId":"432","severity":1,"message":"440","line":138,"column":27,"nodeType":"395","messageId":"434","endLine":138,"endColumn":34},{"ruleId":"432","severity":1,"message":"467","line":161,"column":14,"nodeType":"395","messageId":"434","endLine":161,"endColumn":20},{"ruleId":"432","severity":1,"message":"439","line":161,"column":22,"nodeType":"395","messageId":"434","endLine":161,"endColumn":29},{"ruleId":"432","severity":1,"message":"440","line":162,"column":13,"nodeType":"395","messageId":"434","endLine":162,"endColumn":20},{"ruleId":"406","severity":1,"message":"469","line":37,"column":6,"nodeType":"408","endLine":37,"endColumn":35,"suggestions":"470"},{"ruleId":"452","severity":1,"message":"453","line":10,"column":40,"nodeType":"454","messageId":"455","endLine":10,"endColumn":42},{"ruleId":"452","severity":1,"message":"453","line":10,"column":113,"nodeType":"454","messageId":"455","endLine":10,"endColumn":115},{"ruleId":"432","severity":1,"message":"471","line":98,"column":9,"nodeType":"395","messageId":"434","endLine":98,"endColumn":14},{"ruleId":"432","severity":1,"message":"471","line":153,"column":9,"nodeType":"395","messageId":"434","endLine":153,"endColumn":14},{"ruleId":"393","severity":1,"message":"472","line":169,"column":9,"nodeType":"395","messageId":"396","endLine":169,"endColumn":17},{"ruleId":"432","severity":1,"message":"471","line":219,"column":9,"nodeType":"395","messageId":"434","endLine":219,"endColumn":14},{"ruleId":"393","severity":1,"message":"472","line":234,"column":9,"nodeType":"395","messageId":"396","endLine":234,"endColumn":17},{"ruleId":"444","severity":1,"message":"445","line":253,"column":56,"nodeType":"446","messageId":"447","endLine":253,"endColumn":60},{"ruleId":"432","severity":1,"message":"471","line":273,"column":9,"nodeType":"395","messageId":"434","endLine":273,"endColumn":14},{"ruleId":"432","severity":1,"message":"473","line":289,"column":9,"nodeType":"395","messageId":"434","endLine":289,"endColumn":17},{"ruleId":"444","severity":1,"message":"445","line":289,"column":20,"nodeType":"446","messageId":"447","endLine":289,"endColumn":24},{"ruleId":"432","severity":1,"message":"471","line":327,"column":9,"nodeType":"395","messageId":"434","endLine":327,"endColumn":14},{"ruleId":"406","severity":1,"message":"469","line":28,"column":6,"nodeType":"408","endLine":28,"endColumn":27,"suggestions":"474"},{"ruleId":"393","severity":1,"message":"475","line":2,"column":8,"nodeType":"395","messageId":"396","endLine":2,"endColumn":16},{"ruleId":"389","replacedBy":"476"},{"ruleId":"391","replacedBy":"477"},{"ruleId":"393","severity":1,"message":"478","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":25},{"ruleId":"393","severity":1,"message":"398","line":2,"column":9,"nodeType":"395","messageId":"396","endLine":2,"endColumn":13},{"ruleId":"393","severity":1,"message":"479","line":9,"column":8,"nodeType":"395","messageId":"396","endLine":9,"endColumn":18},{"ruleId":"393","severity":1,"message":"480","line":5,"column":8,"nodeType":"395","messageId":"396","endLine":5,"endColumn":15},{"ruleId":"393","severity":1,"message":"481","line":163,"column":7,"nodeType":"395","messageId":"396","endLine":163,"endColumn":29},{"ruleId":"393","severity":1,"message":"430","line":6,"column":19,"nodeType":"395","messageId":"396","endLine":6,"endColumn":29},{"ruleId":"482","severity":1,"message":"483","line":24,"column":19,"nodeType":"395","messageId":"484","endLine":24,"endColumn":26},{"ruleId":"393","severity":1,"message":"430","line":6,"column":19,"nodeType":"395","messageId":"396","endLine":6,"endColumn":29},{"ruleId":"482","severity":1,"message":"483","line":22,"column":17,"nodeType":"395","messageId":"484","endLine":22,"endColumn":24},{"ruleId":"393","severity":1,"message":"485","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":27},{"ruleId":"393","severity":1,"message":"486","line":1,"column":29,"nodeType":"395","messageId":"396","endLine":1,"endColumn":39},{"ruleId":"393","severity":1,"message":"487","line":146,"column":7,"nodeType":"395","messageId":"396","endLine":146,"endColumn":29},{"ruleId":"393","severity":1,"message":"488","line":190,"column":9,"nodeType":"395","messageId":"396","endLine":190,"endColumn":22},"no-native-reassign",["489"],"no-negated-in-lhs",["490"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Link' is defined but never used.","'DraftBackground' is defined but never used.","'Image' is defined but never used.","'PDFDownloadLink' is defined but never used.","'setCopyState' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["491"],["492"],"'ArrowBackIcon' is defined but never used.","'useEffect' is defined but never used.","'auth' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","'Input' is defined but never used.","'DisplayUserSelection' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'defaultProps' is defined but never used.","'PropTypes' is defined but never used.","'Fragment' is defined but never used.","'Avatar' is defined but never used.","'loadedUser' is assigned a value but never used.","'setLoadedUser' is assigned a value but never used.","'roundDec' is defined but never used.","'styles' is assigned a value but never used.","'View' is defined but never used.","'StyleSheet' is defined but never used.","'whole' is assigned a value but never used.","no-redeclare","'prob1' is already defined.","redeclared","'Text' is defined but never used.","no-use-before-define","'randDecimal2' was used before it was defined.","usedBeforeDefined","'numberS' is already defined.","'numberL' is already defined.","'numberM' is assigned a value but never used.","'name' is assigned a value but never used.","'sport' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'E' is assigned a value but never used.","'mass' is assigned a value but never used.","'numberL2' is assigned a value but never used.","'prob2' is already defined.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'patternNum' is assigned a value but never used.","'text' was used before it was defined.","'tablNum2' is assigned a value but never used.","'wrongNum' is assigned a value but never used.","'wrongNum2' is assigned a value but never used.","'randAddend' is assigned a value but never used.","'wrongNum3' is assigned a value but never used.","'text' is already defined.","'to' is defined but never used.","'cap' is defined but never used.","'e' is assigned a value but never used.","'answer' is already defined.","'item' is already defined.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["493"],"'wrong' is already defined.","'dividend' is assigned a value but never used.","'numberM2' is already defined.",["494"],"'ReactDOM' is defined but never used.",["489"],["490"],"'useState' is defined but never used.","'DeleteIcon' is defined but never used.","'Teacher' is defined but never used.","'cell_style_mixednumber' is assigned a value but never used.","no-self-assign","'number1' is assigned to itself.","selfAssignment","'useContext' is defined but never used.","'useHistory' is defined but never used.","'questionAnswerViewList' is assigned a value but never used.","'spaceProblems' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"495","fix":"496"},{"desc":"495","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},"Update the dependencies array to be: [history]",{"range":"502","text":"503"},{"range":"504","text":"503"},"Update the dependencies array to be: [id, value, isValid, onInput, props]",{"range":"505","text":"506"},"Update the dependencies array to be: [props, sendRequest, userId]",{"range":"507","text":"508"},[3370,3372],"[history]",[3523,3525],[991,1020],"[id, value, isValid, onInput, props]",[1008,1029],"[props, sendRequest, userId]"]