[{"C:\\projects\\worksheet-creator\\src\\index.js":"1","C:\\projects\\worksheet-creator\\src\\reportWebVitals.js":"2","C:\\projects\\worksheet-creator\\src\\App.js":"3","C:\\projects\\worksheet-creator\\src\\app-files\\add-sub.js":"4","C:\\projects\\worksheet-creator\\src\\app-files\\general.js":"5","C:\\projects\\worksheet-creator\\src\\app-files\\order-of-ops.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":6249,"mtime":1607219937585,"results":"10","hashOfConfig":"8"},{"size":6359,"mtime":1607219788710,"results":"11","hashOfConfig":"8"},{"size":1965,"mtime":1607220014582,"results":"12","hashOfConfig":"8"},{"size":7534,"mtime":1607043922614,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ahlkum",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},"C:\\projects\\worksheet-creator\\src\\index.js",[],"C:\\projects\\worksheet-creator\\src\\reportWebVitals.js",[],"C:\\projects\\worksheet-creator\\src\\App.js",["29","30","31"],"C:\\projects\\worksheet-creator\\src\\app-files\\add-sub.js",["32","33","34","35","36","37","38","39","40","41","42"],"import { getDefaultNormalizer } from \"@testing-library/react\"\r\nimport * as gen from './general.js'\r\n\r\n\r\n\r\nexport const addWhole = (Options) => {\r\n    var boy = gen.boyList[Math.floor(Math.random()*gen.boyList.length)]\r\n    var boy2 = gen.boyList2[Math.floor(Math.random()*gen.boyList2.length)]\r\n    var sport = gen.sportList[Math.floor(Math.random()*gen.sportList.length)]\r\n    var [numberS, numberL, numberXS] = [Math.floor(Math.random()*500 + 100), Math.floor(Math.random()*999+500), Math.floor(Math.random()*99+50)];\r\n\r\n    if (Options === \"2\") {\r\n    [numberS, numberL, numberXS] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001), Math.floor(Math.random()*700+300)];\r\n\r\n    } else if (Options ===\"3\") {\r\n    [numberS, numberL, numberXS] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001), Math.floor(Math.random()*700+300)];\r\n\r\n    } \r\n    var answer = (numberL+numberS)\r\n    var wrong= gen.wrongOptions(answer, 'add', numberL, numberS)\r\n    console.log(wrong)\r\n    var tempAC = [answer, wrong[0], wrong[1], wrong[2]]\r\n    console.log(AC)\r\n    // var wrong= gen.shuffleArray(gen.wrongOptions(answer, 'decimal', numberL, numberS))\r\n    var AC = gen.shuffleArray(tempAC)\r\n    \r\n    var problem = {questionText:    (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n                                    \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last year. How many minutes did \"\r\n                                     + boy + \" and \" + boy2 + ' play altogether? \\r\\n  '),\r\n    \r\n                answerChoices: AC,\r\n            \r\n                correctAnswer:answer}\r\n    \r\n\r\n    console.log(problem)\r\n    // return <div><p>{problem} </p></div>\r\n    return problem\r\n\r\n    // console.log(problem)\r\n            \r\n}\r\nexport const addDec = (Options) => {\r\n    var boy = gen.boyList[Math.floor(Math.random()*gen.boyList.length)]\r\n    var boy2 = gen.boyList2[Math.floor(Math.random()*gen.boyList2.length)]\r\n    var sport = gen.sportList[Math.floor(Math.random()*gen.sportList.length)]\r\n    var [numberS, numberL, numberXS] = [(Math.random()*49999+10011).toFixed(1),  (Math.random()*999999+500011).toFixed(2),  (Math.random()*3999+1001).tofixed(1)];\r\n    var f = 'format'\r\n    var answer= (numberL + numberS);\r\n    var wrong= gen.wrongOptions(answer, 'decimal', numberL, numberS)\r\n    var AC = (answer, wrong[0], wrong[1], wrong[2])\r\n    // var wrong = gen.shuffleArray(gen.wrongOptions(answer, 'add', numberL, numberS))\r\n    // var tempAC = [answer, wrong[0], wrong[1], wrong[2]]\r\n    // var AC = gen.shuffleArray(tempAC)\r\n    var problem = (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n    \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last year. How many minutes did \"\r\n    + boy + \" and \" + boy2 + \" play altogether?\\n    \" + AC[0] + '\\n  ' + AC[1] + '\\n  ' + AC[2] + '\\n  ' + AC[3])\r\n\r\n    console.log(problem)\r\n    \r\n}\r\n\r\nexport const subDec = (Options) => {\r\n    var boy = gen.boyList[Math.floor(Math.random()*gen.boyList.length)]\r\n    var boy2 = gen.boyList2[Math.floor(Math.random()*gen.boyList2.length)]\r\n    var sport = gen.sportList[Math.floor(Math.random()*gen.sportList.length)]\r\n    var f = 'format'\r\n    var [numberS, numberL, numberXS] = [(Math.random()*49999+10011).toFixed(1),  (Math.random()*999999+500011).toFixed(2),  (Math.random()*3999+1001).tofixed(1)];\r\n\r\n    var answer= (numberL - numberS);\r\n    var wrong = gen.shuffleArray(gen.wrongOptions(answer, 'sub', numberL, numberS))\r\n    var tempAC = [answer, wrong[0], wrong[1], wrong[2]]\r\n    var AC = tempAC\r\n    var sub1 = (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n    \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last month. How many more minutes did \"\r\n    + boy2 + \" play than \" + boy + \"?\"+ '\\n  ' + AC[0] + '\\n  ' + AC[1] + '\\n  ' + AC[2] + '\\n  ' + AC[3])\r\n    var sub2 = (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n    \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last month. What is the difference between \" +\r\n    \"the number of minutes \" + boy2 + \" played and the number of minutes \" + boy + \" played?\\n   \" \r\n    + AC[0] + '\\n  ' + AC[1] + '\\n  ' + AC[2] + '\\n  ' + AC[3])\r\n    var randSub = [sub1, sub2][Math.floor(Math.random())]\r\n    console.log(randSub)\r\n}\r\n\r\nexport const subWhole = (Options) => {\r\n    var boy = gen.boyList[Math.floor(Math.random()*gen.boyList.length)]\r\n    var boy2 = gen.boyList2[Math.floor(Math.random()*gen.boyList2.length)]\r\n    var sport = gen.sportList[Math.floor(Math.random()*gen.sportList.length)]\r\n    var f = 'format'\r\n    var [numberS, numberL, numberXS] = [Math.floor(Math.random()*500 + 100), Math.floor(Math.random()*999+500), Math.floor(Math.random()*99+50)];\r\n\r\n    if (Options.level === \"2\") {\r\n        [numberS, numberL, numberXS] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001), Math.floor(Math.random()*700+300)];\r\n    \r\n    } else if (Options.level === \"3\") {\r\n        [numberS, numberL, numberXS] = [Math.floor(Math.random()*4000+1000), Math.floor(Math.random()*9999+4001), Math.floor(Math.random()*700+300)];\r\n\r\n    }\r\n    var answer= (numberL - numberS);\r\n    var wrong = gen.shuffleArray(gen.wrongOptions(answer, 'sub', numberL, numberS))\r\n    var tempAC = [answer, wrong[0], wrong[1], wrong[2]]\r\n    var AC = tempAC\r\n    var sub1 = (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n    \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last month. How many more minutes did \"\r\n    + boy2 + \" play than \" + boy + \"?\"+ '\\n  ' + AC[0] + '\\n  ' + AC[1] + '\\n  ' + AC[2] + '\\n  ' + AC[3])\r\n    var sub2 = (boy + \" played \" + sport + \" for \" + (numberS).toString() + \" minutes last year. \" + boy2 +\r\n    \" played \" + sport + \" for \" + (numberL).toString() + \" minutes last month. What is the difference between \" +\r\n    \"the number of minutes \" + boy2 + \" played and the number of minutes \" + boy + \" played?\\n   \" \r\n    + AC[0] + '\\n  ' + AC[1] + '\\n  ' + AC[2] + '\\n  ' + AC[3])\r\n    var randSub = [sub1, sub2][Math.floor(Math.random())]\r\n    console.log(randSub)\r\n\r\n}",["43","44"],"C:\\projects\\worksheet-creator\\src\\app-files\\general.js",["45","46"],"C:\\projects\\worksheet-creator\\src\\app-files\\order-of-ops.js",["47","48","49","50","51"],"import * as gen from './general.js'\r\n// var simpleQArray = ['What is the value of the expression? \\n',\r\n// 'An expression is shown below, what value is equivalent to the expression?\\n',\r\n// 'Which value is equivalent to the expression below? \\n']\r\nvar simpleQArray = gen.shuffleArray(['What is the value of the expression? \\n',\r\n                  'An expression is shown below, what value is equivalent to the expression?\\n',\r\n                  'Which value is equivalent to the expression below? \\n'])\r\nexport const orderOps = (Options) => {\r\n\r\n\r\n    if (Options.specify === \"whole\") {\r\n        var [numberL, numberL2, numberM] = [Math.floor(Math.random()*20 + 10), Math.floor(Math.random()*20+10), Math.floor(Math.random()*11+2)];\r\n        var [numberS, numberS2, numberM2] = [Math.floor(Math.random()*8 + 2), Math.floor(Math.random()*8+2), Math.floor(Math.random()*11+2)];\r\n\r\n      if (Options.level === \"2\") {\r\n        [numberL, numberL2, numberM] = [Math.floor(Math.random()*50 + 20), Math.floor(Math.random()*50+20), Math.floor(Math.random()*19+10)];\r\n        [numberS, numberS2, numberM2] = [Math.floor(Math.random()*9 + 2), Math.floor(Math.random()*9+2), Math.floor(Math.random()*19+10)];\r\n      } else if (Options.level === \"3\") {\r\n        [numberL, numberL2, numberM] = [Math.floor(Math.random()*200 + 50), Math.floor(Math.random()*200+50), Math.floor(Math.random()*100+20)];\r\n        [numberS, numberS2, numberM2] = [Math.floor(Math.random()*19 + 7), Math.floor(Math.random()*19+7), Math.floor(Math.random()*100+20)];\r\n      }\r\n    }\r\n    else if (Options.specify === \"decimal\") {\r\n        var [f, r] = ['roundFormat', 2]\r\n        var DecimalH = (Math.random()).toFixed(2)\r\n        var DecimalOT = (Math.random()*9 + 1).toFixed(1) \r\n        var DecimalT = (Math.random()*9 + 1).toFixed(1) \r\n\r\n        // var decTwoDigit =  gen.shuffleArray[DecimalOT, DecimalH]\r\n        var decTwoDigit =  [DecimalOT, DecimalH]\r\n\r\n        var DecimalHTOT = (Math.random()*99 + 10).toFixed(2)\r\n        var DecimalTOTH = (Math.random()*99 + 10).toFixed(2)\r\n        // var decLarge = gen.shuffleArray[DecimalHTOT, DecimalTOTH]\r\n        var decLarge = [DecimalHTOT, DecimalTOTH]\r\n\r\n        [numberL, numberL2, numberM] = [Math.floor(Math.random()*7 + 2), Math.floor(Math.random()*11+2), Math.floor(Math.random()*20+10)];\r\n        [numberS, numberS2, numberM2] = [Math.floor(Math.random()*6+2), DecimalH, Math.floor(Math.random()*20+10)];\r\n\r\n      if (Options.level === \"2\") {\r\n        [numberL, numberL2, numberM] = [Math.floor(Math.random()*17 + 12), decLarge[0], Math.floor(Math.random()*50+20)];\r\n        [numberS, numberS2, numberM2] = [Math.floor(Math.random()*9+2), DecimalH, Math.floor(Math.random()*50+20)];\r\n      } else if (Options.level === \"3\") {\r\n        [numberL, numberL2, numberM] = [Math.floor(Math.random()*19 + 7), Math.floor(Math.random()*100+20), Math.floor(Math.random()*200+50)];\r\n        [numberS, numberS2, numberM2] = [Math.floor(Math.random()*39+12), DecimalH, decLarge[0]];\r\n      }\r\n    }\r\n    //100 + (40÷8 - 9) × 11)\r\n  \r\n    var OoOA = `${simpleQArray[Math.floor(Math.random()*simpleQArray.length)]}           ${numberL} + (${numberS * numberL2} ÷ ${numberS} - ${numberS2}) × ${numberM2}`\r\n\r\n    var OoOB = `${simpleQArray[Math.floor(Math.random()*simpleQArray.length)]}           ${numberM} × (${numberL} - ${numberS*numberM2} ÷ ${numberS}) + ${numberL2}`\r\n    \r\n    var OoOC = `${simpleQArray[Math.floor(Math.random()*simpleQArray.length)]}           ${numberS}(${numberL} - ${numberS2}) + ${numberM}(${numberL2} + ${numberM2})`\r\n    \r\n    var OoOD = `${simpleQArray[Math.floor(Math.random()*simpleQArray.length)]}           [${numberL2} + (${numberS2} × ${numberM} - ${numberS})] × ${numberM2}`\r\n    \r\n    var OoOE = `${simpleQArray[Math.floor(Math.random()*simpleQArray.length)]}           ${numberL2}[${numberL} + ${numberM}(${numberM2+numberS} - ${numberS})]`\r\n    var problems = [OoOA, OoOB, OoOC, OoOD, OoOE]\r\n    var randomProblem = problems[Math.floor(Math.random()*problems.length)]\r\n    console.log(randomProblem)\r\n    var answer = \"\"\r\n    var wrong = \"\"\r\n        //100 + (40÷8 - 9) × 11)\r\n    if  (randomProblem === OoOA) {\r\n        answer = numberL+((numberS*numberL2/numberS-numberS2)*numberM2)\r\n        wrong = [numberL+numberS*numberL2/numberS-numberS2*numberM2,        ((((numberL+numberS)*numberL2)/numberS)-numberS2)*numberM2,\r\n            ((((numberL+numberS)*numberL2)/numberS)-numberS2)*numberM2, numberL+numberS*numberL2/numberS-(numberS2*numberM2)]\r\n        if (Options.specify === 'decimal') {\r\n            wrong.push((answer*10, answer/10, numberL+((numberS*numberL2/numberS-numberS2*10)*numberM2)))\r\n        } else {\r\n            wrong.push((answer+1, answer-2))\r\n        }\r\n        console.log(wrong)\r\n//40 x ( 100 - 50 ÷ 5 ) + 100\r\n    }else if  (randomProblem === OoOB) {\r\n        answer = numberM*(numberL-(numberS*numberM2/numberS)+numberL2)\r\n        wrong = [numberM*numberL-numberS*numberM2/numberS+numberL2, numberM*numberL-(numberS*numberM2/numberS)+numberL2,\r\n            ((((numberM*numberL)-numberS)*numberM2)/numberS)+numberL2]\r\n        if (Options.specify === 'decimal') {\r\n            wrong.push((answer*10, answer/10))\r\n        } else {\r\n            wrong.push((answer+1, answer-2))\r\n\r\n        }\r\n        console.log(wrong)\r\n\r\n//10(100 - 8) + 40(100 + 40)\r\n    }else if  (randomProblem === OoOC) {\r\n        answer = numberS*(numberL-numberS2)+numberM*(numberL2+numberM2)\r\n        wrong = [numberS*numberL-numberS2+numberM*numberL2+numberM2, ((((numberL+numberS)*numberL2)/numberS)-numberS2)*numberM2]\r\n        if (Options.specify === 'decimal') {\r\n            wrong.push((answer*10, answer*100, answer/10))\r\n            // wrong = gen.shuffleArray(wrong)\r\n        } else {\r\n            wrong.push((answer+1, answer-2, answer+3))\r\n            // wrong = gen.shuffleArray(wrong)\r\n        }\r\n        console.log(wrong)\r\n\r\n  //[100+(8x40-10)]x40\r\n    }else if  (randomProblem === OoOD) {\r\n        answer = (numberL2+(numberS2*numberM-numberS))*numberM2\r\n        wrong = [(numberL2+(numberS2*numberM-numberS))*numberM2, (numberL2+numberS2)*numberM-numberS,\r\n                 numberL2+(numberS2*numberM-numberS*numberM2),   (((numberL2+numberS2)*numberM)-numberS)*numberM2]\r\n        if (Options.specify === 'decimal') {\r\n            wrong.push((answer*10))\r\n            // wrong = gen.shuffleArray(wrong)\r\n        } else {\r\n            wrong.push((answer+1))\r\n            // wrong = gen.shuffleArray(wrong)\r\n        }\r\n        console.log(wrong)\r\n\r\n//[100+(8x40-10)]x40\r\n    }else if  (randomProblem === OoOE) {\r\n        answer = numberL2*(numberL+numberM*(numberM2))\r\n        wrong = [numberL2+(numberL+numberM+(numberM2+numberM2+numberM2)), numberL2*(numberL+numberM*(numberM2)),\r\n                numberL2*numberL + numberM*numberM2, (numberL2*numberL+numberM)*numberM2+numberS-numberS]\r\n        if (Options.specify === 'decimal') {\r\n            wrong.push((answer*10))\r\n            // wrong = gen.shuffleArray(wrong)\r\n        } else {\r\n            wrong.push((answer+1, answer-2))\r\n            // wrong = gen.shuffleArray(wrong)\r\n        }\r\n        console.log(wrong)\r\n\r\n          \r\n    }else {\r\n        answer = 0\r\n        wrong = [0, 0, 0]\r\n    }\r\n    \r\n\r\n    // wrong = gen.shuffleArray(wrong)\r\n    console.log(wrong)\r\n    // var AC = gen.shuffleArray(answer, wrong[0], wrong[1], wrong[2])\r\n    var AC = [answer, wrong[0], wrong[1], wrong[2]]\r\n\r\n    console.log(`${randomProblem} \\n    ${AC[0]}  \\n    ${AC[1]}  \\n    ${AC[2]}  \\n    ${AC[3]}`)\r\n\r\n\r\n}\r\n\r\n\r\n",{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":12},{"ruleId":"56","severity":1,"message":"57","line":94,"column":18,"nodeType":"54","messageId":"58","endLine":94,"endColumn":19},{"ruleId":"56","severity":1,"message":"59","line":95,"column":15,"nodeType":"54","messageId":"58","endLine":95,"endColumn":23},{"ruleId":"52","severity":1,"message":"60","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":30},{"ruleId":"52","severity":1,"message":"61","line":16,"column":24,"nodeType":"54","messageId":"55","endLine":16,"endColumn":32},{"ruleId":"62","severity":1,"message":"63","line":23,"column":17,"nodeType":"54","messageId":"64","endLine":23,"endColumn":19},{"ruleId":"52","severity":1,"message":"61","line":41,"column":28,"nodeType":"54","messageId":"55","endLine":41,"endColumn":36},{"ruleId":"52","severity":1,"message":"65","line":42,"column":9,"nodeType":"54","messageId":"55","endLine":42,"endColumn":10},{"ruleId":"52","severity":1,"message":"65","line":61,"column":9,"nodeType":"54","messageId":"55","endLine":61,"endColumn":10},{"ruleId":"52","severity":1,"message":"61","line":62,"column":28,"nodeType":"54","messageId":"55","endLine":62,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":70,"column":39,"nodeType":"68","messageId":"69","endLine":70,"endColumn":40},{"ruleId":"52","severity":1,"message":"65","line":83,"column":9,"nodeType":"54","messageId":"55","endLine":83,"endColumn":10},{"ruleId":"52","severity":1,"message":"61","line":90,"column":28,"nodeType":"54","messageId":"55","endLine":90,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":99,"column":39,"nodeType":"68","messageId":"69","endLine":99,"endColumn":40},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"56","severity":1,"message":"74","line":21,"column":15,"nodeType":"54","messageId":"58","endLine":21,"endColumn":28},{"ruleId":"52","severity":1,"message":"75","line":21,"column":15,"nodeType":"54","messageId":"55","endLine":21,"endColumn":28},{"ruleId":"52","severity":1,"message":"65","line":24,"column":14,"nodeType":"54","messageId":"55","endLine":24,"endColumn":15},{"ruleId":"52","severity":1,"message":"76","line":24,"column":17,"nodeType":"54","messageId":"55","endLine":24,"endColumn":18},{"ruleId":"52","severity":1,"message":"77","line":27,"column":13,"nodeType":"54","messageId":"55","endLine":27,"endColumn":21},{"ruleId":"52","severity":1,"message":"78","line":30,"column":13,"nodeType":"54","messageId":"55","endLine":30,"endColumn":24},{"ruleId":"79","severity":1,"message":"80","line":37,"column":17,"nodeType":"81","messageId":"82","endLine":37,"endColumn":18},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-redeclare","'x' is already defined.","redeclared","'question' is already defined.","'getDefaultNormalizer' is defined but never used.","'numberXS' is assigned a value but never used.","no-use-before-define","'AC' was used before it was defined.","usedBeforeDefined","'f' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'noPlaceHolder' is already defined.","'noPlaceHolder' is assigned a value but never used.","'r' is assigned a value but never used.","'DecimalT' is assigned a value but never used.","'decTwoDigit' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]